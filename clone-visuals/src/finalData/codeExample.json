[
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/Utils.java",
    "size": 477,
    "example": "(pattern.length() > mIdx && value.length() > sIdx) {\r",
    "cloneID": "b19732fdac4246c8e61423e2b971665a",
    "clone": "7d7e5a0ada7090b3f4eb21f08bcb670e",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/Utils.java",
    "size": 477,
    "example": "(pattern.length() > mIdx && value.length() > sIdx) {\r",
    "cloneID": "3defe318b2fb51bf79118574b0545c32",
    "clone": "7d7e5a0ada7090b3f4eb21f08bcb670e",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestOperatoren.java",
    "size": 281,
    "example": " a(\"nvarchar2(100)\"    , new String(\"abc\"),      new String(\"qwert\")),\r",
    "cloneID": "09af8805755f6f5b49b5f639287da6da",
    "clone": "257a8d5d468a01ca9e64fd6d08483cc7",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestJoins.java",
    "size": 218,
    "example": " a(\"nvarchar2(100)\"    , new String(\"abc\"),      new String(\"qwert\")),\r",
    "cloneID": "d96f872b651cf8bb02863416699bcdf0",
    "clone": "257a8d5d468a01ca9e64fd6d08483cc7",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestOperatoren.java",
    "size": 281,
    "example": " a(\"blob\"              , new byte[]{12, 45, 1},  new byte[]{12, 45, 2, 56, 89}),\r",
    "cloneID": "98ba044e8ad281d1b484c4f61cf73273",
    "clone": "84a5b4774da9c890bdd88e1f9245d5c5",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestJoins.java",
    "size": 218,
    "example": " a(\"blob\"              , new byte[]{12, 45, 1},  new byte[]{12, 45, 2, 56, 89}),\r",
    "cloneID": "710b8cd66a51ccecf799d4d65beccbb9",
    "clone": "84a5b4774da9c890bdd88e1f9245d5c5",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/IndexNode.java",
    "size": 451,
    "example": "\tint mid = start + (end - start)/2;\r",
    "cloneID": "139cd16ea68cfaff15b1f2cec24d924d",
    "clone": "1c89d9f6bc5f10517e90d75083dcb222",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/IndexNode.java",
    "size": 451,
    "example": "\tint mid = start + (end - start)/2;\r",
    "cloneID": "4499e78b0cc03c1d6ec6ea3b94362bb9",
    "clone": "1c89d9f6bc5f10517e90d75083dcb222",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunction.java",
    "size": 124,
    "example": "\tObject[] params = {\r\t\t\t\tSQLTokenizer.getKeyWord(dataType),\r\t\t\t\tSQLTokenizer.getKeyWord(getFunction())\r\t\t};",
    "cloneID": "3dccf24735e3609b5206d71d65ef9041",
    "clone": "309eea215bba456752ef73734971fe5f",
    "cloneSize": 4
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunction.java",
    "size": 124,
    "example": "\tObject[] params = {\r    \t\t\tSQLTokenizer.getKeyWord(dataType),\r    \t\t\tSQLTokenizer.getKeyWord(getFunction())\r    \t};",
    "cloneID": "8295c7b9465c8613719370a0a21c70d9",
    "clone": "e75825d74ef549bd0a51abb6f68374e6",
    "cloneSize": 4
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/BenchTest.java",
    "size": 753,
    "example": "}catch(Exception e){\r            System.out.println(\"  Failed:\"+e);\r        }",
    "cloneID": "333ca102a805756590b69c9fffea89be",
    "clone": "1923019f0eb191e626fb3571caa097bc",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/BenchTest.java",
    "size": 753,
    "example": "}catch(Exception e){\r            System.out.println(\"  Failed:\"+e);\r        }",
    "cloneID": "ef7d8ed8c0bf161b78a7184bc3de5ebb",
    "clone": "1923019f0eb191e626fb3571caa097bc",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/BenchTest.java",
    "size": 753,
    "example": "}catch(Exception e){\r            System.out.println(\"  Failed:\"+e);\r        }",
    "cloneID": "52a1dc838f9aac39722f7ad89d22c2c5",
    "clone": "1923019f0eb191e626fb3571caa097bc",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/BenchTest.java",
    "size": 753,
    "example": "}catch(Exception e){\r            System.out.println(\"  Failed:\"+e);\r        }",
    "cloneID": "3401eb76aaf67f062f11bc7160d6452b",
    "clone": "1923019f0eb191e626fb3571caa097bc",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/BenchTest.java",
    "size": 753,
    "example": "}catch(Exception e){\r            System.out.println(\"  Failed:\"+e);\r        }",
    "cloneID": "bfd60b241588c4104838b8de9493471c",
    "clone": "1923019f0eb191e626fb3571caa097bc",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/BenchTest.java",
    "size": 753,
    "example": "}catch(Exception e){\r            System.out.println(\"  Failed:\" + e);\r        }",
    "cloneID": "3290338284006a8c987ff20cfa992196",
    "clone": "f55ad0c6a40fbbdbc6d0d1a624f2fd17",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/BenchTest.java",
    "size": 753,
    "example": "}catch(Exception e){\r            System.out.println(\"  Failed:\"+e);\r        }",
    "cloneID": "43129ae83e21e625af14d3a2945bc186",
    "clone": "1923019f0eb191e626fb3571caa097bc",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/BenchTest.java",
    "size": 753,
    "example": "}catch(Exception e){\r            System.out.println(\"  Failed:\"+e);\r        }",
    "cloneID": "a59eec76ffa2639977c19ba9a4edbb0c",
    "clone": "1923019f0eb191e626fb3571caa097bc",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/BenchTest.java",
    "size": 753,
    "example": "}catch(Exception e){\r            System.out.println(\"  Failed:\"+e);\r        }",
    "cloneID": "fa55694d98661b609ed88cf791a0deed",
    "clone": "1923019f0eb191e626fb3571caa097bc",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/BenchTest.java",
    "size": 753,
    "example": "}catch(Exception e){\r            System.out.println(\"  Failed:\"+e);\r        }",
    "cloneID": "13f8438e6c7bc5cb326f1bb73616db99",
    "clone": "1923019f0eb191e626fb3571caa097bc",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/BenchTest.java",
    "size": 753,
    "example": "}catch(Exception e){\r            System.out.println(\"  Failed:\"+e);\r        }",
    "cloneID": "2864e222e967c9d3db67b22c8d228279",
    "clone": "1923019f0eb191e626fb3571caa097bc",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/BenchTest.java",
    "size": 753,
    "example": "}catch(Exception e){\r            System.out.println(\"  Failed:\"+e);\r        }",
    "cloneID": "5f4e319341d32ea5523f5624066aabff",
    "clone": "1923019f0eb191e626fb3571caa097bc",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/FileIndexNode.java",
    "size": 99,
    "example": " StoreImpl store = StoreImpl.createStore( null, storePage, SQLTokenizer.INSERT, fileOffset);\r",
    "cloneID": "788d0f52fc7c1950093149a3fdaba819",
    "clone": "1dc30b4685096e312bf25ad253082528",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/FileIndexNode.java",
    "size": 99,
    "example": " StoreImpl store = StoreImpl.createStore( null, storePage, SQLTokenizer.INSERT, fileOffset);\r",
    "cloneID": "51fde141265d768f676df3123859e456",
    "clone": "1dc30b4685096e312bf25ad253082528",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/CommandSelect.java",
    "size": 570,
    "example": "(src != null && (!(src instanceof ExpressionValue) || !((ExpressionValue)src).isEmpty())){\t\r",
    "cloneID": "bb85282232b1af5ac87b9d933c0f4fe0",
    "clone": "bcf818d541f18573a606b72617c1e2a0",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/CommandSelect.java",
    "size": 570,
    "example": "(src != null && (!(src instanceof ExpressionValue) || !((ExpressionValue)src).isEmpty())){\t\r",
    "cloneID": "e43316570bbafaa4960927b405c5f517",
    "clone": "bcf818d541f18573a606b72617c1e2a0",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SSDatabaseMetaData.java",
    "size": 1039,
    "example": "\tString[] colNames = {\"SCOPE\", \"COLUMN_NAME\", \"DATA_TYPE\", \"TYPE_NAME\", \"COLUMN_SIZE\", \"BUFFER_LENGTH\", \"DECIMAL_DIGITS\", \"PSEUDO_COLUMN\"};\r",
    "cloneID": "d05babfdc1b21333d302f9ef5105ab2f",
    "clone": "fbeef0851a23e074d4a5291bfb1a10cb",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SSDatabaseMetaData.java",
    "size": 1039,
    "example": "\tString[] colNames = {\"SCOPE\", \"COLUMN_NAME\", \"DATA_TYPE\", \"TYPE_NAME\", \"COLUMN_SIZE\", \"BUFFER_LENGTH\", \"DECIMAL_DIGITS\", \"PSEUDO_COLUMN\"};\r",
    "cloneID": "273d2c83d4fad9d9a24e5cc9d14e4b66",
    "clone": "fbeef0851a23e074d4a5291bfb1a10cb",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestDBMetaData.java",
    "size": 310,
    "example": " String[] colNames = {\"SCOPE\", \"COLUMN_NAME\", \"DATA_TYPE\", \"TYPE_NAME\", \"COLUMN_SIZE\", \"BUFFER_LENGTH\", \"DECIMAL_DIGITS\", \"PSEUDO_COLUMN\"};\r",
    "cloneID": "ec20d07117268e816b4b9571eb31be3f",
    "clone": "2e6c6948bb68acf55c7dc3609fecd189",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestOrderBy.java",
    "size": 821,
    "example": "n{\r\t\tinit();\r\t\tConnection con = AllTests.getConnection();\r\t\tStatement st = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);\r\t\tResultSet rs;\r\t\tint count;\r\t\t\r\t\trs = st.executeQuery(\"SELECT * FROM \" + table1 + \" ORDER  by v\");\r\t\t\r\t\t//jetzt irgendwo in die Mitte scrollen\r\t\trs.next();\r\t\trs.next();\r\t\trs.previous(); //dann soll der Zeiger nicht am Ende des bereits gefetchten stehen\r\t\t\r\t\trs.last();\r\t\tcount = 0;\r\t\twhile(rs.previous()) count++;\t\t\r\t\tassertEquals( valueCount, count );\r\r\t\trs.beforeFirst();\r\t\tcount = -1;\r\t\twhile(rs.next()) count++;\t\t\r\t\tassertEquals( valueCount, count );\r\r\t\trs.beforeFirst();\r\t\tcount = -1;\r\t\twhile(rs.next()) count++;\t\t\r\t\tassertEquals( valueCount, count );\r\t}",
    "cloneID": "8b66d962f785f3e0bc72530428bf6d2e",
    "clone": "fe97dcd931fc05fc4a7cb2efedd49e20",
    "cloneSize": 29
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestOrderBy.java",
    "size": 821,
    "example": "n{\r\t\tinit();\r\t\tConnection con = AllTests.getConnection();\r\t\tStatement st = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);\r\t\tResultSet rs;\r\t\tint count;\r\t\t\r\t\trs = st.executeQuery(\"SELECT * FROM \" + table1 + \" ORDER  by i desc, d\");\r\t\t\r\t\t//jetzt irgendwo in die Mitte scrollen\r\t\trs.next();\r\t\trs.next();\r\t\trs.previous(); //dann soll der Zeiger nicht am Ende des bereits gefetchten stehen\r\t\t\r\t\trs.last();\r\t\tcount = 0;\r\t\twhile(rs.previous()) count++;\t\t\r\t\tassertEquals( valueCount, count );\r\r\t\trs.beforeFirst();\r\t\tcount = -1;\r\t\twhile(rs.next()) count++;\t\t\r\t\tassertEquals( valueCount, count );\r\r\t\trs.beforeFirst();\r\t\tcount = -1;\r\t\twhile(rs.next()) count++;\t\t\r\t\tassertEquals( valueCount, count );\r\t}",
    "cloneID": "7cfe33fd7ade51f5d5deb329815b8e96",
    "clone": "962b06a3fad21bae8835bbf68c7d07b2",
    "cloneSize": 29
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestOperatoren.java",
    "size": 281,
    "example": " a(\"bigint\"            , new Long(3),            new Long(4)),\r",
    "cloneID": "56cdddd841ab1cbe7baeec0c306cf574",
    "clone": "4825b964a050610956f21cc722b51dc9",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestJoins.java",
    "size": 218,
    "example": " a(\"bigint\"            , new Long(3),            new Long(4)),\r",
    "cloneID": "d7158392e83b76670d9fb2a678ad2178",
    "clone": "4825b964a050610956f21cc722b51dc9",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunctionReturnInt.java",
    "size": 97,
    "example": " {\r\t\tif(isNull()) return null;\r\t\treturn new MutableNumeric(getInt());\r\t}",
    "cloneID": "92b235d493084333232ef2c5753adba0",
    "clone": "63872eb1d80d7631ebd2dd99d5ea53df",
    "cloneSize": 4
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunctionTimestampDiff.java",
    "size": 170,
    "example": " {\r\t\tif(isNull()) return null;\r\t\treturn new MutableNumeric(getInt());\r\t}",
    "cloneID": "868d13eb59d848d6951c0b0e9f6b10a9",
    "clone": "63872eb1d80d7631ebd2dd99d5ea53df",
    "cloneSize": 4
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestExceptionMethods.java",
    "size": 309,
    "example": "}catch(SQLException ex){\r            assertSQLException(\"HY010\", 0, ex);\r        }",
    "cloneID": "d6af572e48682dd3bc39928b3a1c386c",
    "clone": "e8ac722c0cd37000d878dbb669492752",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestExceptionMethods.java",
    "size": 309,
    "example": "}catch(SQLException ex){\r            assertSQLException(\"HY010\", 0, ex);\r        }",
    "cloneID": "06d6e73269265e964fcefa8f5d49af20",
    "clone": "e8ac722c0cd37000d878dbb669492752",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestExceptionMethods.java",
    "size": 309,
    "example": "}catch(SQLException ex){\r            assertSQLException(\"HY010\", 0, ex);\r        }",
    "cloneID": "0a2870a0ef4126750f1a009aa2393d5a",
    "clone": "e8ac722c0cd37000d878dbb669492752",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestExceptionMethods.java",
    "size": 309,
    "example": "}catch(SQLException ex){\r            assertSQLException(\"HY010\", 0, ex);\r        }",
    "cloneID": "b588c8fcf569c845db511e3cbbe75453",
    "clone": "e8ac722c0cd37000d878dbb669492752",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestExceptionMethods.java",
    "size": 309,
    "example": "}catch(SQLException ex){\r            assertSQLException(\"HY010\", 0, ex);\r        }",
    "cloneID": "53e87e0736eb17ba7c5842bbc9c920cf",
    "clone": "e8ac722c0cd37000d878dbb669492752",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestExceptionMethods.java",
    "size": 309,
    "example": "}catch(SQLException ex){\r            assertSQLException(\"HY010\", 0, ex);\r        }",
    "cloneID": "0a1cd2cbb9d1f986c9ce6d57c19467f8",
    "clone": "e8ac722c0cd37000d878dbb669492752",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestExceptionMethods.java",
    "size": 309,
    "example": "}catch(SQLException ex){\r            assertSQLException(\"HY010\", 0, ex);\r        }",
    "cloneID": "09cc04f285a780b5c8123a81fcbde5e9",
    "clone": "e8ac722c0cd37000d878dbb669492752",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunctionTimestampDiff.java",
    "size": 170,
    "example": "\tDateTime.Details details1 = new DateTime.Details(param1.getLong());\r",
    "cloneID": "36fc56b0918fd80db7949188015ebd23",
    "clone": "0df3e71cdd9010064ea49854aa8e082e",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunctionTimestampDiff.java",
    "size": 170,
    "example": "\tDateTime.Details details1 = new DateTime.Details(param1.getLong());\r",
    "cloneID": "68efea5203bd96f5a38439e8b97317bf",
    "clone": "0df3e71cdd9010064ea49854aa8e082e",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunctionTimestampDiff.java",
    "size": 170,
    "example": "\tDateTime.Details details1 = new DateTime.Details(param1.getLong());\r",
    "cloneID": "f302387d7ad3f4c790b9b6bc96f6c09c",
    "clone": "0df3e71cdd9010064ea49854aa8e082e",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunctionReturnString.java",
    "size": 93,
    "example": "\tfinal boolean getBoolean() throws Exception {\r\t\tif(isNull()) return false;\r\t\treturn Utils.string2boolean(getString().trim());\r\t}",
    "cloneID": "61f5511a0a6cf40c0556b86d466412ab",
    "clone": "2a7751d4e58cf31646f36a500f6b2da5",
    "cloneSize": 4
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunctionReturnP1StringAndBinary.java",
    "size": 91,
    "example": "\tfinal boolean getBoolean() throws Exception {\r\t\tif(isNull()) return false;\r\t\treturn Utils.string2boolean(getString().trim());\r\t}",
    "cloneID": "b94553d989b7b64ed3d4b901d721cfca",
    "clone": "2a7751d4e58cf31646f36a500f6b2da5",
    "cloneSize": 4
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestOperatoren.java",
    "size": 281,
    "example": " a(\"long raw\"          , new byte[]{12, 45, 1},  new byte[]{12, 45, 2, 56, 89}),\r",
    "cloneID": "f24fb9e04fd5405b3a4f66da1847463d",
    "clone": "bb9b1cc5106241b22d4390119ab47a62",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestJoins.java",
    "size": 218,
    "example": " a(\"long raw\"          , new byte[]{12, 45, 1},  new byte[]{12, 45, 2, 56, 89}),\r",
    "cloneID": "b012027bfe127e7a56449f5c221bf4f3",
    "clone": "bb9b1cc5106241b22d4390119ab47a62",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/StorePageMap.java",
    "size": 266,
    "example": "\tint i = (int)(key % table.length);\r",
    "cloneID": "1d81284e0b04bc71e16e4540ff8d901e",
    "clone": "0915997096b2add9ec315637a8dfcd10",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/StorePageMap.java",
    "size": 266,
    "example": "\tint i = (int)(key % table.length);\r",
    "cloneID": "81e87d6af839a175ddb9ec0909b27f50",
    "clone": "0915997096b2add9ec315637a8dfcd10",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/StorePageMap.java",
    "size": 266,
    "example": "\tint i = (int)(key % table.length);\r",
    "cloneID": "bf594e0493dddbde06f4d98bef5e1415",
    "clone": "0915997096b2add9ec315637a8dfcd10",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/BasicTestCase.java",
    "size": 373,
    "example": "\tassertTrue  (\"Wrong Precision (\" + rm.getColumnTypeName(i) + \") for Column \"+i+\": \"+rm.getPrecision(i), rm.getPrecision(i) > 0);\r",
    "cloneID": "ba2ecb6af77f2fdec17edd97c78ee8f7",
    "clone": "4555558e20c67a5a6733ca7e6d6478c3",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/BasicTestCase.java",
    "size": 373,
    "example": "\tassertTrue  (\"Wrong Precision (\" + rm.getColumnTypeName(i) + \") for Column \"+i, rm.getPrecision(i) > 0);\r",
    "cloneID": "8bb5fee740bbb006fb6cf10250d2d989",
    "clone": "28540f1dd1c96dd35f26580a823be450",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SQLParser.java",
    "size": 2007,
    "example": " if(token2 != null && token2.value == SQLTokenizer.POINT){\r                            expr.setNameAfterTableAlias( nextIdentifier() );\r                        }else{\r                            previousToken();\r                        }",
    "cloneID": "a5d6ab5e5d3abda16b6132c94d5158f6",
    "clone": "cfdc099cc1e0aa7ac962461701d8da0d",
    "cloneSize": 5
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SQLParser.java",
    "size": 2007,
    "example": " if(token2 != null && token2.value == SQLTokenizer.POINT){\r                                    expr.setNameAfterTableAlias( nextIdentifier() );\r                                }else{\r                                    previousToken();\r                                }",
    "cloneID": "c682fa6e9b7c0fe8ca41474ba2997b94",
    "clone": "0e9fd7e062419170333e027619ac2775",
    "cloneSize": 5
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestAlterTable.java",
    "size": 117,
    "example": "y{\r            con.setTransactionIsolation(isolation);\r            con.setAutoCommit(true);\r        }",
    "cloneID": "6f4fa10e58df00a17af8d9d7d12b1b2f",
    "clone": "0267e60bc5c96ba6292367c701e8667b",
    "cloneSize": 4
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestAlterTable.java",
    "size": 117,
    "example": "y{\r            con.setTransactionIsolation(isolation);\r            con.setAutoCommit(true);\r        }",
    "cloneID": "f5722b457ec235cfadb9627993e2dff8",
    "clone": "0267e60bc5c96ba6292367c701e8667b",
    "cloneSize": 4
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/BenchTest.java",
    "size": 753,
    "example": " Statement st = con.createStatement( ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE );\r",
    "cloneID": "e33b918c496dd8635a154c919a5024a9",
    "clone": "e9cfb7ccf0be7eaefe3d95ef6ab86c30",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/BenchTest.java",
    "size": 753,
    "example": " Statement st = con.createStatement( ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE );\r",
    "cloneID": "c401c84cf7d1ecaab96e3770381cc33f",
    "clone": "e9cfb7ccf0be7eaefe3d95ef6ab86c30",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/BenchTest.java",
    "size": 753,
    "example": " Statement st = con.createStatement( ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE );\r",
    "cloneID": "5f0544473d6141d461b4071797fd56c2",
    "clone": "e9cfb7ccf0be7eaefe3d95ef6ab86c30",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/BenchTest.java",
    "size": 753,
    "example": " Statement st = con.createStatement( ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE );\r",
    "cloneID": "591e1fc08474ba177251d36ac126d28e",
    "clone": "e9cfb7ccf0be7eaefe3d95ef6ab86c30",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/BenchTest.java",
    "size": 753,
    "example": " Statement st = con.createStatement( ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE );\r",
    "cloneID": "48ccf39d8962f4c812b5b1df0061b230",
    "clone": "e9cfb7ccf0be7eaefe3d95ef6ab86c30",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestStatement.java",
    "size": 347,
    "example": " Statement st = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);\r",
    "cloneID": "2d2d30f68da671438cd1642d0b22d84e",
    "clone": "e2b7d861130a4c6c03db8493e6f89563",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestScrollable.java",
    "size": 319,
    "example": "\tStatement st = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);\r",
    "cloneID": "edb2217f5bd35b7b6a7dc72b79d0d3d8",
    "clone": "b04c8408d2816321d6084414077ec1ac",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestScrollable.java",
    "size": 319,
    "example": " Statement st = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);\r",
    "cloneID": "6a83b38117b092ffaedc1c14b2e6c065",
    "clone": "e2b7d861130a4c6c03db8493e6f89563",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestScrollable.java",
    "size": 319,
    "example": " Statement st = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);\r",
    "cloneID": "acb0a0834cd3688abbb8c8989e370b41",
    "clone": "e2b7d861130a4c6c03db8493e6f89563",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestScrollable.java",
    "size": 319,
    "example": " Statement st = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);\r",
    "cloneID": "e718b91023e479791f00c27b2e4b31a5",
    "clone": "e2b7d861130a4c6c03db8493e6f89563",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestScrollable.java",
    "size": 319,
    "example": " Statement st = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);\r",
    "cloneID": "3bf6db51263e5582b03eee5a33e551b8",
    "clone": "e2b7d861130a4c6c03db8493e6f89563",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestScrollable.java",
    "size": 319,
    "example": " Statement st = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);\r",
    "cloneID": "a21acd8b51e94ef6369b47e680cfd343",
    "clone": "e2b7d861130a4c6c03db8493e6f89563",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestResultSet.java",
    "size": 282,
    "example": " Statement st = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);\r",
    "cloneID": "d8a2c47f64e0da7ea67a7f18b746c2cf",
    "clone": "e2b7d861130a4c6c03db8493e6f89563",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestResultSet.java",
    "size": 282,
    "example": " Statement st = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);\r",
    "cloneID": "9603b0460b534b0c498cb1df7584d615",
    "clone": "e2b7d861130a4c6c03db8493e6f89563",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestResultSet.java",
    "size": 282,
    "example": " Statement st = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);\r",
    "cloneID": "4a7ef860b26818be5f1582ea48f62a8b",
    "clone": "e2b7d861130a4c6c03db8493e6f89563",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestResultSet.java",
    "size": 282,
    "example": " Statement st = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);\r",
    "cloneID": "eeaa3348ba8f763bd592e19f1ecf59e8",
    "clone": "e2b7d861130a4c6c03db8493e6f89563",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestResultSet.java",
    "size": 282,
    "example": " Statement st = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);\r",
    "cloneID": "3c95a28130b9cf72d05bea5b925a7be4",
    "clone": "e2b7d861130a4c6c03db8493e6f89563",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestOrderBy.java",
    "size": 821,
    "example": "\tStatement st = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);\r",
    "cloneID": "2c62c1c783a0fbcdf0b629e82e2d5ee9",
    "clone": "b04c8408d2816321d6084414077ec1ac",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestOrderBy.java",
    "size": 821,
    "example": "\tStatement st = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);\r",
    "cloneID": "ce8495e504706918f80cfda8a5189c4e",
    "clone": "b04c8408d2816321d6084414077ec1ac",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestOrderBy.java",
    "size": 821,
    "example": "\tStatement st = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);\r",
    "cloneID": "05f1389e133760d8971888de71fa7e97",
    "clone": "b04c8408d2816321d6084414077ec1ac",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SQLParser.java",
    "size": 2007,
    "example": "\ttry{\r\t\t\t\t\t\tint maxRows = Integer.parseInt(token.getName(sql));\r\t\t\t\t\t\tselCmd.setMaxRows(maxRows);\r\t\t\t\t\t}catch(NumberFormatException e){\r\t\t\t\t\t\tthrow createSyntaxError(token, Language.STXADD_NOT_NUMBER, token.getName(sql));\r\t\t\t\t\t}",
    "cloneID": "2b6a98eaf942950be5492965255415bf",
    "clone": "a383a273f7f0fe594c9732054363ccae",
    "cloneSize": 6
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SQLParser.java",
    "size": 2007,
    "example": " try{\r            int maxRows = Integer.parseInt(token.getName(sql));\r            selCmd.setMaxRows(maxRows);\r        }catch(NumberFormatException e){\r            throw createSyntaxError(token, Language.STXADD_NOT_NUMBER, token.getName(sql));\r        }",
    "cloneID": "7d2515cb197e6b160367680277310e3e",
    "clone": "72ef68dcc31cb85fd4da04fdba438189",
    "cloneSize": 6
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/Index.java",
    "size": 547,
    "example": "\t// the first digit include 0-null; 1-empty; 2 another value\r\t\t\tchar digit = (i<0) ? (length == 0 ? (char)1 : 2)\r\t\t\t\t\t\t\t  : (key[i]);",
    "cloneID": "6afdd4d40c3e47b167d3851e01764840",
    "clone": "1840c55e7b027e1081751afdf84048b2",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/Index.java",
    "size": 547,
    "example": "\t// the first digit include 0-null; 1-empty; 2 another value\r\t\t\tchar digit = (i<0) ? (length == 0 ? (char)1 : 2)\r\t\t\t\t\t\t\t  : (key[i]);",
    "cloneID": "628d5cbd7f700d4fe92fac4ed0732aea",
    "clone": "1840c55e7b027e1081751afdf84048b2",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/FileIndexNode.java",
    "size": 99,
    "example": " StoreImpl store = StoreImpl.createStore( null, storePage, SQLTokenizer.SELECT, offset);\r",
    "cloneID": "9ffc0ab4d2dbee86700b5a1da89a39e9",
    "clone": "0a37f8b2a67ca40447c563269b27ff59",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/View.java",
    "size": 146,
    "example": "\tStoreImpl store = StoreImpl.createStore( null, storePage, SQLTokenizer.SELECT, offset);\r",
    "cloneID": "2d8332207262abd59c7e31333efab4c8",
    "clone": "1b5e3190af3ad771bc7d7be3e1b2d865",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestThreads.java",
    "size": 177,
    "example": " // wait until all threads are finish\r        for(int i = 0; i < threadList.size(); i++){\r            Thread thread = (Thread)threadList.get(i);\r            thread.join(5000);\r        }",
    "cloneID": "4cdbd934a5b3db97581a4879fa965f12",
    "clone": "f19e342c5203c1f2ca7c3a1e4e2f2c69",
    "cloneSize": 5
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestThreads.java",
    "size": 177,
    "example": " // wait until all threads are finish\r            for(int i = 0; i < threadList.size(); i++){\r                Thread thread = (Thread)threadList.get(i);\r                thread.join(5000);\r            }",
    "cloneID": "d5a95a34452739921c9e958a2e40d696",
    "clone": "4e4220c8a2b4df2f32c362fc503dc97f",
    "cloneSize": 5
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestThreads.java",
    "size": 177,
    "example": " // wait until all threads are finish\r            for(int i = 0; i < threadList.size(); i++){\r                Thread thread = (Thread)threadList.get(i);\r                thread.join(5000);\r            }",
    "cloneID": "beaca4630bc6016cd995de3bebe11113",
    "clone": "4e4220c8a2b4df2f32c362fc503dc97f",
    "cloneSize": 5
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunctionBitLen.java",
    "size": 64,
    "example": "\tfinal int getInt() throws Exception {\r        if(isNull()) return 0;\r\r        String str = param1.getString();\r\t\t\r\t\treturn str.length() * BYTES_PER_CHAR * 8;\r\t}",
    "cloneID": "bcc9e4a6d06e17bda4c40b88653655f1",
    "clone": "57de4ef6fada00dec3bfcf92763868c9",
    "cloneSize": 7
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunctionOctetLen.java",
    "size": 64,
    "example": "\tfinal int getInt() throws Exception {\r        if(isNull()) return 0;\r\r        String str = param1.getString();\r\t\t\r\t\treturn str.length() * BYTES_PER_CHAR;\r\t}",
    "cloneID": "1b21c9f5c1be79b321527e3864d8a511",
    "clone": "5ce372b3b639fca7efc691906f96153a",
    "cloneSize": 7
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/BenchTest.java",
    "size": 753,
    "example": " java.io.FileInputStream fis = new java.io.FileInputStream(tableName+\".bin\");\r",
    "cloneID": "ba4b9b9ad75026ef76aad626edc643eb",
    "clone": "bb99f33f9fab0e4b99691fabc439921e",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/BenchTest.java",
    "size": 753,
    "example": " java.io.FileInputStream fis = new java.io.FileInputStream(tableName+\".bin\");\r",
    "cloneID": "f1125a3f879360d14bb4da78a1ff1eda",
    "clone": "bb99f33f9fab0e4b99691fabc439921e",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/StoreImpl.java",
    "size": 1548,
    "example": "\t// we need to create a new page and change the old page to a UPDATE_POINTER\r\t\t\t\t((TableStorePage)newData.storePage).lockType = TableView.LOCK_INSERT;",
    "cloneID": "e28b482eed61cfc1a2ac1f5c33ab59f3",
    "clone": "1249edaf8deb71c0fa4e9160a11a34f9",
    "cloneSize": 2
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/StoreImpl.java",
    "size": 1548,
    "example": "\t// we need to create a new page and delete the old page\r\t\t\t\t((TableStorePage)newData.storePage).lockType = TableView.LOCK_INSERT;",
    "cloneID": "6f50f372646f3954ac8f2113202b55dd",
    "clone": "d954ad80588577c9889d2f060eadcf78",
    "cloneSize": 2
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestOperatoren.java",
    "size": 281,
    "example": " a(\"smallmoney\"        , new Float(3.45),        new Float(4.56)),\r",
    "cloneID": "03024cde487adcd6e0a4242c35f7583b",
    "clone": "0a965b1f979e5cb4a72629a9ce735f24",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestJoins.java",
    "size": 218,
    "example": " a(\"smallmoney\"        , new Float(3.45),        new Float(4.56)),\r",
    "cloneID": "9632cd2096c5344cc72f168c004b0cff",
    "clone": "0a965b1f979e5cb4a72629a9ce735f24",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunctionTimestampDiff.java",
    "size": 170,
    "example": "\tDateTime.Details details2 = new DateTime.Details(param2.getLong());\r",
    "cloneID": "207de1e1a258633a0819456c475598b1",
    "clone": "ef6ad308df152ad04b37c7a3dd6b2e45",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunctionTimestampDiff.java",
    "size": 170,
    "example": "\tDateTime.Details details2 = new DateTime.Details(param2.getLong());\r",
    "cloneID": "13f880694381c0629c9141fc568b9dba",
    "clone": "ef6ad308df152ad04b37c7a3dd6b2e45",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunctionTimestampDiff.java",
    "size": 170,
    "example": "\tDateTime.Details details2 = new DateTime.Details(param2.getLong());\r",
    "cloneID": "f5c859700a42da7478bee025d53b6a8d",
    "clone": "ef6ad308df152ad04b37c7a3dd6b2e45",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunctionTimestampAdd.java",
    "size": 144,
    "example": "\tDateTime.Details details2 = new DateTime.Details(param2.getLong());\r",
    "cloneID": "8072a8870e854dd7bae9488dd1118d63",
    "clone": "ef6ad308df152ad04b37c7a3dd6b2e45",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunctionTimestampAdd.java",
    "size": 144,
    "example": "\tDateTime.Details details2 = new DateTime.Details(param2.getLong());\r",
    "cloneID": "76a565653ce2719658eb27f7c29d2ddf",
    "clone": "ef6ad308df152ad04b37c7a3dd6b2e45",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunctionTimestampAdd.java",
    "size": 144,
    "example": "\tDateTime.Details details2 = new DateTime.Details(param2.getLong());\r",
    "cloneID": "b69fd15cd57ec7c0fb2494a9a6b3e77c",
    "clone": "ef6ad308df152ad04b37c7a3dd6b2e45",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/MutableNumeric.java",
    "size": 594,
    "example": "(value.length == 1 && (value[0] > 0)){\r",
    "cloneID": "6296d1779eef74714a15cd93a1c4af71",
    "clone": "c62d75d8ee3970972353e96406571ff9",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/MutableNumeric.java",
    "size": 594,
    "example": "(value.length == 1 && (value[0] > 0)){\r",
    "cloneID": "914b528ebad6831f0136544d3f0dc902",
    "clone": "c62d75d8ee3970972353e96406571ff9",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/MutableNumeric.java",
    "size": 594,
    "example": "(value.length == 1 && (value[0] > 0)){\r",
    "cloneID": "b2335102379660e17c3a15bfc9673c0b",
    "clone": "c62d75d8ee3970972353e96406571ff9",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/MutableNumeric.java",
    "size": 594,
    "example": "(value.length == 1 && (value[0] > 0)){\r",
    "cloneID": "c83f6b7fca80c2ea2d636b4081c362e4",
    "clone": "c62d75d8ee3970972353e96406571ff9",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/BenchTest.java",
    "size": 753,
    "example": " java.io.File file = new java.io.File(tableName+\".bin\");\r",
    "cloneID": "aa60d667dc3913d402e903dad40adb6d",
    "clone": "331ab0f3307d6bc45f063f241a7b42e3",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/BenchTest.java",
    "size": 753,
    "example": " java.io.File file = new java.io.File(tableName+\".bin\");\r",
    "cloneID": "ef5ddbb6f19c49b3ad8a32b7a6cea013",
    "clone": "331ab0f3307d6bc45f063f241a7b42e3",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestOperatoren.java",
    "size": 281,
    "example": " a(\"timestamp\"         , new Timestamp(99, 1,1,0,0,0,0),      new Timestamp(99, 2,2,0,0,0,0)),\r",
    "cloneID": "a5278a30195fad79316045a4561025ca",
    "clone": "f91ac3a5c278ac3adaed46e577bfd1b0",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestJoins.java",
    "size": 218,
    "example": " a(\"timestamp\"         , new Timestamp(99, 1,1,0,0,0,0),      new Timestamp(99, 2,2,0,0,0,0)),\r",
    "cloneID": "8ceeae84ab2ca9937f5896cbcd912206",
    "clone": "f91ac3a5c278ac3adaed46e577bfd1b0",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunctionReturnP1Number.java",
    "size": 98,
    "example": "\tString getString() throws Exception {\r\t\tif(isNull()) return null;\r\t\treturn getObject().toString();\r\t}",
    "cloneID": "0e46d044c40413f03b58ce417a346d8e",
    "clone": "42e3193092fba6bf6491ddd35d10bbdf",
    "cloneSize": 4
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/ExpressionArithmetic.java",
    "size": 1015,
    "example": " String getString() throws java.lang.Exception {\r        if(isNull()) return null;\r        return getObject().toString();\r    }",
    "cloneID": "dcb8b73647c8d03173b27976abc3007b",
    "clone": "445444e43fe64c83068ee3a84b537028",
    "cloneSize": 4
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestOperatoren.java",
    "size": 281,
    "example": " a(\"varchar(100)\"      , new String(\"abc\"),      new String(\"qwert\")),\r",
    "cloneID": "fc2e4c21279681ccc547221a8dc633d3",
    "clone": "b16bdbf25d115bc6eb447720b4b67b6c",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestJoins.java",
    "size": 218,
    "example": " a(\"varchar(100)\"      , new String(\"abc\"),      new String(\"qwert\")),\r",
    "cloneID": "d88d6ccb047970a3b654677eca2bea93",
    "clone": "b16bdbf25d115bc6eb447720b4b67b6c",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/BenchTest.java",
    "size": 753,
    "example": " ResultSet rs = st1.executeQuery( \"SELECT count(*) FROM \" + tableName);\r",
    "cloneID": "cb9a35e11362aef66129d8c5c04f88ac",
    "clone": "294e116d5fc1df5083ca8fb4298ecf18",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/BenchTest.java",
    "size": 753,
    "example": " ResultSet rs = st1.executeQuery( \"SELECT count(*) FROM \" + tableName);\r",
    "cloneID": "aa9c05bb58211031eb606b7f49a5b4df",
    "clone": "294e116d5fc1df5083ca8fb4298ecf18",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/BenchTest.java",
    "size": 753,
    "example": " java.io.FileOutputStream fos = new java.io.FileOutputStream(tableName+\".bin\");\r",
    "cloneID": "eb3532d1330d37fa0b09983dd15c5db0",
    "clone": "61be9255058b165e0f8cd6c3bea0569a",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/BenchTest.java",
    "size": 753,
    "example": " java.io.FileOutputStream fos = new java.io.FileOutputStream(tableName+\".bin\");\r",
    "cloneID": "6c240801a11ac24fb6c2aa8270ecd911",
    "clone": "61be9255058b165e0f8cd6c3bea0569a",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunctionTruncate.java",
    "size": 71,
    "example": "\tif(places > 0){\r\t\t\tfor(int i=0; i<places; i++){\r\t\t\t\tfactor *= 10;\r\t\t\t}\r\t\t\tvalue *= factor;\r\t\t}else{\r\t\t\tfor(int i=0; i>places; i--){\r\t\t\t\tfactor *= 10;\r\t\t\t}\r\t\t\tvalue /= factor;\r\t\t}",
    "cloneID": "c8ef726ff7df1bc19e8e3d97676e1600",
    "clone": "3c51704f60eea9f0b94d0c0ebd4d0164",
    "cloneSize": 11
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunctionRound.java",
    "size": 71,
    "example": "\tif(places > 0){\r\t\t\tfor(int i=0; i<places; i++){\r\t\t\t\tfactor *= 10;\r\t\t\t}\r\t\t\tvalue *= factor;\r\t\t}else{\r\t\t\tfor(int i=0; i>places; i--){\r\t\t\t\tfactor *= 10;\r\t\t\t}\r\t\t\tvalue /= factor;\r\t\t}",
    "cloneID": "e1616d0248f8678404e197f5bcba7cfd",
    "clone": "3c51704f60eea9f0b94d0c0ebd4d0164",
    "cloneSize": 11
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/IndexDescription.java",
    "size": 278,
    "example": " if( database.isReadOnly() ){\r\t        throw SmallSQLException.create(Language.DB_READONLY);\r\t    }",
    "cloneID": "7832823c0bb8fd3977a842148bb9a62a",
    "clone": "39ef6e1c33bd7ff4eba993fb713c27bb",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/TableView.java",
    "size": 194,
    "example": " if( database.isReadOnly() ){\r\t        throw SmallSQLException.create(Language.DB_READONLY);\r\t    }",
    "cloneID": "2c0928879497dabf37d442938602833d",
    "clone": "39ef6e1c33bd7ff4eba993fb713c27bb",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SSDatabaseMetaData.java",
    "size": 1039,
    "example": "\tString[] colNames = {\"TABLE_CAT\", \"TABLE_SCHEM\", \"TABLE_NAME\", \"COLUMN_NAME\", \"DATA_TYPE\", \"TYPE_NAME\", \"COLUMN_SIZE\", \"BUFFER_LENGTH\", \"DECIMAL_DIGITS\", \"NUM_PREC_RADIX\", \"NULLABLE\", \"REMARKS\", \"COLUMN_DEF\", \"SQL_DATA_TYPE\", \"SQL_DATETIME_SUB\", \"CHAR_OCTET_LENGTH\", \"ORDINAL_POSITION\", \"IS_NULLABLE\"};\r",
    "cloneID": "3258cc05ac42c8bb602a1399241b4182",
    "clone": "08f4a18e5d3930c42ea2be8c143df3c3",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestDBMetaData.java",
    "size": 310,
    "example": " String[] colNames = {\"TABLE_CAT\", \"TABLE_SCHEM\", \"TABLE_NAME\", \"COLUMN_NAME\", \"DATA_TYPE\", \"TYPE_NAME\", \"COLUMN_SIZE\", \"BUFFER_LENGTH\", \"DECIMAL_DIGITS\", \"NUM_PREC_RADIX\", \"NULLABLE\", \"REMARKS\", \"COLUMN_DEF\", \"SQL_DATA_TYPE\", \"SQL_DATETIME_SUB\", \"CHAR_OCTET_LENGTH\", \"ORDINAL_POSITION\", \"IS_NULLABLE\"};\r",
    "cloneID": "a35f6ca70c756cd1bca8e44b42a35791",
    "clone": "debfde1b1be24d96f0cefc5fd88be9ce",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/JoinScroll.java",
    "size": 181,
    "example": "o{\r                if(fullReturnCounter >= fullRowCount){\r                    return false; \r                }\r                right.next();\r            }",
    "cloneID": "f2ce34cd0f301eb39d2448dd43eff294",
    "clone": "c481fd9865d0527dca9d998c3f9072d9",
    "cloneSize": 6
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/JoinScroll.java",
    "size": 181,
    "example": "){\r                    if(fullReturnCounter >= fullRowCount){\r                       return false; \r                    }\r                    right.next();\r                }",
    "cloneID": "25cea1d99c3849fb163a6417142984ac",
    "clone": "ee2926afddeda28a930727cfd8e76356",
    "cloneSize": 6
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/MutableNumeric.java",
    "size": 594,
    "example": "(value.length == 2 && (value[0] > 0)){\r",
    "cloneID": "8e98dccf17b0f6faa349dffd0e33090b",
    "clone": "3d0d055229eaa479e932956a6eb2bebf",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/MutableNumeric.java",
    "size": 594,
    "example": "(value.length == 2 && (value[0] > 0)){\r",
    "cloneID": "3b41800c6cb881737b569da50f11d06f",
    "clone": "3d0d055229eaa479e932956a6eb2bebf",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/MutableNumeric.java",
    "size": 594,
    "example": "(value.length == 2 && (value[0] > 0)){\r",
    "cloneID": "04497dff1b52ab2f10a2273ee778f018",
    "clone": "3d0d055229eaa479e932956a6eb2bebf",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/MutableNumeric.java",
    "size": 594,
    "example": "(value.length == 2 && (value[0] > 0)){\r",
    "cloneID": "f692f396ea732160266451064156c93f",
    "clone": "3d0d055229eaa479e932956a6eb2bebf",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestOperatoren.java",
    "size": 281,
    "example": " PreparedStatement pr = con.prepareStatement(\"INSERT into \" + table + \"(a,b) Values(?,?)\");\r",
    "cloneID": "447a88d3ac1342b13e0d38076ae6fa90",
    "clone": "38f30af45999809dc3a24da3a3f9a2f6",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestJoins.java",
    "size": 218,
    "example": " PreparedStatement pr = con.prepareStatement(\"INSERT into \" + table + \"(a,b) Values(?,?)\");\r",
    "cloneID": "eb2afbaa659eb75b84ce495226bb69ba",
    "clone": "38f30af45999809dc3a24da3a3f9a2f6",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunctionTimestampDiff.java",
    "size": 170,
    "example": "\tDateTime.Details details2 = new DateTime.Details(param2.getLong());\r",
    "cloneID": "207de1e1a258633a0819456c475598b1",
    "clone": "ef6ad308df152ad04b37c7a3dd6b2e45",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunctionTimestampDiff.java",
    "size": 170,
    "example": "\tDateTime.Details details2 = new DateTime.Details(param2.getLong());\r",
    "cloneID": "13f880694381c0629c9141fc568b9dba",
    "clone": "ef6ad308df152ad04b37c7a3dd6b2e45",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunctionTimestampDiff.java",
    "size": 170,
    "example": "\tDateTime.Details details2 = new DateTime.Details(param2.getLong());\r",
    "cloneID": "f5c859700a42da7478bee025d53b6a8d",
    "clone": "ef6ad308df152ad04b37c7a3dd6b2e45",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunctionTimestampAdd.java",
    "size": 144,
    "example": "\tDateTime.Details details2 = new DateTime.Details(param2.getLong());\r",
    "cloneID": "8072a8870e854dd7bae9488dd1118d63",
    "clone": "ef6ad308df152ad04b37c7a3dd6b2e45",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunctionTimestampAdd.java",
    "size": 144,
    "example": "\tDateTime.Details details2 = new DateTime.Details(param2.getLong());\r",
    "cloneID": "76a565653ce2719658eb27f7c29d2ddf",
    "clone": "ef6ad308df152ad04b37c7a3dd6b2e45",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunctionTimestampAdd.java",
    "size": 144,
    "example": "\tDateTime.Details details2 = new DateTime.Details(param2.getLong());\r",
    "cloneID": "b69fd15cd57ec7c0fb2494a9a6b3e77c",
    "clone": "ef6ad308df152ad04b37c7a3dd6b2e45",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/Table.java",
    "size": 568,
    "example": "\tTableStorePage lock = new TableStorePage(con, this, LOCK_TAB, page);\r",
    "cloneID": "10b4b5e94ce50562e73b32e5148628d6",
    "clone": "ad6f567703eb0cbefd045f9b4b2f5899",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/Table.java",
    "size": 568,
    "example": " TableStorePage lock = new TableStorePage(con, this, LOCK_TAB, page);\r",
    "cloneID": "0eac76bb3be81246531df9cd94f15905",
    "clone": "60abb366e753ebaab2637823a88fbbf6",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/FileIndexNode.java",
    "size": 99,
    "example": " StorePage storePage = new StorePage( null, -1, file, offset);\r",
    "cloneID": "4ef80e9c0a7708da333b97fee6fd0f19",
    "clone": "ca06be02a6c6d7ac47c97086eefc5b36",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/FileIndexNode.java",
    "size": 99,
    "example": " StorePage storePage = new StorePage( null, -1, file, offset);\r",
    "cloneID": "92557f5bf6ae907e8f258349bfc126ed",
    "clone": "ca06be02a6c6d7ac47c97086eefc5b36",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/BenchTest.java",
    "size": 753,
    "example": "y{\r            System.out.println();\r            System.out.println(\"===================================================================\");\r        }",
    "cloneID": "66f16f3832ab4a144ec8a84c69ff506e",
    "clone": "61cec673dd62f07e1d225d9fa99b9973",
    "cloneSize": 4
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/BenchTest.java",
    "size": 753,
    "example": "y{\r            System.out.println();\r            System.out.println(\"===================================================================\");\r        }",
    "cloneID": "0f87e85676cfa06a2e61083821f58811",
    "clone": "61cec673dd62f07e1d225d9fa99b9973",
    "cloneSize": 4
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/BenchTest.java",
    "size": 753,
    "example": "y{\r            System.out.println();\r            System.out.println(\"===================================================================\");\r        }",
    "cloneID": "9fb6b4bcb689d1a3f3dc4ed5c34eead4",
    "clone": "61cec673dd62f07e1d225d9fa99b9973",
    "cloneSize": 4
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/BenchTest.java",
    "size": 753,
    "example": "y{\r            System.out.println();\r            System.out.println(\"===================================================================\");\r        }",
    "cloneID": "c49f88bc6609e027f712e7c3330d3bb9",
    "clone": "61cec673dd62f07e1d225d9fa99b9973",
    "cloneSize": 4
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/BenchTest.java",
    "size": 753,
    "example": "y{\r            System.out.println();\r            System.out.println(\"===================================================================\");\r        }",
    "cloneID": "b3ee45fac284b9477615c801ab96aefd",
    "clone": "61cec673dd62f07e1d225d9fa99b9973",
    "cloneSize": 4
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/BenchTest.java",
    "size": 753,
    "example": "y{\r            System.out.println();\r            System.out.println(\"===================================================================\");\r        }",
    "cloneID": "90b6223584b37afa7eec04a459978c85",
    "clone": "61cec673dd62f07e1d225d9fa99b9973",
    "cloneSize": 4
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/BenchTest.java",
    "size": 753,
    "example": "y{\r            System.out.println();\r            System.out.println(\"===================================================================\");\r        }",
    "cloneID": "6b5f0e39a9373e18324206b30dbf4ddf",
    "clone": "61cec673dd62f07e1d225d9fa99b9973",
    "cloneSize": 4
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/BenchTest.java",
    "size": 753,
    "example": "y{\r            System.out.println();\r            System.out.println(\"===================================================================\");\r        }",
    "cloneID": "0c108b0c2fb0b463b5a7c8fa15ae376b",
    "clone": "61cec673dd62f07e1d225d9fa99b9973",
    "cloneSize": 4
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/BenchTest.java",
    "size": 753,
    "example": "y{\r            System.out.println();\r            System.out.println(\"===================================================================\");\r        }",
    "cloneID": "64133de10b42bf4f0096aceb621b582c",
    "clone": "61cec673dd62f07e1d225d9fa99b9973",
    "cloneSize": 4
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/BenchTest.java",
    "size": 753,
    "example": "y{\r            System.out.println();\r            System.out.println(\"===================================================================\");\r        }",
    "cloneID": "53058bd77beac61cab559df6b99e342b",
    "clone": "61cec673dd62f07e1d225d9fa99b9973",
    "cloneSize": 4
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/BenchTest.java",
    "size": 753,
    "example": "y{\r            System.out.println();\r            System.out.println(\"===================================================================\");\r        }",
    "cloneID": "0748d4dff6847199398ccae1b2c9b37c",
    "clone": "61cec673dd62f07e1d225d9fa99b9973",
    "cloneSize": 4
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/BenchTest.java",
    "size": 753,
    "example": "y{\r            System.out.println();\r            System.out.println(\"===================================================================\");\r        }",
    "cloneID": "5bc1342224653b2419a5a22115346373",
    "clone": "61cec673dd62f07e1d225d9fa99b9973",
    "cloneSize": 4
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/BenchTest.java",
    "size": 753,
    "example": "y{\r            System.out.println();\r            System.out.println(\"===================================================================\");\r        }",
    "cloneID": "165c7bac5ae68f26ec1aa421be51a502",
    "clone": "61cec673dd62f07e1d225d9fa99b9973",
    "cloneSize": 4
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestTransactions.java",
    "size": 509,
    "example": "\tResultSet rs = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE)\r\t\t\t\t\t\t\t\t.executeQuery(\"Select * from transactions Where 1=0\");",
    "cloneID": "d6e40e58471522b32021e3800d395551",
    "clone": "4c8286709d771d35746a1c429ab6fa63",
    "cloneSize": 2
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestTransactions.java",
    "size": 509,
    "example": "\tResultSet rs = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE)\r\t\t\t\t\t\t\t\t.executeQuery(\"Select * from transactions Where 1=0\");",
    "cloneID": "a713749dd7e4b7946f03e53e7b0512fd",
    "clone": "4c8286709d771d35746a1c429ab6fa63",
    "cloneSize": 2
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestDataTypes.java",
    "size": 338,
    "example": " ResultSet rs = st.executeQuery(\"SELECT * From \" + table);\r",
    "cloneID": "8702a8a10bb991f363a8935cd1135dd0",
    "clone": "7e84ae48e3ba95ea042a80dc60697bce",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestDataTypes.java",
    "size": 338,
    "example": " ResultSet rs = st.executeQuery(\"SELECT * From \" + table);\r",
    "cloneID": "0a94f632b74fc223792c12e331c3c1ac",
    "clone": "7e84ae48e3ba95ea042a80dc60697bce",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/IndexNode.java",
    "size": 451,
    "example": "\tvalue = (unique) ? (Object)new Long(rowOffset) : new LongTreeList(rowOffset);\r",
    "cloneID": "ce4ebdbd7c38f7cc9abf49086d5b2176",
    "clone": "3bc23895a271296c74ad466770c56d81",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/IndexNode.java",
    "size": 451,
    "example": "\tvalue = (unique) ? (Object)new Long(rowOffset) : new LongTreeList(rowOffset);\r",
    "cloneID": "d4dbb358ee3da8cee05563526459ef80",
    "clone": "3bc23895a271296c74ad466770c56d81",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/Table.java",
    "size": 568,
    "example": "\tTableStorePage lock = new TableStorePage(con, this, LOCK_TAB, page);\r",
    "cloneID": "10b4b5e94ce50562e73b32e5148628d6",
    "clone": "ad6f567703eb0cbefd045f9b4b2f5899",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/Table.java",
    "size": 568,
    "example": " TableStorePage lock = new TableStorePage(con, this, LOCK_TAB, page);\r",
    "cloneID": "0eac76bb3be81246531df9cd94f15905",
    "clone": "60abb366e753ebaab2637823a88fbbf6",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunctionReturnString.java",
    "size": 93,
    "example": "\tfinal int getInt() throws Exception {\r\t\tif(isNull()) return 0;\r\t\treturn Integer.parseInt(getString().trim());\r\t}",
    "cloneID": "ddb2c6fdeada93ee186b23aabddf54a2",
    "clone": "7886b717d5ac1499f5bc2d78d34578e4",
    "cloneSize": 4
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunctionReturnP1StringAndBinary.java",
    "size": 91,
    "example": "\tfinal int getInt() throws Exception {\r\t\tif(isNull()) return 0;\r\t\treturn Integer.parseInt(getString().trim());\r\t}",
    "cloneID": "e3f735f9835aca73367c0051653723df",
    "clone": "7886b717d5ac1499f5bc2d78d34578e4",
    "cloneSize": 4
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestLanguage.java",
    "size": 286,
    "example": "\tfor (Iterator itr = diff.iterator(); itr.hasNext(); ) {\r\t\t\t\t\tmsgBuf.append(itr.next());\r\t\t\t\t\tif (itr.hasNext()) msgBuf.append(',');\r\t\t\t\t}",
    "cloneID": "57199148fafe5db9f604c65df48e7252",
    "clone": "3f79da2fd8364b69ea864e2d8de37b48",
    "cloneSize": 4
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestLanguage.java",
    "size": 286,
    "example": " for (Iterator itr = diff.iterator(); itr.hasNext(); ) {\r                    msgBuf.append(itr.next());\r                    if (itr.hasNext()) msgBuf.append(',');\r                }",
    "cloneID": "a44f55c6ca8090bb9e84fc87922cddcd",
    "clone": "e3f226ef98fdc67ed1f5429ae4ee3394",
    "cloneSize": 4
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/BenchTest.java",
    "size": 753,
    "example": " Statement st = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_READ_ONLY);\r",
    "cloneID": "69247a47bee9d756b8423047d10490d8",
    "clone": "1a66ad25c85448d37b95c0e0c6b9e957",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestOther.java",
    "size": 327,
    "example": "\tStatement st = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_READ_ONLY );\r",
    "cloneID": "910aec2e1e3c92ad71bbb26aaf0e255f",
    "clone": "cc44be1b7345d65eba2a395efba82727",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestDeleteUpdate.java",
    "size": 162,
    "example": "\tfor(int i=0; i<10; i++){\r\t\t\tst.execute(\"Insert into testUpdate Values(\"+i+','+i+\")\");\r\t\t}",
    "cloneID": "eeab124d2abeacbe29560701ba7371a9",
    "clone": "52aed7df37f4e25ad68c2dfb5e66d217",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestDeleteUpdate.java",
    "size": 162,
    "example": "\tfor(int i=0; i<10; i++){\r\t\t\tst.execute(\"Insert into testUpdate Values(\"+i+','+(i*100)+','+i+\")\");\r\t\t}",
    "cloneID": "6a6b0ec8dc931c93b710070050c8803d",
    "clone": "89f0400c573766b15c71796a25a8f22e",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestOperatoren.java",
    "size": 281,
    "example": " a(\"datetime\"          , new Timestamp(99, 1,1,0,0,0,0),      new Timestamp(99, 2,2,0,0,0,0)),\r",
    "cloneID": "7b01f919f8661f17ee1db999a5fa5330",
    "clone": "ff0aeca0a85e182fe21c1a1b4e9f0d44",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestJoins.java",
    "size": 218,
    "example": " a(\"datetime\"          , new Timestamp(99, 1,1,0,0,0,0),      new Timestamp(99, 2,2,0,0,0,0)),\r",
    "cloneID": "fb10c56d329fc1ea6e02b74b4287f1c6",
    "clone": "ff0aeca0a85e182fe21c1a1b4e9f0d44",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestOrderBy.java",
    "size": 821,
    "example": "\twhile(rs.next()){\r\t\t\tString newValue = rs.getString(\"v\");\r\t\t\tassertTrue( oldValue.compareTo( newValue ) < 0 );\r\t\t\toldValue = newValue;\r\t\t\tcount++;\r\t\t}",
    "cloneID": "5f61349a7a42e82141c757632a2e9a55",
    "clone": "51f94471cff4c476541ce3ff8cd55c17",
    "cloneSize": 6
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestOrderBy.java",
    "size": 821,
    "example": "\twhile(rs.next()){\r\t\t\tString newValue = rs.getString(\"v\");\r\t\t\tassertTrue( oldValue.compareTo( newValue ) < 0 );\r\t\t\toldValue = newValue;\r\t\t\tcount++;\r\t\t}",
    "cloneID": "3df099b72e12759f3c060d9bd6ee3f30",
    "clone": "51f94471cff4c476541ce3ff8cd55c17",
    "cloneSize": 6
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/IndexDescriptions.java",
    "size": 141,
    "example": "){\r\t\t// SAVER: use SmallSQLException\r\t\tif (idx >= size)\r\t\t\tthrow new IndexOutOfBoundsException(\"Column index: \"+idx+\", Size: \"+size);\r\t\treturn data[idx];\r\t}",
    "cloneID": "7924101df8bdb5ac8ba2847b90407b71",
    "clone": "653ea336d6c89909ac3e480833630773",
    "cloneSize": 6
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/Strings.java",
    "size": 84,
    "example": "){\r\t\tif (idx >= size)\r\t\t\tthrow new IndexOutOfBoundsException(\"Column index: \"+idx+\", Size: \"+size);\r\t\treturn data[idx];\r\t}",
    "cloneID": "5e76808d9ceb764fbc21857e40c98607",
    "clone": "9d03bd5279ff56a578e8fae166aff547",
    "cloneSize": 5
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/Columns.java",
    "size": 161,
    "example": "){\r\t\tif (idx >= size)\r\t\t\tthrow new IndexOutOfBoundsException(\"Column index: \"+idx+\", Size: \"+size);\r\t\treturn data[idx];\r\t}",
    "cloneID": "90dee9e05cf376c127fc9e3a0a9e6d7c",
    "clone": "9d03bd5279ff56a578e8fae166aff547",
    "cloneSize": 5
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/ForeignKeys.java",
    "size": 76,
    "example": "){\r\t\tif (idx >= size)\r\t\t\tthrow new IndexOutOfBoundsException(\"Column index: \"+idx+\", Size: \"+size);\r\t\treturn data[idx];\r\t}",
    "cloneID": "a2ba499065c5b3f519f5556e19ea2bd7",
    "clone": "9d03bd5279ff56a578e8fae166aff547",
    "cloneSize": 5
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/LongTreeList.java",
    "size": 623,
    "example": "\tlong result = listEnum.resultStack[listEnum.stack];\r",
    "cloneID": "6c165e63c8ce93eb0b2a0ff0fd2484c5",
    "clone": "7cab59b9197de842d1486f7b42e3a7a4",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/LongTreeList.java",
    "size": 623,
    "example": "\tlong result = listEnum.resultStack[listEnum.stack];\r",
    "cloneID": "142163b8ee04fae13c8fd825f4f59d7d",
    "clone": "7cab59b9197de842d1486f7b42e3a7a4",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestOperatoren.java",
    "size": 281,
    "example": " a(\"float\"             , new Float(3.45),        new Float(4.56)),\r",
    "cloneID": "250d19d8b413c8af5fe9d7fb0fc53159",
    "clone": "dda5b87c5cde85a0b96156ba1ea4843a",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestJoins.java",
    "size": 218,
    "example": " a(\"float\"             , new Float(3.45),        new Float(4.56)),\r",
    "cloneID": "c9774b4222667fa8a0b9b4205a845d75",
    "clone": "dda5b87c5cde85a0b96156ba1ea4843a",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/DateTime.java",
    "size": 802,
    "example": " (year%100 != 0 || year%400 == 0))\r",
    "cloneID": "64e3a01993adb9cedde0d2e13081196e",
    "clone": "cb335b45a64b4c83bc1803e48b77b5f6",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/DateTime.java",
    "size": 802,
    "example": " (year%100 != 0 || year%400 == 0);\r",
    "cloneID": "da6d07d76f38faf7a5bc334a9d4dd468",
    "clone": "0e1cbf2103c34502bc48fbaa3dc4afa0",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/Where.java",
    "size": 187,
    "example": "\tfinal void nullRow() {\r\t\trowSource.nullRow();\r\t\trow = 0;\r\t}",
    "cloneID": "0f89ef520b4b020b2e02d513c2956a7b",
    "clone": "e9c32134636ea64085ec1de4adadcdf4",
    "cloneSize": 4
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/Distinct.java",
    "size": 145,
    "example": "\tfinal void nullRow() {\r\t\trowSource.nullRow();\r\t\trow = 0;\r\t}",
    "cloneID": "a2228bf28dbabd50ab1428bca5574fbb",
    "clone": "e9c32134636ea64085ec1de4adadcdf4",
    "cloneSize": 4
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestOperatoren.java",
    "size": 281,
    "example": " a(\"raw(100)\"          , new byte[]{12, 45, 1},  new byte[]{12, 45, 2, 56, 89}),\r",
    "cloneID": "78331153aca1ee3a8838b17ad2e957ef",
    "clone": "2a58075ffff5802a703bdb834466b117",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestJoins.java",
    "size": 218,
    "example": " a(\"raw(100)\"          , new byte[]{12, 45, 1},  new byte[]{12, 45, 2, 56, 89}),\r",
    "cloneID": "d46ce894c9c934aa5e9d65c1b00255fa",
    "clone": "2a58075ffff5802a703bdb834466b117",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/BenchTest.java",
    "size": 753,
    "example": " pr.setTime  (  11, new Time( System.currentTimeMillis() ) );\r",
    "cloneID": "2831705d09f7a77f2a4e21c1fcb95d21",
    "clone": "2aa4fb3191de6749a42464c245e43415",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/BenchTest.java",
    "size": 753,
    "example": " pr.setTime  (  11, new Time( System.currentTimeMillis() ) );\r",
    "cloneID": "4b0a82a684e124af210332ddc7c18c70",
    "clone": "2aa4fb3191de6749a42464c245e43415",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/BenchTest.java",
    "size": 753,
    "example": " pr.setTime  (  11, new Time( System.currentTimeMillis() ) );\r",
    "cloneID": "9d6e3d6fffe91b140515f96672c980eb",
    "clone": "2aa4fb3191de6749a42464c245e43415",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestOperatoren.java",
    "size": 281,
    "example": " a(\"ntext\"             , new String(\"abc\"),      new String(\"qwert\")),\r",
    "cloneID": "93b00692feca7782cbe66e30ca2554c0",
    "clone": "4796a591e15f86ddc3cbfc0025c9c5d6",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestJoins.java",
    "size": 218,
    "example": " a(\"ntext\"             , new String(\"abc\"),      new String(\"qwert\")),\r",
    "cloneID": "4fbb8512993580fcfa283d1da484f02f",
    "clone": "4796a591e15f86ddc3cbfc0025c9c5d6",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/Money.java",
    "size": 141,
    "example": "){\r        Money money = new Money();\r        money.value = value;\r        return money;\r    }",
    "cloneID": "b5243f50761cd4b1915acde206085769",
    "clone": "8955672e6aafe88b295c4039945a5190",
    "cloneSize": 5
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/Money.java",
    "size": 141,
    "example": "){\r        Money money = new Money();\r        money.value = value;\r        return money;\r    }",
    "cloneID": "3fea3d568c6e6058a4c88b85527b6ffe",
    "clone": "8955672e6aafe88b295c4039945a5190",
    "cloneSize": 5
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/Where.java",
    "size": 187,
    "example": "\tfinal void setRowPosition(long rowPosition) throws Exception {\r\t\trowSource.setRowPosition(rowPosition);\r\t}",
    "cloneID": "bd2f4749f545ea2a7e903ad7adf9983c",
    "clone": "f34625e96d742ae5e57843b45f19c0db",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/Distinct.java",
    "size": 145,
    "example": "\tfinal void setRowPosition(long rowPosition) throws Exception {\r\t\trowSource.setRowPosition(rowPosition);\r\t}",
    "cloneID": "d91f9894ca19e93084c6abd1e165b6b3",
    "clone": "f34625e96d742ae5e57843b45f19c0db",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunctionReturnString.java",
    "size": 93,
    "example": "\tfinal long getLong() throws Exception {\r\t\tif(isNull()) return 0;\r\t\treturn Long.parseLong(getString().trim());\r\t}",
    "cloneID": "7187ab03115d460f9b9651dbc2522e49",
    "clone": "9c1e61681137e8cd7ee9b06f438be0cb",
    "cloneSize": 4
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunctionReturnP1StringAndBinary.java",
    "size": 91,
    "example": "\tfinal long getLong() throws Exception {\r\t\tif(isNull()) return 0;\r\t\treturn Long.parseLong(getString().trim());\r\t}",
    "cloneID": "29daf0609b77e83298acd9e91dc75fbb",
    "clone": "9c1e61681137e8cd7ee9b06f438be0cb",
    "cloneSize": 4
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SSDatabaseMetaData.java",
    "size": 1039,
    "example": "\tString[] colNames = {\"PROCEDURE_CAT\", \"PROCEDURE_SCHEM\", \"PROCEDURE_NAME\", \"COLUMN_NAME\", \"COLUMN_TYPE\", \"DATA_TYPE\", \"TYPE_NAME\", \"PRECISION\", \"LENGTH\", \"SCALE\", \"RADIX\", \"NULLABLE\", \"REMARKS\" };\r",
    "cloneID": "d3d93ad097ccebb5db03235864e9489c",
    "clone": "ce9065802b3e219c5603a1493a81b8a9",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestDBMetaData.java",
    "size": 310,
    "example": " String[] colNames = {\"PROCEDURE_CAT\", \"PROCEDURE_SCHEM\", \"PROCEDURE_NAME\", \"COLUMN_NAME\", \"COLUMN_TYPE\", \"DATA_TYPE\", \"TYPE_NAME\", \"PRECISION\", \"LENGTH\", \"SCALE\", \"RADIX\", \"NULLABLE\", \"REMARKS\" };\r",
    "cloneID": "9bc8999ba1b88ee2428a540d6363e414",
    "clone": "abb1562bf3e89624639975ca178cc08a",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/LongTreeList.java",
    "size": 623,
    "example": "\tint shift = (3-listEnum.stack) << 4;\r",
    "cloneID": "8eb5307f03a3e1b6d0e110713687d8e4",
    "clone": "69f93805c9b1eabdf43c0bd5528c3e28",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/LongTreeList.java",
    "size": 623,
    "example": "\tint shift = (3-listEnum.stack) << 4;\r",
    "cloneID": "171f5d4918691eaad6fd6d6b3c6ed26f",
    "clone": "69f93805c9b1eabdf43c0bd5528c3e28",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestOperatoren.java",
    "size": 281,
    "example": " a(\"nvarchar(100)\"     , new String(\"abc\"),      new String(\"qwert\")),\r",
    "cloneID": "409811fc4f4d2931efeeb8f004ada943",
    "clone": "b4f5a248047cb93318315e4a5512438e",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestJoins.java",
    "size": 218,
    "example": " a(\"nvarchar(100)\"     , new String(\"abc\"),      new String(\"qwert\")),\r",
    "cloneID": "4796650b0b6894252294816097886582",
    "clone": "b4f5a248047cb93318315e4a5512438e",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunction.java",
    "size": 124,
    "example": "\tObject[] params = {\r\t\t\t\tSQLTokenizer.getKeyWord(dataType),\r\t\t\t\tSQLTokenizer.getKeyWord(getFunction())\r\t\t};",
    "cloneID": "3dccf24735e3609b5206d71d65ef9041",
    "clone": "309eea215bba456752ef73734971fe5f",
    "cloneSize": 4
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunction.java",
    "size": 124,
    "example": "\tObject[] params = {\r    \t\t\tSQLTokenizer.getKeyWord(dataType),\r    \t\t\tSQLTokenizer.getKeyWord(getFunction())\r    \t};",
    "cloneID": "8295c7b9465c8613719370a0a21c70d9",
    "clone": "e75825d74ef549bd0a51abb6f68374e6",
    "cloneSize": 4
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SSConnection.java",
    "size": 392,
    "example": " TransactionStep page = (TransactionStep)commitPages.get(i);\r",
    "cloneID": "ccc7a272512b3fcaa3a9536f216f0f63",
    "clone": "b88c8b1d0011067828bccab016a8ad8d",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SSConnection.java",
    "size": 392,
    "example": " TransactionStep page = (TransactionStep)commitPages.get(i);\r",
    "cloneID": "9644ce7f9743b905766e19973eaaa2c1",
    "clone": "b88c8b1d0011067828bccab016a8ad8d",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SSConnection.java",
    "size": 392,
    "example": " TransactionStep page = (TransactionStep)commitPages.get(i);\r",
    "cloneID": "b2966785bbb24e7d15c19330420973c4",
    "clone": "b88c8b1d0011067828bccab016a8ad8d",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SSConnection.java",
    "size": 392,
    "example": " TransactionStep page = (TransactionStep)commitPages.get(i);\r",
    "cloneID": "8097ab99f5b351633ce5a27606c73caf",
    "clone": "b88c8b1d0011067828bccab016a8ad8d",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/DateTime.java",
    "size": 802,
    "example": " if(t<0){\r            //Time before 1970 and not a full day\r            t += 86400000;\r            d--;\r        }",
    "cloneID": "36def15102fe3730a98bc01572c10bf7",
    "clone": "dc76088d4bc06d8a5e814aa32c8fc277",
    "cloneSize": 5
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/DateTime.java",
    "size": 802,
    "example": "\tif(t<0){\r\t\t\t    //Time before 1970 and not a full day\r\t\t\t\tt += 86400000;\r\t\t\t\td--;\r\t\t\t}",
    "cloneID": "d03edde9e276cee5e161684c0e9c1b1b",
    "clone": "744967fb3cd6868c1ee3600489d421c0",
    "cloneSize": 5
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SSDatabaseMetaData.java",
    "size": 1039,
    "example": "\tString[] colNames = {\"PKTABLE_CAT\", \"PKTABLE_SCHEM\", \"PKTABLE_NAME\", \"PKCOLUMN_NAME\", \"FKTABLE_CAT\", \"FKTABLE_SCHEM\", \"FKTABLE_NAME\", \"FKCOLUMN_NAME\", \"KEY_SEQ\", \"UPDATE_RULE\", \"DELETE_RULE\", \"FK_NAME\", \"PK_NAME\", \"DEFERRABILITY\"};\r",
    "cloneID": "4571ae5da887c0f8d3ce951f64e4c5e7",
    "clone": "f86a151e3207150648384b2a92b9bdcf",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestDBMetaData.java",
    "size": 310,
    "example": " String[] colNames = {\"PKTABLE_CAT\", \"PKTABLE_SCHEM\", \"PKTABLE_NAME\", \"PKCOLUMN_NAME\", \"FKTABLE_CAT\", \"FKTABLE_SCHEM\", \"FKTABLE_NAME\", \"FKCOLUMN_NAME\", \"KEY_SEQ\", \"UPDATE_RULE\", \"DELETE_RULE\", \"FK_NAME\", \"PK_NAME\", \"DEFERRABILITY\"};\r",
    "cloneID": "12d2db82e4460708ba9c1369cbb7819a",
    "clone": "6dd56e440a39ddc37959fad92f633fd8",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/Scrollable.java",
    "size": 245,
    "example": "\tif(row == 0)\r\t\t\tthrow SmallSQLException.create(Language.ROW_0_ABSOLUTE);",
    "cloneID": "fc8d8accb45796d3dc198ce50b332ba1",
    "clone": "c81779ea81efc13f624971b2aba97202",
    "cloneSize": 2
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/MemoryResult.java",
    "size": 334,
    "example": "\tif(row == 0) throw SmallSQLException.create(Language.ROW_0_ABSOLUTE);\r",
    "cloneID": "b5a542766aeee9c0df6018318760bd35",
    "clone": "513f3fb46214aa5935dc79d5cf4cd4fc",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/BenchTest.java",
    "size": 753,
    "example": " ResultSet rs = st.executeQuery(\"SELECT * FROM \"+tableName);\r",
    "cloneID": "b6702cc629a13d25c73e8b8dc90c49d6",
    "clone": "2fa0d1847b957d6db1dd2d33cfa4952e",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/BenchTest.java",
    "size": 753,
    "example": " ResultSet rs = st.executeQuery(\"SELECT * FROM \" + tableName);\r",
    "cloneID": "f5a18da9eee760aa0f13bd87e00c2a5d",
    "clone": "22f11e81faa5047115b02a717ec520e6",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/BenchTest.java",
    "size": 753,
    "example": " ResultSet rs = st.executeQuery(\"SELECT * FROM \" + tableName);\r",
    "cloneID": "f5850d09f0efa182c8bc718b87c1e838",
    "clone": "22f11e81faa5047115b02a717ec520e6",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/BenchTest.java",
    "size": 753,
    "example": " ResultSet rs = st.executeQuery(\"SELECT * FROM \" + tableName);\r",
    "cloneID": "1071be85536562d8f26b0019831aae5b",
    "clone": "22f11e81faa5047115b02a717ec520e6",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SSPreparedStatement.java",
    "size": 338,
    "example": " {\r        checkStatement();\r    \t//FIXME Scale to consider \r\t\tcmd.setParamValue( parameterIndex, x, -1);\r    }",
    "cloneID": "2af70464a1ae1bd91e074e9c490add68",
    "clone": "0b0135ecbf58e5941bc6ebac2d436a8f",
    "cloneSize": 5
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SSPreparedStatement.java",
    "size": 338,
    "example": " {\r        checkStatement();\r        cmd.setParamValue( parameterIndex, x, -1);\r    }",
    "cloneID": "77d8f09dd4342d9350679f6c1e2459c5",
    "clone": "770b71a770e57a370d52b0a7fb28de39",
    "cloneSize": 4
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SSPreparedStatement.java",
    "size": 338,
    "example": " {\r        checkStatement();\r        cmd.setParamValue( parameterIndex, x, -1);\r    }",
    "cloneID": "3d275e7093ffafe15508ff4063fcb7b2",
    "clone": "770b71a770e57a370d52b0a7fb28de39",
    "cloneSize": 4
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SQLParser.java",
    "size": 2007,
    "example": "\tint offset = token.offset + token.length;\r",
    "cloneID": "1daf05bfd411b6e95bc504e1f3764239",
    "clone": "c573a98502db1a3596a7cdc055e2b261",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SQLParser.java",
    "size": 2007,
    "example": " int offset = token.offset + token.length;\r",
    "cloneID": "3a73f7a9d45cb432be568160448a3288",
    "clone": "5c7ce67370fd2edc98a04a399a10e6c0",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/BenchTest.java",
    "size": 753,
    "example": " ResultSet rs = st.executeQuery(\"SELECT * FROM \"+tableName);\r",
    "cloneID": "b6702cc629a13d25c73e8b8dc90c49d6",
    "clone": "2fa0d1847b957d6db1dd2d33cfa4952e",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/BenchTest.java",
    "size": 753,
    "example": " ResultSet rs = st.executeQuery(\"SELECT * FROM \" + tableName);\r",
    "cloneID": "f5a18da9eee760aa0f13bd87e00c2a5d",
    "clone": "22f11e81faa5047115b02a717ec520e6",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/BenchTest.java",
    "size": 753,
    "example": " ResultSet rs = st.executeQuery(\"SELECT * FROM \" + tableName);\r",
    "cloneID": "f5850d09f0efa182c8bc718b87c1e838",
    "clone": "22f11e81faa5047115b02a717ec520e6",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/BenchTest.java",
    "size": 753,
    "example": " ResultSet rs = st.executeQuery(\"SELECT * FROM \" + tableName);\r",
    "cloneID": "1071be85536562d8f26b0019831aae5b",
    "clone": "22f11e81faa5047115b02a717ec520e6",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/MutableNumeric.java",
    "size": 594,
    "example": "\tif(num.scale < scale){\r\t\t\tnum.setScale(scale);\r\t\t}else\r\t\tif(num.scale > scale){\r\t\t\tsetScale(num.scale);\r\t\t}",
    "cloneID": "1eaf12200fe423c32373cf8338f1aa69",
    "clone": "5873e2111326330ba36c6c901ad59219",
    "cloneSize": 6
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/MutableNumeric.java",
    "size": 594,
    "example": "\tif(num.scale < scale){\r\t\t\tnum.setScale(scale);\r\t\t}else\r\t\tif(num.scale > scale){\r\t\t\tsetScale(num.scale);\r\t\t}",
    "cloneID": "085f68ee37fc7857b8651d9f9d717c12",
    "clone": "5873e2111326330ba36c6c901ad59219",
    "cloneSize": 6
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/CommandSelect.java",
    "size": 570,
    "example": "\t// order the new Values after it position in the table\r\t\t\t\tExpression[] updateValues = new Expression[count];",
    "cloneID": "1139d01d754a8516c26e56330b73d853",
    "clone": "90227c5c350d1fa7d545bd4d2de12022",
    "cloneSize": 2
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/CommandSelect.java",
    "size": 570,
    "example": "\t// order the new Values after it position in the table\r\t\t\tExpression[] updateValues = new Expression[count];",
    "cloneID": "f45e909ca1dd7aca64cfcdf6a6e9aaf7",
    "clone": "1380a6556284f700a7c8e293bc52a6bb",
    "cloneSize": 2
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/Index.java",
    "size": 547,
    "example": "\t// the first digit include 0-null; 1-empty; 2 another value\r\t\t\tchar digit = (i<0) ? (length == 0 ? (char)1 : 2)\r\t\t\t\t\t\t\t  : (key[i]);",
    "cloneID": "6afdd4d40c3e47b167d3851e01764840",
    "clone": "1840c55e7b027e1081751afdf84048b2",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/Index.java",
    "size": 547,
    "example": "\t// the first digit include 0-null; 1-empty; 2 another value\r\t\t\tchar digit = (i<0) ? (length == 0 ? (char)1 : 2)\r\t\t\t\t\t\t\t  : (key[i]);",
    "cloneID": "628d5cbd7f700d4fe92fac4ed0732aea",
    "clone": "1840c55e7b027e1081751afdf84048b2",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestLanguage.java",
    "size": 286,
    "example": "\tcatch (SQLException e) {\r\t\t\tassertMessage(e, \"La tabella/vista '\" + TABLE_NAME + \"' \u00e8 gi\u00e0 esistente.\");\r\t\t}",
    "cloneID": "2cd77707a2f1e1af3da715866ef5545b",
    "clone": "954ea04806032dbb7e6f116e562a9930",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestLanguage.java",
    "size": 286,
    "example": "\tcatch(SQLException e) {\r\t\t\t\tassertMessage(e, \"La tabella/vista '\" + TABLE_NAME + \"' \u00e8 gi\u00e0 esistente.\");\r\t\t\t}",
    "cloneID": "746c6d0eaa5e73975aa1b66339e52f82",
    "clone": "a53a391af1b23e5b531910c4e14bcd71",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestFunctions.java",
    "size": 418,
    "example": " Date.valueOf( new Date(System.currentTimeMillis()).toString()) ),\r",
    "cloneID": "eb7cc1b3bccea3fff43c00b0214106d8",
    "clone": "f2991a017f3916897e053430cf04b057",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestFunctions.java",
    "size": 418,
    "example": " Date.valueOf( new Date(System.currentTimeMillis()).toString()) ),\r",
    "cloneID": "aade0084d39f73e9b021eebeda6d3581",
    "clone": "f2991a017f3916897e053430cf04b057",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestFunctions.java",
    "size": 418,
    "example": " Date.valueOf( new Date(System.currentTimeMillis()).toString()) ),\r",
    "cloneID": "f9ae9282213415c4a2e6c6bdf0c93ae1",
    "clone": "f2991a017f3916897e053430cf04b057",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestOperatoren.java",
    "size": 281,
    "example": " a(\"numeric(19,2)\"     , new BigDecimal(\"3.45\"), new BigDecimal(\"4.56\")),\r",
    "cloneID": "1dcfae868079a2ca6258b83f46aae904",
    "clone": "f5f5295fac8bc3cce395c88fe5500d86",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestJoins.java",
    "size": 218,
    "example": " a(\"numeric(19,2)\"     , new BigDecimal(\"3.45\"), new BigDecimal(\"4.56\")),\r",
    "cloneID": "b5498bece9f22351462d6adb886f1705",
    "clone": "f5f5295fac8bc3cce395c88fe5500d86",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunctionAbs.java",
    "size": 111,
    "example": "n{\r        Object obj = getObject();\r        if(obj == null) return null;\r        return obj.toString();\r    }",
    "cloneID": "92627574918f7dc33185b67a60216ad2",
    "clone": "19c9b44dc53c0e158b7f7d0a830d1d4b",
    "cloneSize": 5
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunctionFloor.java",
    "size": 53,
    "example": "n{\r        Object obj = getObject();\r        if(obj == null) return null;\r        return obj.toString();\r    }",
    "cloneID": "2d70f7380be5ea9657ded19e9180a105",
    "clone": "19c9b44dc53c0e158b7f7d0a830d1d4b",
    "cloneSize": 5
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunctionReturnFloat.java",
    "size": 87,
    "example": "n{\r        Object obj = getObject();\r        if(obj == null) return null;\r        return obj.toString();\r    }",
    "cloneID": "94242e9c540adf1dcbd433213a7626ca",
    "clone": "19c9b44dc53c0e158b7f7d0a830d1d4b",
    "cloneSize": 5
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunctionDayOfYear.java",
    "size": 54,
    "example": "\tDateTime.Details details = new DateTime.Details(param1.getLong());\r",
    "cloneID": "43b9095ee786a5220029c40e9283e760",
    "clone": "af55146dc6a57a6411ec653e4d870194",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunctionHour.java",
    "size": 54,
    "example": "\tDateTime.Details details = new DateTime.Details(param1.getLong());\r",
    "cloneID": "8f7ffc6c675ade9f6ac0ab6d0fcbf21c",
    "clone": "af55146dc6a57a6411ec653e4d870194",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunctionYear.java",
    "size": 54,
    "example": "\tDateTime.Details details = new DateTime.Details(param1.getLong());\r",
    "cloneID": "b56c7938b7b8434f92a72f250bd4cf93",
    "clone": "af55146dc6a57a6411ec653e4d870194",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunctionMonth.java",
    "size": 54,
    "example": "\tDateTime.Details details = new DateTime.Details(param1.getLong());\r",
    "cloneID": "d184d8dec07ec9d5168804fe2a2a5993",
    "clone": "af55146dc6a57a6411ec653e4d870194",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunctionMinute.java",
    "size": 54,
    "example": "\tDateTime.Details details = new DateTime.Details(param1.getLong());\r",
    "cloneID": "82065b5d81331a9e21aa679a916ba8a6",
    "clone": "af55146dc6a57a6411ec653e4d870194",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunctionDayOfMonth.java",
    "size": 54,
    "example": "\tDateTime.Details details = new DateTime.Details(param1.getLong());\r",
    "cloneID": "e12ff8d7ac77e5c7546f412f5ac206de",
    "clone": "af55146dc6a57a6411ec653e4d870194",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestTransactions.java",
    "size": 509,
    "example": "\tResultSet rs2 = con2.createStatement().executeQuery(\"Select count(*) from transactions\");\r",
    "cloneID": "e64d4998dacc569b77253f1f62f8782c",
    "clone": "ff2e57d7c98649910422ab50c9cbd725",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestTransactions.java",
    "size": 509,
    "example": "\tResultSet rs2 = con2.createStatement().executeQuery(\"Select count(*) from transactions\");\r",
    "cloneID": "07cc79f2f5287e393e03880cf990ac59",
    "clone": "ff2e57d7c98649910422ab50c9cbd725",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestTransactions.java",
    "size": 509,
    "example": " //reading should be possible on a second connection\r            ResultSet rs2 = con2.createStatement().executeQuery(\"Select count(*) from transactions\");",
    "cloneID": "01bc9098ece3a2161aca9c6bbe2b8fa1",
    "clone": "0b15300557cfef16e91d99b4428f6fbd",
    "cloneSize": 2
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/Database.java",
    "size": 546,
    "example": "\tIndexDescriptions indexes = ((Table)tab).indexes;\r",
    "cloneID": "ea36fb83f1803cdf54d78717ec147dd9",
    "clone": "414d3d39522b9c8e6186aa89d91aa429",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/Database.java",
    "size": 546,
    "example": "\tIndexDescriptions indexes = ((Table)tab).indexes;\r",
    "cloneID": "d5a3828241bf4fb7c1ed2f59604535ae",
    "clone": "414d3d39522b9c8e6186aa89d91aa429",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/Database.java",
    "size": 546,
    "example": "\tIndexDescriptions indexes = ((Table)tab).indexes;\r",
    "cloneID": "797e9109eeb9591c90330acbe2ead276",
    "clone": "414d3d39522b9c8e6186aa89d91aa429",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/LongTreeList.java",
    "size": 623,
    "example": "\tint octet = (int)(value >> shift) & 0xFFFF;\r",
    "cloneID": "aa80985f82878e5a014d5e59f470a5bc",
    "clone": "c1581c8aa0ee1d2efe111f411f59bb52",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/LongTreeList.java",
    "size": 623,
    "example": "\tint octet = (int)(value >> shift) & 0xFFFF;\r",
    "cloneID": "316b1a0b598c9fc0770a6eab420396bf",
    "clone": "c1581c8aa0ee1d2efe111f411f59bb52",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestOperatoren.java",
    "size": 281,
    "example": " a(\"int\"               , new Integer(3),         new Integer(4)),\r",
    "cloneID": "b0672f2364f9f8879c5dbd5abaff1ecc",
    "clone": "6fb05969fcda8927c92279ff704bf8f2",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestJoins.java",
    "size": 218,
    "example": " a(\"int\"               , new Integer(3),         new Integer(4)),\r",
    "cloneID": "aa06f72a4cc1f67a7b98f20f6ecc0b48",
    "clone": "6fb05969fcda8927c92279ff704bf8f2",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestGroupBy.java",
    "size": 378,
    "example": "\tPreparedStatement pr = con.prepareStatement(\"INSERT into \" + table1 + \"(name, id) Values(?,?)\");\r",
    "cloneID": "e484a4687c09e13f1f95a2d0f1155a48",
    "clone": "f03d72c352edf4a93e2e9cab33459f24",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestOrderBy.java",
    "size": 821,
    "example": "\tPreparedStatement pr = con.prepareStatement(\"INSERT into \" + table1 + \"(v,c,nv,i,d,r,bi,b) Values(?,?,?,?,?,?,?,?)\");\r",
    "cloneID": "be23d600a262a23a23d3bdbbf6a57f30",
    "clone": "3b8b607907e21b80917a099d437d0598",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestScrollable.java",
    "size": 319,
    "example": " try{\r            rs.getString(\"v\");\r            fail(\"SQLException 'No current row' should be throw\");\r        }catch(SQLException ex){\r            assertSQLException( \"01000\", 0, ex );\r        }",
    "cloneID": "30b582f38aa2284dd6d485f934c8a7eb",
    "clone": "5cc2b991e1ba65088d8ec0128b0167c4",
    "cloneSize": 6
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestScrollable.java",
    "size": 319,
    "example": " try{\r            rs.getString(\"v\");\r            fail(\"SQLException 'No current row' should be throw\");\r        }catch(SQLException ex){\r            assertSQLException( \"01000\", 0, ex);\r        }",
    "cloneID": "cd9cecb142a07dd8aa7a49b53c661d7a",
    "clone": "3ce42aac955f1ade52102404da7ffb77",
    "cloneSize": 6
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestScrollable.java",
    "size": 319,
    "example": " try{\r            rs.getString(\"v\");\r            fail(\"SQLException 'No current row' should be throw\");\r        }catch(SQLException ex){\r            assertSQLException(\"01000\", 0, ex);\r        }",
    "cloneID": "12eaf9f20a4d356ef7ddab74481a594c",
    "clone": "6e068da435f96944c5b00cbf8ccd94e1",
    "cloneSize": 6
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestScrollable.java",
    "size": 319,
    "example": " try{\r            rs.getString(\"v\");\r            fail(\"SQLException 'No current row' should be throw\");\r        }catch(SQLException ex){\r            assertSQLException(\"01000\", 0, ex);\r        }",
    "cloneID": "6dbed221d92ee8d44c797ffb2df007c1",
    "clone": "6e068da435f96944c5b00cbf8ccd94e1",
    "cloneSize": 6
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/Table.java",
    "size": 568,
    "example": "\tif(serializeConnections.size() > 0){\r\t\t\t\t\t\t\tIterator values = locks.values().iterator();\r\t\t\t\t\t\t\twhile(values.hasNext()){\r\t\t\t\t\t\t\t\tTableStorePage lock = (TableStorePage)values.next();\r\t\t\t\t\t\t\t\tif(lock.con != con) return null;\r\t\t\t\t\t\t\t}\r\t\t\t\t\t\t}",
    "cloneID": "9147a84b8cba250d0b0c2a3a67762b0e",
    "clone": "497e40535587d4f7f30e2abdcfba55bb",
    "cloneSize": 7
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/Table.java",
    "size": 568,
    "example": " if(serializeConnections.size() > 0){\r                        Iterator values = locks.values().iterator();\r                        while(values.hasNext()){\r                            TableStorePage lock = (TableStorePage)values.next();\r                            if(lock.con != con) return null;\r                        }\r                    }",
    "cloneID": "4805a91e05e51703b4e7398ebcef0d1c",
    "clone": "22c16fc2b1b14118c220d9b153e41e3c",
    "cloneSize": 7
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestOrderBy.java",
    "size": 821,
    "example": "\tassertTrue( oldValue + \"<\" + newValue, oldValue.compareTo( newValue ) < 0 );\r",
    "cloneID": "9030cf9e1c5bcc96720a9724dbf22081",
    "clone": "3b2330ddec9a2751237252bf5691e2e8",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestOrderBy.java",
    "size": 821,
    "example": "\tassertTrue( oldValue + \"<\" + newValue, oldValue.compareTo( newValue ) < 0 );\r",
    "cloneID": "b3d86d8b32a724be41086ec2bca2ca0a",
    "clone": "3b2330ddec9a2751237252bf5691e2e8",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/CommandSelect.java",
    "size": 570,
    "example": " int colIdx = table.findColumnIdx(expr.getName());\r",
    "cloneID": "79c4d0c0e93317a8fa7ffae31b4793cc",
    "clone": "067934948d53f9ffa53d75b9131fc445",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/CommandSelect.java",
    "size": 570,
    "example": " int colIdx = table.findColumnIdx(expr.getName());\r",
    "cloneID": "5712838afa9719009aced43ef416bd70",
    "clone": "067934948d53f9ffa53d75b9131fc445",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/BenchTest.java",
    "size": 753,
    "example": " java.io.File file = new java.io.File(tableName+\".bin\");\r",
    "cloneID": "aa60d667dc3913d402e903dad40adb6d",
    "clone": "331ab0f3307d6bc45f063f241a7b42e3",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/BenchTest.java",
    "size": 753,
    "example": " java.io.File file = new java.io.File(tableName+\".bin\");\r",
    "cloneID": "ef5ddbb6f19c49b3ad8a32b7a6cea013",
    "clone": "331ab0f3307d6bc45f063f241a7b42e3",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/MutableLong.java",
    "size": 70,
    "example": "\tpublic Object getImmutableObject(){\r\t\treturn new Long(value);\r\t}",
    "cloneID": "8e8ae7616857ac8fa151a911539bed6e",
    "clone": "8c6f9052f81012882a0a7f1da4835dbf",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/Identity.java",
    "size": 124,
    "example": " public Object getImmutableObject(){\r        return new Long(value);\r    }",
    "cloneID": "25f4f345400ea3c137aeb0a5fb12cdf6",
    "clone": "5c8c403eb0bd62ce027164d876b69bc3",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestOperatoren.java",
    "size": 281,
    "example": " a(\"double\"            , new Double(3.45),       new Double(4.56)),\r",
    "cloneID": "75c29a1716573e98c7ae6f8715f621ff",
    "clone": "5325cd202de9cc23a978743ae1d222cc",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestJoins.java",
    "size": 218,
    "example": " a(\"double\"            , new Double(3.45),       new Double(4.56)),\r",
    "cloneID": "0cba13fb7dee88b04f3184c680d816b9",
    "clone": "5325cd202de9cc23a978743ae1d222cc",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/Table.java",
    "size": 568,
    "example": "\tTableStorePage lock = (TableStorePage)locks.get( pageKey );\r",
    "cloneID": "1aca403ff09c326b74aae3eca8ccfab0",
    "clone": "7ad2c50cbdfa106a8a03a3487cc176b0",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/Table.java",
    "size": 568,
    "example": "\tTableStorePage lock = (TableStorePage)locks.get( pageKey );\r",
    "cloneID": "ba14557d86a5f5d8f84e39563df44da2",
    "clone": "7ad2c50cbdfa106a8a03a3487cc176b0",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/BenchTest.java",
    "size": 753,
    "example": " Statement st = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_READ_ONLY);\r",
    "cloneID": "69247a47bee9d756b8423047d10490d8",
    "clone": "1a66ad25c85448d37b95c0e0c6b9e957",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestOther.java",
    "size": 327,
    "example": "\tStatement st = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_READ_ONLY );\r",
    "cloneID": "910aec2e1e3c92ad71bbb26aaf0e255f",
    "clone": "cc44be1b7345d65eba2a395efba82727",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestOperatoren.java",
    "size": 281,
    "example": " a(\"money\"             , new Double(3.45),       new Double(4.56)),\r",
    "cloneID": "07148e5659663b32caccf86e3792159b",
    "clone": "a76362ecb2b19d163bbe1d420fbba2d6",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestJoins.java",
    "size": 218,
    "example": " a(\"money\"             , new Double(3.45),       new Double(4.56)),\r",
    "cloneID": "e74261cba7792649219ee73a151ecdc5",
    "clone": "a76362ecb2b19d163bbe1d420fbba2d6",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/LongTreeList.java",
    "size": 623,
    "example": "\tint shift = (3-listEnum.stack) << 4;\r",
    "cloneID": "8eb5307f03a3e1b6d0e110713687d8e4",
    "clone": "69f93805c9b1eabdf43c0bd5528c3e28",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/LongTreeList.java",
    "size": 623,
    "example": "\tint shift = (3-listEnum.stack) << 4;\r",
    "cloneID": "171f5d4918691eaad6fd6d6b3c6ed26f",
    "clone": "69f93805c9b1eabdf43c0bd5528c3e28",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunctionInsert.java",
    "size": 90,
    "example": " if(length < 0) \r            throw SmallSQLException.create(Language.INSERT_INVALID_LEN, new Integer(length));",
    "cloneID": "e44e6e2501b0b0740994f111987f868c",
    "clone": "d4bcbe5095c1c2ef0a9df9cfff8052df",
    "cloneSize": 2
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunctionInsert.java",
    "size": 90,
    "example": " if(length < 0) \r            throw SmallSQLException.create(Language.INSERT_INVALID_LEN, new Integer(length));",
    "cloneID": "2c1d7ebd09dd37c74bb0e5fe9db03ca5",
    "clone": "d4bcbe5095c1c2ef0a9df9cfff8052df",
    "cloneSize": 2
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestGroupBy.java",
    "size": 378,
    "example": "\tPreparedStatement pr = con.prepareStatement(\"Select count(*) FROM \" + table1 + \" Where id=-1234\");\r",
    "cloneID": "05659739db9472d1bd69f02a00fc3b35",
    "clone": "eb6da32139dbf21c051da4d4f5ae7816",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestGroupBy.java",
    "size": 378,
    "example": "\tPreparedStatement pr = con.prepareStatement(\"Select count(*) FROM \" + table1 + \" Group By name Order By name DESC\");\r",
    "cloneID": "6f11cd1de867c074d19bce98bea05fcc",
    "clone": "35810f26a9e6b32dc033817fdaa3cd6c",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/BenchTest.java",
    "size": 753,
    "example": " Statement st = con.createStatement( ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE );\r",
    "cloneID": "e33b918c496dd8635a154c919a5024a9",
    "clone": "e9cfb7ccf0be7eaefe3d95ef6ab86c30",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/BenchTest.java",
    "size": 753,
    "example": " Statement st = con.createStatement( ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE );\r",
    "cloneID": "c401c84cf7d1ecaab96e3770381cc33f",
    "clone": "e9cfb7ccf0be7eaefe3d95ef6ab86c30",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/BenchTest.java",
    "size": 753,
    "example": " Statement st = con.createStatement( ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE );\r",
    "cloneID": "5f0544473d6141d461b4071797fd56c2",
    "clone": "e9cfb7ccf0be7eaefe3d95ef6ab86c30",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/BenchTest.java",
    "size": 753,
    "example": " Statement st = con.createStatement( ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE );\r",
    "cloneID": "591e1fc08474ba177251d36ac126d28e",
    "clone": "e9cfb7ccf0be7eaefe3d95ef6ab86c30",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/BenchTest.java",
    "size": 753,
    "example": " Statement st = con.createStatement( ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE );\r",
    "cloneID": "48ccf39d8962f4c812b5b1df0061b230",
    "clone": "e9cfb7ccf0be7eaefe3d95ef6ab86c30",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestStatement.java",
    "size": 347,
    "example": " Statement st = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);\r",
    "cloneID": "2d2d30f68da671438cd1642d0b22d84e",
    "clone": "e2b7d861130a4c6c03db8493e6f89563",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestScrollable.java",
    "size": 319,
    "example": "\tStatement st = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);\r",
    "cloneID": "edb2217f5bd35b7b6a7dc72b79d0d3d8",
    "clone": "b04c8408d2816321d6084414077ec1ac",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestScrollable.java",
    "size": 319,
    "example": " Statement st = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);\r",
    "cloneID": "6a83b38117b092ffaedc1c14b2e6c065",
    "clone": "e2b7d861130a4c6c03db8493e6f89563",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestScrollable.java",
    "size": 319,
    "example": " Statement st = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);\r",
    "cloneID": "acb0a0834cd3688abbb8c8989e370b41",
    "clone": "e2b7d861130a4c6c03db8493e6f89563",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestScrollable.java",
    "size": 319,
    "example": " Statement st = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);\r",
    "cloneID": "e718b91023e479791f00c27b2e4b31a5",
    "clone": "e2b7d861130a4c6c03db8493e6f89563",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestScrollable.java",
    "size": 319,
    "example": " Statement st = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);\r",
    "cloneID": "3bf6db51263e5582b03eee5a33e551b8",
    "clone": "e2b7d861130a4c6c03db8493e6f89563",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestScrollable.java",
    "size": 319,
    "example": " Statement st = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);\r",
    "cloneID": "a21acd8b51e94ef6369b47e680cfd343",
    "clone": "e2b7d861130a4c6c03db8493e6f89563",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestResultSet.java",
    "size": 282,
    "example": " Statement st = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);\r",
    "cloneID": "d8a2c47f64e0da7ea67a7f18b746c2cf",
    "clone": "e2b7d861130a4c6c03db8493e6f89563",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestResultSet.java",
    "size": 282,
    "example": " Statement st = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);\r",
    "cloneID": "9603b0460b534b0c498cb1df7584d615",
    "clone": "e2b7d861130a4c6c03db8493e6f89563",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestResultSet.java",
    "size": 282,
    "example": " Statement st = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);\r",
    "cloneID": "4a7ef860b26818be5f1582ea48f62a8b",
    "clone": "e2b7d861130a4c6c03db8493e6f89563",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestResultSet.java",
    "size": 282,
    "example": " Statement st = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);\r",
    "cloneID": "eeaa3348ba8f763bd592e19f1ecf59e8",
    "clone": "e2b7d861130a4c6c03db8493e6f89563",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestResultSet.java",
    "size": 282,
    "example": " Statement st = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);\r",
    "cloneID": "3c95a28130b9cf72d05bea5b925a7be4",
    "clone": "e2b7d861130a4c6c03db8493e6f89563",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestOrderBy.java",
    "size": 821,
    "example": "\tStatement st = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);\r",
    "cloneID": "2c62c1c783a0fbcdf0b629e82e2d5ee9",
    "clone": "b04c8408d2816321d6084414077ec1ac",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestOrderBy.java",
    "size": 821,
    "example": "\tStatement st = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);\r",
    "cloneID": "ce8495e504706918f80cfda8a5189c4e",
    "clone": "b04c8408d2816321d6084414077ec1ac",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestOrderBy.java",
    "size": 821,
    "example": "\tStatement st = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);\r",
    "cloneID": "05f1389e133760d8971888de71fa7e97",
    "clone": "b04c8408d2816321d6084414077ec1ac",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/LongTreeList.java",
    "size": 623,
    "example": "\tlong result = listEnum.resultStack[listEnum.stack];\r",
    "cloneID": "6c165e63c8ce93eb0b2a0ff0fd2484c5",
    "clone": "7cab59b9197de842d1486f7b42e3a7a4",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/LongTreeList.java",
    "size": 623,
    "example": "\tlong result = listEnum.resultStack[listEnum.stack];\r",
    "cloneID": "142163b8ee04fae13c8fd825f4f59d7d",
    "clone": "7cab59b9197de842d1486f7b42e3a7a4",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/FileIndexNode.java",
    "size": 99,
    "example": " StoreImpl store = StoreImpl.createStore( null, storePage, SQLTokenizer.SELECT, offset);\r",
    "cloneID": "9ffc0ab4d2dbee86700b5a1da89a39e9",
    "clone": "0a37f8b2a67ca40447c563269b27ff59",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/View.java",
    "size": 146,
    "example": "\tStoreImpl store = StoreImpl.createStore( null, storePage, SQLTokenizer.SELECT, offset);\r",
    "cloneID": "2d8332207262abd59c7e31333efab4c8",
    "clone": "1b5e3190af3ad771bc7d7be3e1b2d865",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestOperatoren.java",
    "size": 281,
    "example": "){\r        super(testValue.dataType);\r        this.testValue = testValue;\r    }",
    "cloneID": "b93bfb502da218fb76dcdfcb2601e5a8",
    "clone": "d11746526bc3e1216ea67fc403b064a7",
    "cloneSize": 4
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestJoins.java",
    "size": 218,
    "example": "){\r        super(testValue.dataType);\r        this.testValue = testValue;\r    }",
    "cloneID": "4f84d27b5ae0da7e7057c2594fd1d016",
    "clone": "d11746526bc3e1216ea67fc403b064a7",
    "cloneSize": 4
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/MutableNumeric.java",
    "size": 594,
    "example": " boolean uebertrag = (temp >>> 32) != 0;\r",
    "cloneID": "0c104f87e1579cd58ddd3eb4eac502eb",
    "clone": "3e0e231c5d1e5d4fb4e58df27c1747c7",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/MutableNumeric.java",
    "size": 594,
    "example": " boolean uebertrag = (temp >>> 32) != 0;\r",
    "cloneID": "2e0167f0a2f2353a027d57b068aa0f18",
    "clone": "3e0e231c5d1e5d4fb4e58df27c1747c7",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestGroupBy.java",
    "size": 378,
    "example": "\tPreparedStatement pr = con.prepareStatement(\"INSERT into \" + table1 + \"(name, id) Values(?,?)\");\r",
    "cloneID": "e484a4687c09e13f1f95a2d0f1155a48",
    "clone": "f03d72c352edf4a93e2e9cab33459f24",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestOrderBy.java",
    "size": 821,
    "example": "\tPreparedStatement pr = con.prepareStatement(\"INSERT into \" + table1 + \"(v,c,nv,i,d,r,bi,b) Values(?,?,?,?,?,?,?,?)\");\r",
    "cloneID": "be23d600a262a23a23d3bdbbf6a57f30",
    "clone": "3b8b607907e21b80917a099d437d0598",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SSDatabaseMetaData.java",
    "size": 1039,
    "example": "\tString[] colNames = {\t\t\"TYPE_NAME\", \t\t\t\t\"DATA_TYPE\", \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"PRECISION\", \t\"LITERAL_PREFIX\", \"LITERAL_SUFFIX\", \t\t\"CREATE_PARAMS\", \"NULLABLE\", \t \"CASE_SENSITIVE\", \"SEARCHABLE\", \"UNSIGNED_ATTRIBUTE\", \"FIXED_PREC_SCALE\", \"AUTO_INCREMENT\", \"LOCAL_TYPE_NAME\", \"MINIMUM_SCALE\", \"MAXIMUM_SCALE\", \"SQL_DATA_TYPE\", \"SQL_DATETIME_SUB\", \"NUM_PREC_RADIX\"};\r",
    "cloneID": "eeb0552a0d35ff217575d57ee6c7a82f",
    "clone": "68c09a0367b3016c1bac10515b34bc2f",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestDBMetaData.java",
    "size": 310,
    "example": " String[] colNames = {\"TYPE_NAME\", \"DATA_TYPE\", \"PRECISION\", \"LITERAL_PREFIX\", \"LITERAL_SUFFIX\", \"CREATE_PARAMS\", \"NULLABLE\", \"CASE_SENSITIVE\", \"SEARCHABLE\", \"UNSIGNED_ATTRIBUTE\", \"FIXED_PREC_SCALE\", \"AUTO_INCREMENT\", \"LOCAL_TYPE_NAME\", \"MINIMUM_SCALE\", \"MAXIMUM_SCALE\", \"SQL_DATA_TYPE\", \"SQL_DATETIME_SUB\", \"NUM_PREC_RADIX\"};\r",
    "cloneID": "79444b1b872e8fe4dc8b8675558ed799",
    "clone": "b6b782ea219ea3471cadbfe929dd6abf",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/LongTreeList.java",
    "size": 623,
    "example": "((nextEntry == 0 && !firstNode) || nextEntry > octet){\r",
    "cloneID": "6c7aae734934b2ed72bc5cdef3685dab",
    "clone": "1ba807928558989a518f10f21c861bdb",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/LongTreeList.java",
    "size": 623,
    "example": "((nextEntry == 0 && !firstNode) || nextEntry > octet){\r",
    "cloneID": "d39118a3df5400407a11e2af2cb9af4d",
    "clone": "1ba807928558989a518f10f21c861bdb",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/Table.java",
    "size": 568,
    "example": "\tTableStorePageInsert lock = (TableStorePageInsert)locksInsert.get(i);\r",
    "cloneID": "ba7aff8d7ffae424eddad190c2b9b0e9",
    "clone": "be34260465676340dca5f3fac1867fd9",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/Table.java",
    "size": 568,
    "example": "\tTableStorePageInsert lock = (TableStorePageInsert)locksInsert.get(i);\r",
    "cloneID": "1e15bd71917b712cb8efc8dfa56aca62",
    "clone": "be34260465676340dca5f3fac1867fd9",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/Table.java",
    "size": 568,
    "example": "\t//the first StorePage in the linked list must be ever TableStorePageInsert\r\t\t\t\t\t\t\tTableStorePageInsert lock = (TableStorePageInsert)locksInsert.get(i);",
    "cloneID": "8abf8d78525c45229b161df63e8bb181",
    "clone": "a118264da12a7a49f174391dd0bfa852",
    "cloneSize": 2
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/Index.java",
    "size": 547,
    "example": "\tchar digit = (char)(key >> (i<<4));\r",
    "cloneID": "7e06211401f38aeaa6a8aa67e10a7062",
    "clone": "721e57596bc32dd0cece186ce1595e84",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/Index.java",
    "size": 547,
    "example": "\tchar digit = (char)(key >> (i<<4));\r",
    "cloneID": "2b41a5eb371637c69768a4adadf4d78d",
    "clone": "721e57596bc32dd0cece186ce1595e84",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SQLTokenizer.java",
    "size": 947,
    "example": " if(!wasWhiteSpace){\r\t                                tokens.add( new SQLToken( value, tokenStart, i) );\r\t                                value = 0;\r\t                            }",
    "cloneID": "2a253a97be43fc18eba8951e4fc45c95",
    "clone": "d79d055f1457a897951507e0f959c020",
    "cloneSize": 4
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SQLTokenizer.java",
    "size": 947,
    "example": " if(!wasWhiteSpace){\r                                   tokens.add( new SQLToken( value, tokenStart, i) );\r                                   value = 0;\r                                }",
    "cloneID": "17ac5cf9692407052f42886840a864cd",
    "clone": "71626d540dc7f6a964cc78d03953d4a2",
    "cloneSize": 4
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/Where.java",
    "size": 187,
    "example": "\tfinal void noRow() {\r\t\trowSource.noRow();\r\t\trow = 0;\r\t}",
    "cloneID": "2580579a1e76f8e400da120a28a98481",
    "clone": "2bc7ad4aaf6eecbf1b7cd53da95a764e",
    "cloneSize": 4
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/Distinct.java",
    "size": 145,
    "example": "\tfinal void noRow() {\r\t\trowSource.noRow();\r\t\trow = 0;\r\t}",
    "cloneID": "917287a40eaa6216f5ec9cf15cd3a45b",
    "clone": "2bc7ad4aaf6eecbf1b7cd53da95a764e",
    "cloneSize": 4
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/MutableNumeric.java",
    "size": 594,
    "example": " // simple Long Value\r                long temp = (((long)value[0]) << 32) | (value[1] & 0xFFFFFFFFL);",
    "cloneID": "5bbb78ced87da766cccc7f1ba1826449",
    "clone": "4be8c6a9a1e1fff7895900b4a1e58b72",
    "cloneSize": 2
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/MutableNumeric.java",
    "size": 594,
    "example": " // simple Long Value\r                long temp = (((long)value[0]) << 32) | (value[1] & 0xFFFFFFFFL);",
    "cloneID": "6e51f51d1a503c62a3fafe20adc55890",
    "clone": "4be8c6a9a1e1fff7895900b4a1e58b72",
    "cloneSize": 2
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/MutableNumeric.java",
    "size": 594,
    "example": " // simple Long Value\r                long temp = (((long)value[0]) << 32) | (value[1] & 0xFFFFFFFFL);",
    "cloneID": "d924192576c6e8268dd244c5b7fbbff8",
    "clone": "4be8c6a9a1e1fff7895900b4a1e58b72",
    "cloneSize": 2
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/MutableNumeric.java",
    "size": 594,
    "example": " // simple Long Value\r                long temp = (((long)value[0]) << 32) | (value[1] & 0xFFFFFFFFL);",
    "cloneID": "25001c210c317e1037d7c5346b0946bf",
    "clone": "4be8c6a9a1e1fff7895900b4a1e58b72",
    "cloneSize": 2
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunctionReturnString.java",
    "size": 93,
    "example": "\tfinal double getDouble() throws Exception {\r\t\tif(isNull()) return 0;\r\t\treturn Double.parseDouble(getString().trim());\r\t}",
    "cloneID": "9c55f0c895e333e2b56b90b6721d74b0",
    "clone": "bec9cbb7d2af1868d27afd3e60479247",
    "cloneSize": 4
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunctionReturnP1StringAndBinary.java",
    "size": 91,
    "example": "\tfinal double getDouble() throws Exception {\r\t\tif(isNull()) return 0;\r\t\treturn Double.parseDouble(getString().trim());\r\t}",
    "cloneID": "1ccf0cde8092c65fd43034c660f9552d",
    "clone": "bec9cbb7d2af1868d27afd3e60479247",
    "cloneSize": 4
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestOperatoren.java",
    "size": 281,
    "example": " a(\"real\"              , new Float(3.45),        new Float(4.56)),\r",
    "cloneID": "30aae886e1ece0932736dcc4bc2f7129",
    "clone": "36c08facd4f6774964ae6a393fb9ac87",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestJoins.java",
    "size": 218,
    "example": " a(\"real\"              , new Float(3.45),        new Float(4.56)),\r",
    "cloneID": "444f43781ea0fe51bd119d80bdda0246",
    "clone": "36c08facd4f6774964ae6a393fb9ac87",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/BasicTestCase.java",
    "size": 373,
    "example": " for(; k>= 0; k--) if(tmp[k] != 0) break;\r",
    "cloneID": "2b763957e92528d0a425f1a4d22a9b95",
    "clone": "f1cf5d049923b12c38de1bab07b9de1d",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/BasicTestCase.java",
    "size": 373,
    "example": "\tfor(; k>= 0; k--) if(tmp[k] != 0) break;\r",
    "cloneID": "1b3a9eece027735c74fbe93fa4b6aa5b",
    "clone": "f9978dc8bdf5a0f79ce28cf854bb0dc2",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/Utils.java",
    "size": 477,
    "example": " (byte)((hexDigit2int( hex[ offset++ ] ) << 4)\r                                | hexDigit2int( hex[ offset++ ] ))",
    "cloneID": "4c3383bbf8c40240bc9474dbfb53565e",
    "clone": "1ae7ffb8a426599d54c956c00cc715d8",
    "cloneSize": 2
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/Utils.java",
    "size": 477,
    "example": " (byte)((hexDigit2int( hex[ offset++ ] ) << 4)\r                                | hexDigit2int( hex[ offset++ ] ))",
    "cloneID": "b621db17b8b44c417e9b6feba4752efe",
    "clone": "1ae7ffb8a426599d54c956c00cc715d8",
    "cloneSize": 2
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SSCallableStatement.java",
    "size": 405,
    "example": "}catch(Exception e){\r            throw SmallSQLException.createFromException( e );\r        }",
    "cloneID": "9308a02a48bf959a6ae9f75b5c027f24",
    "clone": "cdec247734a618f0b6ac3c04afe24bbd",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SSCallableStatement.java",
    "size": 405,
    "example": "}catch(Exception e){\r            throw SmallSQLException.createFromException( e );\r        }",
    "cloneID": "844df5b635c50eebb1472f18ccdbc273",
    "clone": "cdec247734a618f0b6ac3c04afe24bbd",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SSCallableStatement.java",
    "size": 405,
    "example": "}catch(Exception e){\r            throw SmallSQLException.createFromException( e );\r        }",
    "cloneID": "a3928cc09674e999737c0941252f9f1a",
    "clone": "cdec247734a618f0b6ac3c04afe24bbd",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SSCallableStatement.java",
    "size": 405,
    "example": "}catch(Exception e){\r            throw SmallSQLException.createFromException( e );\r        }",
    "cloneID": "a7b450047980fd1aaa05624640d4acef",
    "clone": "cdec247734a618f0b6ac3c04afe24bbd",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SSCallableStatement.java",
    "size": 405,
    "example": "}catch(Exception e){\r            throw SmallSQLException.createFromException( e );\r        }",
    "cloneID": "eb5c96659733343f461f9bfacaf6cfb2",
    "clone": "cdec247734a618f0b6ac3c04afe24bbd",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SSCallableStatement.java",
    "size": 405,
    "example": "}catch(Exception e){\r            throw SmallSQLException.createFromException( e );\r        }",
    "cloneID": "b4c2cd21c4417d2982f1699435f246f7",
    "clone": "cdec247734a618f0b6ac3c04afe24bbd",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SSCallableStatement.java",
    "size": 405,
    "example": "}catch(Exception e){\r            throw SmallSQLException.createFromException( e );\r        }",
    "cloneID": "2191be1a46334127981b1de00295f52c",
    "clone": "cdec247734a618f0b6ac3c04afe24bbd",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SSCallableStatement.java",
    "size": 405,
    "example": "}catch(Exception e){\r            throw SmallSQLException.createFromException( e );\r        }",
    "cloneID": "0377c569906e66d4e45399139ea47284",
    "clone": "cdec247734a618f0b6ac3c04afe24bbd",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SSCallableStatement.java",
    "size": 405,
    "example": "}catch(Exception e){\r            throw SmallSQLException.createFromException( e );\r        }",
    "cloneID": "9ceee7d981ea2b5121bf0076d284c6e7",
    "clone": "cdec247734a618f0b6ac3c04afe24bbd",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SSCallableStatement.java",
    "size": 405,
    "example": "}catch(Exception e){\r            throw SmallSQLException.createFromException( e );\r        }",
    "cloneID": "6c9bbc9dd3dcee3abba49fe02e9ac5cc",
    "clone": "cdec247734a618f0b6ac3c04afe24bbd",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SSCallableStatement.java",
    "size": 405,
    "example": "}catch(Exception e){\r            throw SmallSQLException.createFromException( e );\r        }",
    "cloneID": "85cc9cb70beef034bd2f8b972a64f01e",
    "clone": "cdec247734a618f0b6ac3c04afe24bbd",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SSCallableStatement.java",
    "size": 405,
    "example": "}catch(Exception e){\r            throw SmallSQLException.createFromException( e );\r        }",
    "cloneID": "e946565ddb892ebd142b8d7bf861ced6",
    "clone": "cdec247734a618f0b6ac3c04afe24bbd",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SSCallableStatement.java",
    "size": 405,
    "example": "}catch(Exception e){\r            throw SmallSQLException.createFromException( e );\r        }",
    "cloneID": "9a16e22c243f38d6501b57dc4bab8449",
    "clone": "cdec247734a618f0b6ac3c04afe24bbd",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SSDatabaseMetaData.java",
    "size": 1039,
    "example": " catch (Exception e) {\r\t\t\tthrow SmallSQLException.createFromException(e);\r\t\t}",
    "cloneID": "31624777a0dabc0bba305a8c8e77d64b",
    "clone": "7209242cd5048ef310fb0b56c120b505",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SSDatabaseMetaData.java",
    "size": 1039,
    "example": " catch (Exception e) {\r\t\t\tthrow SmallSQLException.createFromException(e);\r\t\t}",
    "cloneID": "fe57e4b6b4a8704cded0cf7d762500da",
    "clone": "7209242cd5048ef310fb0b56c120b505",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SSDatabaseMetaData.java",
    "size": 1039,
    "example": " catch (Exception e) {\r\t\t\tthrow SmallSQLException.createFromException(e);\r\t\t}",
    "cloneID": "615c0227039e3513585801194c5f2040",
    "clone": "7209242cd5048ef310fb0b56c120b505",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SSDatabaseMetaData.java",
    "size": 1039,
    "example": " catch (Exception e) {\r\t\t\tthrow SmallSQLException.createFromException(e);\r\t\t}",
    "cloneID": "93054f17135d2db7a52dc5cadb8df099",
    "clone": "7209242cd5048ef310fb0b56c120b505",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SSDatabaseMetaData.java",
    "size": 1039,
    "example": " catch (Exception e) {\r\t\t\tthrow SmallSQLException.createFromException(e);\r\t\t}",
    "cloneID": "dd49687eb8803a9b67884cef84a7a28c",
    "clone": "7209242cd5048ef310fb0b56c120b505",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SSDatabaseMetaData.java",
    "size": 1039,
    "example": " catch (Exception e) {\r\t\t\tthrow SmallSQLException.createFromException(e);\r\t\t}",
    "cloneID": "01958c2b52b5dacc0f3389f3075abd14",
    "clone": "7209242cd5048ef310fb0b56c120b505",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SSPreparedStatement.java",
    "size": 338,
    "example": "}catch(Exception e){\r    \t\tthrow SmallSQLException.createFromException(e);\r    \t}",
    "cloneID": "e01ef8acc226babfc173565d30e9f925",
    "clone": "56b41f09ccec9dd0d5633274617c3ae2",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SSPreparedStatement.java",
    "size": 338,
    "example": "}catch(Exception e){\r\t\t\t\tthrow SmallSQLException.createFromException(e);\r\t\t\t}",
    "cloneID": "53760740390bea0167f534babdf185b6",
    "clone": "b45f2a0c2602f7f3b2a524991fe4ab4a",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/StorePage.java",
    "size": 91,
    "example": "}catch(Exception e){\r\t\t\tthrow SmallSQLException.createFromException(e);\r\t\t}",
    "cloneID": "88a30f6e0f45e6e955413004d3ada865",
    "clone": "4f684f77425a4b1ffe1a3a312fbb1672",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SSStatement.java",
    "size": 413,
    "example": "}catch(Exception e){\r            throw SmallSQLException.createFromException(e);\r        }",
    "cloneID": "fc8b63671db0a4ddb9d7ae59f9134c4a",
    "clone": "db4e00a8c6d98242658896751436a668",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/ViewResult.java",
    "size": 283,
    "example": "}catch(Exception e){\r\t\t\tthrow SmallSQLException.createFromException(e);\r\t\t}",
    "cloneID": "30fe90e999341abb9ac68711ed0f052d",
    "clone": "4f684f77425a4b1ffe1a3a312fbb1672",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/Database.java",
    "size": 546,
    "example": "}catch(Exception e){\r        \tthrow SmallSQLException.createFromException(e);\r        }",
    "cloneID": "4820b1473caac374c0c32995a3490341",
    "clone": "9f1170d64dafbfc9b9acaad8ee4a249e",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/Database.java",
    "size": 546,
    "example": " catch (Exception e) {\r\t\t\t\t\t\tthrow SmallSQLException.createFromException(e);\r\t\t\t\t\t}",
    "cloneID": "937169ec353f17630fc488d97fae802f",
    "clone": "42bbb65376ed89471b7f3df236da3cd4",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SSResultSet.java",
    "size": 935,
    "example": "}catch(Exception e){\r            throw SmallSQLException.createFromException( e );\r        }",
    "cloneID": "10dabceb3d03614590476dc1194a2fc5",
    "clone": "cdec247734a618f0b6ac3c04afe24bbd",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SSResultSet.java",
    "size": 935,
    "example": "}catch(Exception e){\r            throw SmallSQLException.createFromException( e );\r        }",
    "cloneID": "37129cdc6d1bdf793158e4a3a136f7b8",
    "clone": "cdec247734a618f0b6ac3c04afe24bbd",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SSResultSet.java",
    "size": 935,
    "example": "}catch(Exception e){\r            throw SmallSQLException.createFromException( e );\r        }",
    "cloneID": "0628ec3cf13f3cdfbf4433737f51e8d6",
    "clone": "cdec247734a618f0b6ac3c04afe24bbd",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SSResultSet.java",
    "size": 935,
    "example": "}catch(Exception e){\r            throw SmallSQLException.createFromException( e );\r        }",
    "cloneID": "196e605c6ea3b7e95885c9b7252e81bb",
    "clone": "cdec247734a618f0b6ac3c04afe24bbd",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SSResultSet.java",
    "size": 935,
    "example": "}catch(Exception e){\r            throw SmallSQLException.createFromException( e );\r        }",
    "cloneID": "c5ba636dab26240bc3826a2f28ff0aa8",
    "clone": "cdec247734a618f0b6ac3c04afe24bbd",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SSResultSet.java",
    "size": 935,
    "example": "}catch(Exception e){\r            throw SmallSQLException.createFromException( e );\r        }",
    "cloneID": "e1c2df1afc69775b870875ce492d797f",
    "clone": "cdec247734a618f0b6ac3c04afe24bbd",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SSResultSet.java",
    "size": 935,
    "example": "}catch(Exception e){\r            throw SmallSQLException.createFromException( e );\r        }",
    "cloneID": "b7451ab641b6c3630808a867cb83d0bb",
    "clone": "cdec247734a618f0b6ac3c04afe24bbd",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SSResultSet.java",
    "size": 935,
    "example": "}catch(Exception e){\r            throw SmallSQLException.createFromException( e );\r        }",
    "cloneID": "8c0fea9104c87229ffb84aaed602f2c2",
    "clone": "cdec247734a618f0b6ac3c04afe24bbd",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SSResultSet.java",
    "size": 935,
    "example": "}catch(Exception e){\r            throw SmallSQLException.createFromException( e );\r        }",
    "cloneID": "5c611e6082f810046e095441361e9fec",
    "clone": "cdec247734a618f0b6ac3c04afe24bbd",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SSResultSet.java",
    "size": 935,
    "example": "}catch(Exception e){\r            throw SmallSQLException.createFromException( e );\r        }",
    "cloneID": "85dc0d8dd94f54d510af319009546a5b",
    "clone": "cdec247734a618f0b6ac3c04afe24bbd",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SSResultSet.java",
    "size": 935,
    "example": "}catch(Exception e){\r            throw SmallSQLException.createFromException( e );\r        }",
    "cloneID": "86c5fc46f81e2042203297378acb6934",
    "clone": "cdec247734a618f0b6ac3c04afe24bbd",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SSResultSet.java",
    "size": 935,
    "example": "}catch(Exception e){\r            throw SmallSQLException.createFromException( e );\r        }",
    "cloneID": "02aad65b91faf6a99bc2450423e9fda9",
    "clone": "cdec247734a618f0b6ac3c04afe24bbd",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SSResultSet.java",
    "size": 935,
    "example": "}catch(Exception e){\r            throw SmallSQLException.createFromException( e );\r        }",
    "cloneID": "b86627121224173e4028e3cb73c504e2",
    "clone": "cdec247734a618f0b6ac3c04afe24bbd",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SSResultSet.java",
    "size": 935,
    "example": "}catch(Exception e){\r            throw SmallSQLException.createFromException(e);\r        }",
    "cloneID": "2d83d3ffe47b42bcfa51ffa3c8f1cdbd",
    "clone": "db4e00a8c6d98242658896751436a668",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SSResultSet.java",
    "size": 935,
    "example": "}catch(Exception e){\r\t\t\tthrow SmallSQLException.createFromException(e);\r\t\t}",
    "cloneID": "59de56b56f3f7f9126f61ec65ca9e5ac",
    "clone": "4f684f77425a4b1ffe1a3a312fbb1672",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SSResultSet.java",
    "size": 935,
    "example": "}catch(Exception e){\r    \t\tthrow SmallSQLException.createFromException(e);\r    \t}",
    "cloneID": "46c6a4602962ab2d4aaf7d65a710f28a",
    "clone": "56b41f09ccec9dd0d5633274617c3ae2",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SSResultSet.java",
    "size": 935,
    "example": "}catch(Exception e){\r\t\t\tthrow SmallSQLException.createFromException(e);\r\t\t}",
    "cloneID": "0ba86245bd9f7effbf8b4e9d6dccd985",
    "clone": "4f684f77425a4b1ffe1a3a312fbb1672",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SSResultSet.java",
    "size": 935,
    "example": "}catch(Exception e){\r\t\t\tthrow SmallSQLException.createFromException(e);\r\t\t}",
    "cloneID": "c7373a43dd89b826e03976bbab532aed",
    "clone": "4f684f77425a4b1ffe1a3a312fbb1672",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SSResultSet.java",
    "size": 935,
    "example": "}catch(Exception e){\r\t\t\tthrow SmallSQLException.createFromException(e);\r\t\t}",
    "cloneID": "59f6cf592e78af4e5b03c44d62c5877d",
    "clone": "4f684f77425a4b1ffe1a3a312fbb1672",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SSResultSet.java",
    "size": 935,
    "example": "}catch(Exception e){\r\t\t\tthrow SmallSQLException.createFromException(e);\r\t\t}",
    "cloneID": "cdb759b83f137a099e9e2d2f6408fa9f",
    "clone": "4f684f77425a4b1ffe1a3a312fbb1672",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SSResultSet.java",
    "size": 935,
    "example": "}catch(Exception e){\r\t\t\tthrow SmallSQLException.createFromException(e);\r\t\t}",
    "cloneID": "1fefe9a948635bb48257e10375eac2d1",
    "clone": "4f684f77425a4b1ffe1a3a312fbb1672",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SSResultSet.java",
    "size": 935,
    "example": "}catch(Exception e){\r\t\t\tthrow SmallSQLException.createFromException(e);\r\t\t}",
    "cloneID": "4e337b3f2fe43348cfc2b5093649a7c8",
    "clone": "4f684f77425a4b1ffe1a3a312fbb1672",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SSResultSet.java",
    "size": 935,
    "example": "}catch(Exception e){\r\t\t\tthrow SmallSQLException.createFromException(e);\r\t\t}",
    "cloneID": "1526e7f810f87f0e4f36ed297615f965",
    "clone": "4f684f77425a4b1ffe1a3a312fbb1672",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SSResultSet.java",
    "size": 935,
    "example": "}catch(Exception e){\r\t\t\tthrow SmallSQLException.createFromException(e);\r\t\t}",
    "cloneID": "2dcbe4645d296da84ebcff0e905c36d8",
    "clone": "4f684f77425a4b1ffe1a3a312fbb1672",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SSResultSet.java",
    "size": 935,
    "example": " catch (Exception e) {\r            throw SmallSQLException.createFromException(e);\r        }",
    "cloneID": "e55fb4606962f0313595f2d7cb6442eb",
    "clone": "ac10e7826530a2f88adbe50b2e613de3",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SSResultSet.java",
    "size": 935,
    "example": "}catch(Exception e){\r            throw SmallSQLException.createFromException( e );\r        }",
    "cloneID": "bb5ae51ee90485d97ab17c5d695b3350",
    "clone": "cdec247734a618f0b6ac3c04afe24bbd",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SSResultSet.java",
    "size": 935,
    "example": "}catch(Exception e){\r            throw SmallSQLException.createFromException( e );\r        }",
    "cloneID": "969e7f96ba56445dc40f3c47bab5c7c1",
    "clone": "cdec247734a618f0b6ac3c04afe24bbd",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SSResultSet.java",
    "size": 935,
    "example": "}catch(Exception e){\r            throw SmallSQLException.createFromException( e );\r        }",
    "cloneID": "8d88c6ba204b45f73bb628215e537bc6",
    "clone": "cdec247734a618f0b6ac3c04afe24bbd",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SSResultSet.java",
    "size": 935,
    "example": "}catch(Exception e){\r            throw SmallSQLException.createFromException( e );\r        }",
    "cloneID": "a772596100a6063b64fdba10e49592b2",
    "clone": "cdec247734a618f0b6ac3c04afe24bbd",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SSConnection.java",
    "size": 392,
    "example": " SSPreparedStatement pr = new SSPreparedStatement( this, sql);\r",
    "cloneID": "287bf99940eed3945e3efb122c336807",
    "clone": "7a063fc5e5a887369664cfd429f68a75",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SSConnection.java",
    "size": 392,
    "example": " SSPreparedStatement pr = new SSPreparedStatement( this, sql);\r",
    "cloneID": "d4a92ba26972115d9c39a46e23c07dd4",
    "clone": "7a063fc5e5a887369664cfd429f68a75",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SSConnection.java",
    "size": 392,
    "example": " SSPreparedStatement pr = new SSPreparedStatement( this, sql);\r",
    "cloneID": "11ba3c504640fae35d72202e776a2a05",
    "clone": "7a063fc5e5a887369664cfd429f68a75",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/StoreImpl.java",
    "size": 1548,
    "example": " StoreImpl store = table.getLobStore( ((TableStorePage)storePage).con, lobFilePos, SQLTokenizer.SELECT );\r",
    "cloneID": "c716d31e8af98d415740d741136ae4a5",
    "clone": "10c931e8cbb8b9300381aff438282f10",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/StoreImpl.java",
    "size": 1548,
    "example": " StoreImpl store = table.getLobStore( ((TableStorePage)storePage).con, lobFilePos, SQLTokenizer.SELECT );\r",
    "cloneID": "9f37a11043ca19445ed1ce7df104f786",
    "clone": "10c931e8cbb8b9300381aff438282f10",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SSDatabaseMetaData.java",
    "size": 1039,
    "example": "\tString[] colNames = {\"TABLE_CAT\",\"TABLE_SCHEM\",\"TABLE_NAME\",\"TABLE_TYPE\",\"REMARKS\",\"TYPE_CAT\",\"TYPE_SCHEM\",\"TYPE_NAME\",\"SELF_REFERENCING_COL_NAME\",\"REF_GENERATION\"};\r",
    "cloneID": "b5c2ce98704381bb67f13807009e807f",
    "clone": "1c40c8d6bf5a944293033b0368421dba",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestDBMetaData.java",
    "size": 310,
    "example": " String[] colNames = {\"TABLE_CAT\",\"TABLE_SCHEM\",\"TABLE_NAME\",\"TABLE_TYPE\",\"REMARKS\",\"TYPE_CAT\",\"TYPE_SCHEM\",\"TYPE_NAME\",\"SELF_REFERENCING_COL_NAME\",\"REF_GENERATION\"};\r",
    "cloneID": "a76f63e4120713f1e484b14cdbd8eeb3",
    "clone": "4001b4887936a4e2e0c2af69ab45ca50",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestOperatoren.java",
    "size": 281,
    "example": " a(\"money\"             , new Float(3.45),        new Float(4.56)),\r",
    "cloneID": "3de1097dace1c3239802f4e8f82645e5",
    "clone": "d825e07819452f2574f08723bd3210ea",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestJoins.java",
    "size": 218,
    "example": " a(\"money\"             , new Float(3.45),        new Float(4.56)),\r",
    "cloneID": "28065373befb7cee97f35bae8cf3a502",
    "clone": "d825e07819452f2574f08723bd3210ea",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/LongTreeList.java",
    "size": 623,
    "example": "\tint octet = (int)(value >> shift) & 0xFFFF;\r",
    "cloneID": "aa80985f82878e5a014d5e59f470a5bc",
    "clone": "c1581c8aa0ee1d2efe111f411f59bb52",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/LongTreeList.java",
    "size": 623,
    "example": "\tint octet = (int)(value >> shift) & 0xFFFF;\r",
    "cloneID": "316b1a0b598c9fc0770a6eab420396bf",
    "clone": "c1581c8aa0ee1d2efe111f411f59bb52",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestLanguage.java",
    "size": 286,
    "example": "\tConnection conn = AllTests.createConnection(\"?locale=it\", null);\r",
    "cloneID": "db852ab4d5c22d047233b4be21de005e",
    "clone": "8ba29569ddb0e8bb148fb172ef6a3b9e",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestLanguage.java",
    "size": 286,
    "example": "\tConnection conn = AllTests.createConnection(\"?locale=it\", null);\r",
    "cloneID": "51cd0cd4c4665861ab0686dec997eaa5",
    "clone": "8ba29569ddb0e8bb148fb172ef6a3b9e",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SSConnection.java",
    "size": 392,
    "example": " TransactionStep page = (TransactionStep)commitPages.get(i);\r",
    "cloneID": "ccc7a272512b3fcaa3a9536f216f0f63",
    "clone": "b88c8b1d0011067828bccab016a8ad8d",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SSConnection.java",
    "size": 392,
    "example": " TransactionStep page = (TransactionStep)commitPages.get(i);\r",
    "cloneID": "9644ce7f9743b905766e19973eaaa2c1",
    "clone": "b88c8b1d0011067828bccab016a8ad8d",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SSConnection.java",
    "size": 392,
    "example": " TransactionStep page = (TransactionStep)commitPages.get(i);\r",
    "cloneID": "b2966785bbb24e7d15c19330420973c4",
    "clone": "b88c8b1d0011067828bccab016a8ad8d",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SSConnection.java",
    "size": 392,
    "example": " TransactionStep page = (TransactionStep)commitPages.get(i);\r",
    "cloneID": "8097ab99f5b351633ce5a27606c73caf",
    "clone": "b88c8b1d0011067828bccab016a8ad8d",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestGroupBy.java",
    "size": 378,
    "example": "\tassertEquals( \"loop:\"+i, 1, rs.getInt(1));\r",
    "cloneID": "eec241066494b5ba5a3df8398da115a3",
    "clone": "c7911e4e3cf66577692706975b75abd9",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestGroupBy.java",
    "size": 378,
    "example": "\tassertEquals( \"loop:\"+i, 1, rs.getInt(1));\r",
    "cloneID": "39f71baa62288b1deffd476f0dcea5c0",
    "clone": "c7911e4e3cf66577692706975b75abd9",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/Expression.java",
    "size": 235,
    "example": "\tint getPrecision(){\r\t\treturn SSResultSetMetaData.getDataTypePrecision( getDataType(), -1 );\r\t}",
    "cloneID": "80bd51a051b31c9c0393a07346a13562",
    "clone": "bd0e5ea918c899556d082738cc6d21c5",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunctionRepeat.java",
    "size": 79,
    "example": " int getPrecision() {\r        return SSResultSetMetaData.getDataTypePrecision( getDataType(), -1 );\r    }",
    "cloneID": "4b879c61cfaf18c735df63530171d4f3",
    "clone": "ee54d72db92e3429e095084d12a674d8",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunctionReplace.java",
    "size": 110,
    "example": " int getPrecision() {\r        return SSResultSetMetaData.getDataTypePrecision( getDataType(), -1 );\r    }",
    "cloneID": "aee53d495425a1b7bb30628d7eed60be",
    "clone": "ee54d72db92e3429e095084d12a674d8",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SSDatabaseMetaData.java",
    "size": 1039,
    "example": " {\"TABLE_CAT\", \"TABLE_SCHEM\", \"TABLE_NAME\", \"NON_UNIQUE\", \"INDEX_QUALIFIER\", \"INDEX_NAME\", \"TYPE\", \"ORDINAL_POSITION\", \"COLUMN_NAME\", \"ASC_OR_DESC\", \"CARDINALITY\", \"PAGES\", \"FILTER_CONDITION\"};\r",
    "cloneID": "f60fa52725e9c966ae361d643055c962",
    "clone": "4a3f69e969a5ead6278b164e4cb5a161",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestDBMetaData.java",
    "size": 310,
    "example": " {\"TABLE_CAT\", \"TABLE_SCHEM\", \"TABLE_NAME\", \"NON_UNIQUE\", \"INDEX_QUALIFIER\", \"INDEX_NAME\", \"TYPE\", \"ORDINAL_POSITION\", \"COLUMN_NAME\", \"ASC_OR_DESC\", \"CARDINALITY\", \"PAGES\", \"FILTER_CONDITION\"};\r",
    "cloneID": "f3bf50d93447d5df379bc7a5dd7a3971",
    "clone": "4a3f69e969a5ead6278b164e4cb5a161",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/StoreImpl.java",
    "size": 1548,
    "example": " page[ offset++ ] = (byte)(value >> 24);\r",
    "cloneID": "0c19dc2009270e7fcda63b8703cb8de0",
    "clone": "4d8f129e4586c19216c0a5b430542e3f",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/StoreImpl.java",
    "size": 1548,
    "example": " page[ offset++ ] = (byte)(value >> 24);\r",
    "cloneID": "ac80c3b01866cb512261807845757544",
    "clone": "4d8f129e4586c19216c0a5b430542e3f",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/MemoryStream.java",
    "size": 163,
    "example": "\tpuffer[ offset++ ] = (byte)(value >> 24);\r",
    "cloneID": "f22d669db312c9056bec8be46b320150",
    "clone": "20b74f689f5b032ddd9cafdf3e9c4964",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/MemoryStream.java",
    "size": 163,
    "example": "\tpuffer[ offset++ ] = (byte)(value >> 24);\r",
    "cloneID": "35b60a416796a7462a5660f08cdf9bb0",
    "clone": "20b74f689f5b032ddd9cafdf3e9c4964",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/IndexDescription.java",
    "size": 278,
    "example": " 'S' << 24 | 'Q' << 16 | 'L' << 8 | 'I';\r",
    "cloneID": "2517117900c38c46717d39401e9fe3f6",
    "clone": "6638a9d7fd9fc515019a993dbeb06a6c",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/TableView.java",
    "size": 194,
    "example": " 'S' << 24 | 'Q' << 16 | 'L' << 8 | 'T';\r",
    "cloneID": "55a447e563d474e4a81944837337610c",
    "clone": "12d986db96b2c08e7fba1f14dafcec18",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/TableView.java",
    "size": 194,
    "example": " 'S' << 24 | 'Q' << 16 | 'L' << 8 | 'V';\r",
    "cloneID": "822008bd379ff8ba4fbd1a65e5da0b50",
    "clone": "a8c50319c6ccc42aa1a2393a28d96e32",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunctionTruncate.java",
    "size": 71,
    "example": "\tif(places > 0){\r\t\t\tvalue /= factor;\r\t\t}else{\r\t\t\tvalue *= factor;\r\t\t}",
    "cloneID": "38bcd57747af225219e1859d2445307b",
    "clone": "df6012120d9c45efafdef4c61badfce8",
    "cloneSize": 5
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunctionRound.java",
    "size": 71,
    "example": "\tif(places > 0){\r\t\t\tvalue /= factor;\r\t\t}else{\r\t\t\tvalue *= factor;\r\t\t}",
    "cloneID": "78a74faf0374f202d07a6e5eeaa0b280",
    "clone": "df6012120d9c45efafdef4c61badfce8",
    "cloneSize": 5
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/Command.java",
    "size": 181,
    "example": "}catch(Throwable e){\r            con.rollback(savepoint);\r            throw SmallSQLException.createFromException(e);\r        }",
    "cloneID": "dc71bd02b5c50d751af2a34bee2be591",
    "clone": "322770a0a4eac5f71c99f5cc1afba836",
    "cloneSize": 4
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/CommandSelect.java",
    "size": 570,
    "example": "}catch(Throwable e){\r\t\t\tcon.rollback(savepoint);\r\t\t\tthrow SmallSQLException.createFromException(e);\r\t\t}",
    "cloneID": "48ae5faa0c7a7a714518681891ffd82e",
    "clone": "1680ffd2d479af198915b22061865c46",
    "cloneSize": 4
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/CommandSelect.java",
    "size": 570,
    "example": "}catch(Throwable e){\r\t\t\tcon.rollback(savepoint);\r\t\t\tthrow SmallSQLException.createFromException(e);\r\t\t}",
    "cloneID": "14142343e72eca72c4be554327efb873",
    "clone": "1680ffd2d479af198915b22061865c46",
    "cloneSize": 4
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/CommandSelect.java",
    "size": 570,
    "example": "}catch(Throwable e){\r\t\t\tcon.rollback(savepoint);\r\t\t\tthrow SmallSQLException.createFromException(e);\r\t\t}",
    "cloneID": "326701f8b3623586d9ac0acb35431941",
    "clone": "1680ffd2d479af198915b22061865c46",
    "cloneSize": 4
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunctionReturnString.java",
    "size": 93,
    "example": "\tfinal MutableNumeric getNumeric() throws Exception {\r\t\tif(isNull()) return null;\r\t\treturn new MutableNumeric(getString().trim());\r\t}",
    "cloneID": "5266f9c2be729d463fafd585541538cb",
    "clone": "1d3836683625e814a819e3065688140d",
    "cloneSize": 4
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunctionReturnP1StringAndBinary.java",
    "size": 91,
    "example": "\tfinal MutableNumeric getNumeric() throws Exception {\r\t\tif(isNull()) return null;\r\t\treturn new MutableNumeric(getString().trim());\r\t}",
    "cloneID": "ea96d25bd0f3d9e485e44f0a55ac8530",
    "clone": "1d3836683625e814a819e3065688140d",
    "cloneSize": 4
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestOperatoren.java",
    "size": 281,
    "example": " a(\"time\"              , new Time(9, 1,1),       new Time(9, 2,2)),\r",
    "cloneID": "f7d0a814a6b99c6d6d739649aea92bf7",
    "clone": "cc43ee9faaadf937df4bf6f64b7bd846",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestJoins.java",
    "size": 218,
    "example": " a(\"time\"              , new Time(9, 1,1),       new Time(9, 2,2)),\r",
    "cloneID": "4036806d610fa60dfc649bf181852fa3",
    "clone": "cc43ee9faaadf937df4bf6f64b7bd846",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestTransactions.java",
    "size": 509,
    "example": "\ttry{\r\t\t\t\tcon.createStatement().execute(\"Drop Table transactions\");\r\t\t\t}catch(Throwable e){e.printStackTrace();}",
    "cloneID": "4524d86828bddef0cf4beb66487a1a40",
    "clone": "7766d5d36186185764befb91352ff3a0",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestTransactions.java",
    "size": 509,
    "example": "\ttry{\r\t\t\t\tcon.createStatement().execute(\"Drop Table transactions\");\r\t\t\t}catch(Throwable e){e.printStackTrace();}",
    "cloneID": "595f0cfc2d642cca23d33bce767a6304",
    "clone": "7766d5d36186185764befb91352ff3a0",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestTransactions.java",
    "size": 509,
    "example": "\ttry{\r\t\t\t\tcon.createStatement().execute(\"Drop Table transactions\");\r\t\t\t}catch(Throwable e){e.printStackTrace();}",
    "cloneID": "f191d76f469c6cfcefc7c11be429f9a6",
    "clone": "7766d5d36186185764befb91352ff3a0",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestTransactions.java",
    "size": 509,
    "example": "\ttry{\r\t\t\t\tcon.createStatement().execute(\"Drop Table transactions\");\r\t\t\t}catch(Throwable e){e.printStackTrace();}",
    "cloneID": "d4b39244ec99d059283d4fcd05761612",
    "clone": "7766d5d36186185764befb91352ff3a0",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestTransactions.java",
    "size": 509,
    "example": "\ttry{\r\t\t\t\tcon.createStatement().execute(\"Drop Table transactions\");\r\t\t\t}catch(Throwable e){e.printStackTrace();}",
    "cloneID": "fb3d10d8b36c6174b65e95f77b011960",
    "clone": "7766d5d36186185764befb91352ff3a0",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestTransactions.java",
    "size": 509,
    "example": "\ttry{\r\t\t\t\tcon.createStatement().execute(\"Drop Table transactions\");\r\t\t\t}catch(Throwable e){e.printStackTrace();}",
    "cloneID": "85353c783b817d054c9f1d3f5173690d",
    "clone": "7766d5d36186185764befb91352ff3a0",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestTransactions.java",
    "size": 509,
    "example": "\ttry{\r\t\t\t\tcon.createStatement().execute(\"Drop Table transactions\");\r\t\t\t}catch(Throwable e){e.printStackTrace();}",
    "cloneID": "ef9bcd7d42cbfc11b4e589a6aea3ba06",
    "clone": "7766d5d36186185764befb91352ff3a0",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestTransactions.java",
    "size": 509,
    "example": "\ttry{\r\t\t\t\tcon.createStatement().execute(\"Drop Table transactions\");\r\t\t\t}catch(Throwable e){e.printStackTrace();}",
    "cloneID": "0bcb044f83feeb5cd0e754d4af884859",
    "clone": "7766d5d36186185764befb91352ff3a0",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestTransactions.java",
    "size": 509,
    "example": "\ttry{\r\t\t\t\tcon.createStatement().execute(\"Drop Table transactions\");\r\t\t\t}catch(Throwable e){e.printStackTrace();}",
    "cloneID": "0946507621f22a24886eda398e0a5450",
    "clone": "7766d5d36186185764befb91352ff3a0",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestOperatoren.java",
    "size": 281,
    "example": " a(\"smalldatetime\"     , new Timestamp(99, 1,1,0,0,0,0),      new Timestamp(99, 2,2,0,0,0,0)),\r",
    "cloneID": "d1d0679a1631b7b9abef98e530c5d258",
    "clone": "553dc18730a028f7348740dc95e78486",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestJoins.java",
    "size": 218,
    "example": " a(\"smalldatetime\"     , new Timestamp(99, 1,1,0,0,0,0),      new Timestamp(99, 2,2,0,0,0,0)),\r",
    "cloneID": "2356cf47ed1b1fd2579f50c4bc60749c",
    "clone": "553dc18730a028f7348740dc95e78486",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestTransactions.java",
    "size": 509,
    "example": "\tResultSet rs2 = con2.createStatement().executeQuery(\"Select count(*) from transactions\");\r",
    "cloneID": "e64d4998dacc569b77253f1f62f8782c",
    "clone": "ff2e57d7c98649910422ab50c9cbd725",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestTransactions.java",
    "size": 509,
    "example": "\tResultSet rs2 = con2.createStatement().executeQuery(\"Select count(*) from transactions\");\r",
    "cloneID": "07cc79f2f5287e393e03880cf990ac59",
    "clone": "ff2e57d7c98649910422ab50c9cbd725",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestTransactions.java",
    "size": 509,
    "example": " //reading should be possible on a second connection\r            ResultSet rs2 = con2.createStatement().executeQuery(\"Select count(*) from transactions\");",
    "cloneID": "01bc9098ece3a2161aca9c6bbe2b8fa1",
    "clone": "0b15300557cfef16e91d99b4428f6fbd",
    "cloneSize": 2
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/Utils.java",
    "size": 477,
    "example": " digits = {'0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F'};\r",
    "cloneID": "8a4f9f211e7151e02de1d2a749ac3328",
    "clone": "d2c4c99cf70578ec32cfd2ad9abe41ed",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/BasicTestCase.java",
    "size": 373,
    "example": " digits = {'0','1','2','3','4','5','6','7','8','9','A','B','C','D','E','F'};\r",
    "cloneID": "6ab35fc6119cd0692c1ebae6c3df42b2",
    "clone": "a3a9a104043ba49d2f15d7b15c724f6e",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestLanguage.java",
    "size": 286,
    "example": " {\r\t\t\trecreateTestTab(stat);\r\t\t\t\r\t\t\tstat.execute(\"CREATE TABLE \" + TABLE_NAME + \" (id_test INT)\");\r\t\t\tfail();\r\t\t}",
    "cloneID": "139c182ef1f5f6365322d51b2231c22d",
    "clone": "83088cfac3453ecb6e0ef483c08dfe80",
    "cloneSize": 6
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestLanguage.java",
    "size": 286,
    "example": " {\r\t\t\t\trecreateTestTab(stat);\r\t\r\t\t\t\tstat.execute(\"CREATE TABLE \" + TABLE_NAME + \" (id_test INT)\");\r\t\t\t\tfail();\r\t\t\t}",
    "cloneID": "e3a12761f3c335b0a71d41077e021b50",
    "clone": "52203442404368050bd0272230c26644",
    "cloneSize": 6
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestGroupBy.java",
    "size": 378,
    "example": "\tassertEquals( \"loop:\"+i, 3, rs.getInt(1));\r",
    "cloneID": "c033f51186677d7a55d38a32260cb4c3",
    "clone": "510e18472491d9f2a4500a88afe1815a",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestGroupBy.java",
    "size": 378,
    "example": "\tassertEquals( \"loop:\"+i, 3, rs.getInt(1));\r",
    "cloneID": "a4df9a768a4eb2df94b720ed48b409f0",
    "clone": "510e18472491d9f2a4500a88afe1815a",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SSResultSet.java",
    "size": 935,
    "example": " MutableNumeric obj = getValue(columnIndex).getNumeric();\r",
    "cloneID": "9a3b760ece49a453642c651edfc4ff4d",
    "clone": "fa14590183bbc10bdec25c68d67e796a",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SSResultSet.java",
    "size": 935,
    "example": " MutableNumeric obj = getValue(columnIndex).getNumeric();\r",
    "cloneID": "848decc45eaf9b2000db832e4d77ec48",
    "clone": "fa14590183bbc10bdec25c68d67e796a",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestOperatoren.java",
    "size": 281,
    "example": " a(\"binary(100)\"       , new byte[]{12, 45, 1},  new byte[]{12, 45, 2, 56, 89}),\r",
    "cloneID": "d6736f95300987ced5632abdd35cb555",
    "clone": "d7b97a6ff8e3ece5bb18d9bba681bcee",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestJoins.java",
    "size": 218,
    "example": " a(\"binary(100)\"       , new byte[]{12, 45, 1},  new byte[]{12, 45, 2, 56, 89}),\r",
    "cloneID": "c093409c5c96a5dc6718007db0a8b5af",
    "clone": "d7b97a6ff8e3ece5bb18d9bba681bcee",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestAlterTable.java",
    "size": 117,
    "example": " catch (SQLException ex) {\r                assertSQLException( \"01000\", 0, ex );\r            }",
    "cloneID": "db845d4c10825c5d4465696ed5727724",
    "clone": "9db109e662ab8ee84e1a345b42b6d145",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestAlterTable.java",
    "size": 117,
    "example": " catch (SQLException ex) {\r                assertSQLException( \"01000\", 0, ex );\r            }",
    "cloneID": "58075afadebc7cb389c5761e9001672d",
    "clone": "9db109e662ab8ee84e1a345b42b6d145",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestAlterTable2.java",
    "size": 82,
    "example": " catch (SQLException ex) {\r            assertSQLException(\"01000\",0, ex);\r        }",
    "cloneID": "22b27488dbd1b5aa6edf43083e61e9d2",
    "clone": "de6aa7fb59f3190c0b9e157e2a9b1125",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestTransactions.java",
    "size": 509,
    "example": "}catch(SQLException ex){\r                assertSQLException(\"01000\", 0, ex);\r            }",
    "cloneID": "22fd35b57a55489e27a8671ee1f83787",
    "clone": "68a97c8f5c3d929f2b1867cdb43c95d0",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestTransactions.java",
    "size": 509,
    "example": "}catch(SQLException ex){\r\t\t\t    assertSQLException(\"01000\", 0, ex);\r\t\t\t}",
    "cloneID": "b647292da54a415ce7690ce0f5b9fdb8",
    "clone": "c821f77239809079077b04f2db37c592",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestStatement.java",
    "size": 347,
    "example": "}catch(SQLException ex){\r            assertSQLException(\"01000\", 0, ex);\r        }",
    "cloneID": "7ab28f3791b1f376cb0dbab59b325493",
    "clone": "b047fc55b125e33259bd0de284ab5e3d",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestStatement.java",
    "size": 347,
    "example": "}catch(SQLException ex){\r            assertSQLException(\"01000\", 0, ex);\r        }",
    "cloneID": "6a52177f888899f8a7065063e204f813",
    "clone": "b047fc55b125e33259bd0de284ab5e3d",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestStatement.java",
    "size": 347,
    "example": "}catch(SQLException ex){\r            assertSQLException(\"01000\", 0, ex);\r        }",
    "cloneID": "d119c5be20bae4ce409dcb244bd611d5",
    "clone": "b047fc55b125e33259bd0de284ab5e3d",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestScrollable.java",
    "size": 319,
    "example": "}catch(SQLException ex){\r            assertSQLException( \"01000\", 0, ex );\r        }",
    "cloneID": "9bdd8e3147c2e8226064acedd237fdad",
    "clone": "e299257b9032b08a11487ef23f05d88e",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestScrollable.java",
    "size": 319,
    "example": "}catch(SQLException ex){\r            assertSQLException( \"01000\", 0, ex);\r        }",
    "cloneID": "cda1efc2b69510aa15cd6d94d563e3cb",
    "clone": "ea753160d953cc8d9e2efc20b867c06e",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestScrollable.java",
    "size": 319,
    "example": "}catch(SQLException ex){\r            assertSQLException(\"01000\", 0, ex);\r        }",
    "cloneID": "09db7d8f4edc80a66c787999b769fc2a",
    "clone": "b047fc55b125e33259bd0de284ab5e3d",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestScrollable.java",
    "size": 319,
    "example": "}catch(SQLException ex){\r            assertSQLException(\"01000\", 0, ex);\r        }",
    "cloneID": "807de67be3dff71b16e323d9066eed93",
    "clone": "b047fc55b125e33259bd0de284ab5e3d",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunctionAbs.java",
    "size": 111,
    "example": " String getString() throws Exception{\r        Object obj = getObject();\r        if(obj == null) return null;\r        return obj.toString();\r    }",
    "cloneID": "92627574918f7dc33185b67a60216ad2",
    "clone": "1fe0e9b0245ea2465a270f0622a0369b",
    "cloneSize": 5
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunctionFloor.java",
    "size": 53,
    "example": " String getString() throws Exception{\r        Object obj = getObject();\r        if(obj == null) return null;\r        return obj.toString();\r    }",
    "cloneID": "2d70f7380be5ea9657ded19e9180a105",
    "clone": "1fe0e9b0245ea2465a270f0622a0369b",
    "cloneSize": 5
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/BenchTest.java",
    "size": 753,
    "example": " PreparedStatement pr = con.prepareStatement( \"UPDATE \" + tableName + \" SET bi=?,c=?,d=?,de=?,f=?,im=?,i=?,m=?,n=?,r=?,sd=?,si=?,sm=?,sy=?,t=?,ti=?,vb=?,vc=? WHERE i=?\" );\r",
    "cloneID": "00d431955facc518fd406fa1dc3f365a",
    "clone": "47cdbd06eec1a7acb2162a525c463a71",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/BenchTest.java",
    "size": 753,
    "example": " PreparedStatement pr = con.prepareStatement( \"UPDATE \" + tableName + \" SET bi=?,c=?,d=?,de=?,f=?,im=?,i=?,m=?,n=?,r=?,sd=?,si=?,sm=?,sy=?,t=?,ti=?,vb=?,vc=? WHERE i=?\" );\r",
    "cloneID": "0294aa9869e846340790667452d1891c",
    "clone": "47cdbd06eec1a7acb2162a525c463a71",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SSDatabaseMetaData.java",
    "size": 1039,
    "example": "\tString[] colNames = {\"PROCEDURE_CAT\", \"PROCEDURE_SCHEM\", \"PROCEDURE_NAME\", \"\", \"\", \"\", \"REMARKS\", \"PROCEDURE_TYPE\"}; ",
    "cloneID": "a9b248f719eeba031ff260f2173d1f0e",
    "clone": "c135f1522741df3074f947b54be052fd",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestDBMetaData.java",
    "size": 310,
    "example": " String[] colNames = {\"PROCEDURE_CAT\", \"PROCEDURE_SCHEM\", \"PROCEDURE_NAME\", \"\", \"\", \"\", \"REMARKS\", \"PROCEDURE_TYPE\"};\r",
    "cloneID": "de8a1f6d7f950dc18118618028a5bcfa",
    "clone": "3d5549b3648720631e98cdf2cf0c65f1",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/StorePageMap.java",
    "size": 266,
    "example": "\tint i = (int)(key % table.length);\r",
    "cloneID": "1d81284e0b04bc71e16e4540ff8d901e",
    "clone": "0915997096b2add9ec315637a8dfcd10",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/StorePageMap.java",
    "size": 266,
    "example": "\tint i = (int)(key % table.length);\r",
    "cloneID": "81e87d6af839a175ddb9ec0909b27f50",
    "clone": "0915997096b2add9ec315637a8dfcd10",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/StorePageMap.java",
    "size": 266,
    "example": "\tint i = (int)(key % table.length);\r",
    "cloneID": "bf594e0493dddbde06f4d98bef5e1415",
    "clone": "0915997096b2add9ec315637a8dfcd10",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/IndexScrollStatus.java",
    "size": 186,
    "example": "\tIndexNode node = status.nodes[idx];\r",
    "cloneID": "3ca53286b53987c108ceb0916fe535f5",
    "clone": "e640ee89fedd926bd2a9a7efdfd30919",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/IndexScrollStatus.java",
    "size": 186,
    "example": "\tIndexNode node = status.nodes[idx];\r",
    "cloneID": "f46226ef965ec6328093fa4c31988335",
    "clone": "e640ee89fedd926bd2a9a7efdfd30919",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestStatement.java",
    "size": 347,
    "example": " assertEquals(\"ColumnCount\",\"i\",rs.getMetaData().getColumnName(1));\r",
    "cloneID": "36d026476c69602d2a380b314eec47a2",
    "clone": "3462b7d98f603eff84cc49aa752771ee",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestStatement.java",
    "size": 347,
    "example": " assertEquals(\"ColumnCount\",\"i\",rs.getMetaData().getColumnName(1));\r",
    "cloneID": "bad1bf976d2c8c28bacca9e607ef80c1",
    "clone": "3462b7d98f603eff84cc49aa752771ee",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestStatement.java",
    "size": 347,
    "example": " assertEquals(\"ColumnCount\",\"i\",rs.getMetaData().getColumnName(1));\r",
    "cloneID": "f1a756237e6d82805c71ae297eeb04ed",
    "clone": "3462b7d98f603eff84cc49aa752771ee",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestStatement.java",
    "size": 347,
    "example": " assertEquals(\"ColumnCount\",\"i\",rs.getMetaData().getColumnName(1));\r",
    "cloneID": "d113fe47ac0c1007d5493ef37fee5974",
    "clone": "3462b7d98f603eff84cc49aa752771ee",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestStatement.java",
    "size": 347,
    "example": " assertEquals(\"ColumnCount\",\"i\",rs.getMetaData().getColumnName(1));\r",
    "cloneID": "3ce0b53d8b6b63a00c0cd6833fc9eda8",
    "clone": "3462b7d98f603eff84cc49aa752771ee",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestStatement.java",
    "size": 347,
    "example": " assertEquals(\"ColumnCount\",\"i\",rs.getMetaData().getColumnName(1));\r",
    "cloneID": "8fb09646a24989371f9b5e3a03294dba",
    "clone": "3462b7d98f603eff84cc49aa752771ee",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestStatement.java",
    "size": 347,
    "example": " assertEquals(\"ColumnCount\",\"i\",rs.getMetaData().getColumnName(1));\r",
    "cloneID": "5fd057d9793398aa5c037238e4c685fb",
    "clone": "3462b7d98f603eff84cc49aa752771ee",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestStatement.java",
    "size": 347,
    "example": " assertEquals(\"ColumnCount\",\"i\",rs.getMetaData().getColumnName(1));\r",
    "cloneID": "3eeb41d189f1a0cacc35e6324d1f8588",
    "clone": "3462b7d98f603eff84cc49aa752771ee",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestOperatoren.java",
    "size": 281,
    "example": " a(\"image\"             , new byte[]{12, 45, 1},  new byte[]{12, 45, 2, 56, 89}),\r",
    "cloneID": "79d77ab08d43a73f6cd1b2f8a3077508",
    "clone": "12daec8594669ec46c163faa02751139",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestJoins.java",
    "size": 218,
    "example": " a(\"image\"             , new byte[]{12, 45, 1},  new byte[]{12, 45, 2, 56, 89}),\r",
    "cloneID": "09bf1d560a4dac9a5a5dd13c06743a1b",
    "clone": "12daec8594669ec46c163faa02751139",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/BenchTest.java",
    "size": 753,
    "example": " ResultSet rs = st1.executeQuery( \"SELECT count(*) FROM \" + tableName);\r",
    "cloneID": "cb9a35e11362aef66129d8c5c04f88ac",
    "clone": "294e116d5fc1df5083ca8fb4298ecf18",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/BenchTest.java",
    "size": 753,
    "example": " ResultSet rs = st1.executeQuery( \"SELECT count(*) FROM \" + tableName);\r",
    "cloneID": "aa9c05bb58211031eb606b7f49a5b4df",
    "clone": "294e116d5fc1df5083ca8fb4298ecf18",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/Utils.java",
    "size": 477,
    "example": "){\r        StringBuffer buf = new StringBuffer(bytes.length << 1);\r        for(int i=0; i<bytes.length; i++){\r            buf.append( digits[ (bytes[i] >> 4) & 0x0F ] );\r            buf.append( digits[ (bytes[i]     ) & 0x0F ] );\r        }\r        return buf.toString();\r    }",
    "cloneID": "31b9c9908d59e4ac8457d08445b9edf2",
    "clone": "1a5d1b3841e2d06119a50bde3cd7c3f4",
    "cloneSize": 8
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/BasicTestCase.java",
    "size": 373,
    "example": "){\r\t\tStringBuffer buf = new StringBuffer(bytes.length << 1);\r\t\tfor(int i=0; i<bytes.length; i++){\r\t\t\tbuf.append( digits[ (bytes[i] >> 4) & 0x0F ] );\r\t\t\tbuf.append( digits[ (bytes[i]     ) & 0x0F ] );\r\t\t}\r\t\treturn buf.toString();\r\t}",
    "cloneID": "741923c1a99491c24b66aef6487ae686",
    "clone": "6ac2e0dd48d357b9d4e50c7ca3d96d84",
    "cloneSize": 8
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SSCallableStatement.java",
    "size": 405,
    "example": " {\r        try{\r            Expression expr = getValue(i);\r            wasNull = expr.isNull();\r            return expr.getLong();\r        }catch(Exception e){\r            throw SmallSQLException.createFromException( e );\r        }\r    }",
    "cloneID": "f0bff27877fb8afc9a82063131971237",
    "clone": "ee3995118615d7c6ecad9172f9593366",
    "cloneSize": 9
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SSCallableStatement.java",
    "size": 405,
    "example": " {\r        try{\r            Expression expr = getValue(i);\r            wasNull = expr.isNull();\r            return expr.getLong();\r        }catch(Exception e){\r            throw SmallSQLException.createFromException( e );\r        }\r    }",
    "cloneID": "aa665e17b9577610d50494cc3a9997c2",
    "clone": "ee3995118615d7c6ecad9172f9593366",
    "cloneSize": 9
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunctionReturnInt.java",
    "size": 97,
    "example": "\tObject getObject() throws Exception {\r\t\tif(isNull()) return null;\r\t\treturn Utils.getInteger(getInt());\r\t}",
    "cloneID": "2a3a97f4c1b19a7db999be3e57e41987",
    "clone": "6ccaa5587b363cd107892120f193e4aa",
    "cloneSize": 4
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunctionTimestampDiff.java",
    "size": 170,
    "example": "\tObject getObject() throws Exception {\r\t\tif(isNull()) return null;\r\t\treturn Utils.getInteger(getInt());\r\t}",
    "cloneID": "ebbba48aa7162ad6e2b29c315d754266",
    "clone": "6ccaa5587b363cd107892120f193e4aa",
    "cloneSize": 4
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/FileIndexNode.java",
    "size": 99,
    "example": " StoreImpl store = StoreImpl.createStore( null, storePage, SQLTokenizer.INSERT, fileOffset);\r",
    "cloneID": "788d0f52fc7c1950093149a3fdaba819",
    "clone": "1dc30b4685096e312bf25ad253082528",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/FileIndexNode.java",
    "size": 99,
    "example": " StoreImpl store = StoreImpl.createStore( null, storePage, SQLTokenizer.INSERT, fileOffset);\r",
    "cloneID": "51fde141265d768f676df3123859e456",
    "clone": "1dc30b4685096e312bf25ad253082528",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SSDatabaseMetaData.java",
    "size": 1039,
    "example": "\tString[] colNames = {\"TYPE_CAT\", \"TYPE_SCHEM\", \"TYPE_NAME\", \"CLASS_NAME\", \"DATA_TYPE\", \"REMARKS\"}; ",
    "cloneID": "21bc9b6f35c8ea6ebe4b8529e0e89f5a",
    "clone": "b05d9ced898987255ad4b2669de7ad0d",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestDBMetaData.java",
    "size": 310,
    "example": " String[] colNames = {\"TYPE_CAT\", \"TYPE_SCHEM\", \"TYPE_NAME\", \"CLASS_NAME\", \"DATA_TYPE\", \"REMARKS\"};\r",
    "cloneID": "8834c0a4cb0ec9d3ba57d0c1a7857207",
    "clone": "d04dac4caf4a5fbdee1bafa7c29a02cc",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/MutableInteger.java",
    "size": 70,
    "example": "\tpublic String toString(){\r\t\treturn String.valueOf(value);\r\t}",
    "cloneID": "f7d015d3cab67305e0ce6b4761d2693d",
    "clone": "5cbf802609b008770a67e64e67a093bf",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/MutableLong.java",
    "size": 70,
    "example": "\tpublic String toString(){\r\t\treturn String.valueOf(value);\r\t}",
    "cloneID": "c26e047f467798a91cb90613a5038944",
    "clone": "5cbf802609b008770a67e64e67a093bf",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/MutableFloat.java",
    "size": 70,
    "example": "\tpublic String toString(){\r\t\treturn String.valueOf(value);\r\t}",
    "cloneID": "cc48e39216dec30de9d990377f66817e",
    "clone": "5cbf802609b008770a67e64e67a093bf",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/MutableDouble.java",
    "size": 70,
    "example": "\tpublic String toString(){\r\t\treturn String.valueOf(value);\r\t}",
    "cloneID": "05ee689d2ca93869ce05ba688a937ae9",
    "clone": "5cbf802609b008770a67e64e67a093bf",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SSDatabaseMetaData.java",
    "size": 1039,
    "example": "\tObject[][] data   = new Object[0][];\r",
    "cloneID": "be89cc1b9ded22fbc067ff7c26925735",
    "clone": "de0a9dc3f1d2fd83a0dfd9317a6f0439",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SSDatabaseMetaData.java",
    "size": 1039,
    "example": "\tObject[][] data   = new Object[0][];\r",
    "cloneID": "a167e5bbb9856ba189286535f9c552fc",
    "clone": "de0a9dc3f1d2fd83a0dfd9317a6f0439",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SSDatabaseMetaData.java",
    "size": 1039,
    "example": "\tObject[][] data   = new Object[0][];\r",
    "cloneID": "f88e6335b9ce5be38b16c953731c2679",
    "clone": "de0a9dc3f1d2fd83a0dfd9317a6f0439",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SSDatabaseMetaData.java",
    "size": 1039,
    "example": "\tObject[][] data   = new Object[0][];\r",
    "cloneID": "8f0c04a5c13b21d06ca4661d86e6b145",
    "clone": "de0a9dc3f1d2fd83a0dfd9317a6f0439",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestOrderBy.java",
    "size": 821,
    "example": "n{\r\t\tinit();\r\t\tConnection con = AllTests.getConnection();\r\t\tStatement st = con.createStatement();\r\t\tResultSet rs;\r\t\tString oldValue;\r\t\t\r\t\trs = st.executeQuery(\"SELECT * FROM \" + table1 + \" ORDER  by v desc\");\r\t\t\r\t\tassertTrue( rs.next() );\r\t\toldValue = rs.getString(\"v\");\r\t\t\r\t\tint count = 1;\r\t\twhile(oldValue != null && rs.next()){\r\t\t\tString newValue = rs.getString(\"v\");\r\t\t\tif(newValue != null){\r\t\t\t\tassertTrue( oldValue.compareTo( newValue ) > 0 );\r\t\t\t\tcount++;\r\t\t\t}\r\t\t\toldValue = newValue;\r\t\t}\r\t\tassertNull(oldValue);\r\t\tassertFalse( rs.next() );\r\r\t\tassertEquals( valueCount, count );\r\t}",
    "cloneID": "ad1a69e9b398b24608b14b04d3fac6df",
    "clone": "a5f5bdbcffc0f83f0762879d323f4bb9",
    "cloneSize": 26
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestOrderBy.java",
    "size": 821,
    "example": "n{\r\t\tinit();\r\t\tConnection con = AllTests.getConnection();\r\t\tStatement st = con.createStatement();\r\t\tResultSet rs;\r\t\tString oldValue;\r\t\t\r\t\trs = st.executeQuery(\"SELECT * FROM \" + table1 + \" ORDER  by v desc, i asc\");\r\t\t\r\t\tassertTrue( rs.next() );\r\t\toldValue = rs.getString(\"v\");\r\t\t\r\t\tint count = 1;\r\t\twhile(oldValue != null && rs.next()){\r\t\t\tString newValue = rs.getString(\"v\");\r\t\t\tif(newValue != null){\r\t\t\t\tassertTrue( oldValue.compareTo( newValue ) > 0 );\r\t\t\t\tcount++;\r\t\t\t}\r\t\t\toldValue = newValue;\r\t\t}\r\t\tassertNull(oldValue);\r\t\tassertFalse( rs.next() );\r\r\t\tassertEquals( valueCount, count );\r\t}",
    "cloneID": "722079298ee12fb152827948ab9ef0bc",
    "clone": "ee4cfd376f3bed08e39ddb06c8c222c0",
    "cloneSize": 26
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/Database.java",
    "size": 546,
    "example": "\tObject[][] result = new Object[rows.size()][];\r",
    "cloneID": "5b8be5dfa8df682b65627bec831ae52f",
    "clone": "77c73bc2f590218bba90aa9d00f02190",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/Database.java",
    "size": 546,
    "example": "\tObject[][] result = new Object[rows.size()][];\r",
    "cloneID": "531b6157bbcd53cd0134728ed8b97817",
    "clone": "77c73bc2f590218bba90aa9d00f02190",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/Database.java",
    "size": 546,
    "example": "\tObject[][] result = new Object[rows.size()][];\r",
    "cloneID": "ea01f8f91e27d858d1b23651f9fff37c",
    "clone": "77c73bc2f590218bba90aa9d00f02190",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/Database.java",
    "size": 546,
    "example": "\tObject[][] result = new Object[rows.size()][];\r",
    "cloneID": "c84f2984bfefd965e454b13ae1e9264b",
    "clone": "77c73bc2f590218bba90aa9d00f02190",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/Database.java",
    "size": 546,
    "example": "\tObject[][] result = new Object[rows.size()][];\r",
    "cloneID": "d9555fd09fc464dec0eb49cbdf9dc22c",
    "clone": "77c73bc2f590218bba90aa9d00f02190",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunctionUCase.java",
    "size": 62,
    "example": "\tfinal byte[] getBytes() throws Exception{\r        if(isNull()) return null;\r        return getString().getBytes();\r\t}",
    "cloneID": "0f4c119478d19a186a1466a594767caf",
    "clone": "a6a392ed88fbcb40f3b48d0c9d4099ae",
    "cloneSize": 4
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunctionLCase.java",
    "size": 62,
    "example": "\tfinal byte[] getBytes() throws Exception{\r        if(isNull()) return null;\r        return getString().getBytes();\r\t}",
    "cloneID": "5aabb9154eda7435cbbf8269313a9d57",
    "clone": "a6a392ed88fbcb40f3b48d0c9d4099ae",
    "cloneSize": 4
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SSPreparedStatement.java",
    "size": 338,
    "example": "\tif(failed == null){\r\t\t\t\t\tfailed = new BatchUpdateException(ex.getMessage(), ex.getSQLState(), ex.getErrorCode(), result);\r\t\t\t\t\tfailed.initCause(ex);\r\t\t\t\t}",
    "cloneID": "e0bd405c8024ad1835cca43feef105f2",
    "clone": "c274d9fd6bf6e2bf7fa23ac3bc557531",
    "cloneSize": 4
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SSStatement.java",
    "size": 413,
    "example": " if(failed == null){\r                    failed = new BatchUpdateException(ex.getMessage(), ex.getSQLState(), ex.getErrorCode(), result);\r                    failed.initCause(ex);\r                }",
    "cloneID": "b8700b9c6cf9350febba121f990952ae",
    "clone": "6a33a807804826aee738cd947bad5b6f",
    "cloneSize": 4
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestAlterTable2.java",
    "size": 82,
    "example": " rs = con.getMetaData().getIndexInfo( null, null, table, false, false );\r",
    "cloneID": "e85b944e23295ed3003ec9af4d041b0b",
    "clone": "b42e5ddff211d371c84e7c6996fa84e3",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestAlterTable2.java",
    "size": 82,
    "example": " rs = con.getMetaData().getIndexInfo( null, null, table, false, false );\r",
    "cloneID": "295faa1fea2201b206bf5825aa8512f1",
    "clone": "b42e5ddff211d371c84e7c6996fa84e3",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestAlterTable2.java",
    "size": 82,
    "example": " rs = con.getMetaData().getIndexInfo( null, null, table, false, false );\r",
    "cloneID": "ae27884f8a9be6353b87f13f88717f31",
    "clone": "b42e5ddff211d371c84e7c6996fa84e3",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestAlterTable2.java",
    "size": 82,
    "example": " rs = con.getMetaData().getIndexInfo( null, null, table, false, false );\r",
    "cloneID": "440d7bef465c9b34c284f78029790a3e",
    "clone": "b42e5ddff211d371c84e7c6996fa84e3",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestOperatoren.java",
    "size": 281,
    "example": " a(\"varbinary(100)\"    , new byte[]{12, 45, 1},  new byte[]{12, 45, 2, 56, 89}),\r",
    "cloneID": "c0394278fb1b1087952f067e40c8b9b4",
    "clone": "f2539dddb2cb96fe8ddfad88a4c1d8cd",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestJoins.java",
    "size": 218,
    "example": " a(\"varbinary(100)\"    , new byte[]{12, 45, 1},  new byte[]{12, 45, 2, 56, 89}),\r",
    "cloneID": "63559e9ca80ad4e0479c525eee570420",
    "clone": "f2539dddb2cb96fe8ddfad88a4c1d8cd",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SQLParser.java",
    "size": 2007,
    "example": "\tint length = last.offset + last.length - offset;\r",
    "cloneID": "1d030ee4873d500a4f8942c0e4838187",
    "clone": "77e03d8a9bde32fe82c71cdb0681fde0",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SQLParser.java",
    "size": 2007,
    "example": " int length = last.offset + last.length - offset;\r",
    "cloneID": "2aaba38218b4518aecad5b0ee18e7eec",
    "clone": "d059d7e22d054b9e53793387ec3205bb",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/TableResult.java",
    "size": 406,
    "example": "\tstore = ((StorePageLink)insertStorePages.get( (int)(filePos & 0x3FFFFFFFFFFFFFFFL) )).getStore( table, con, lock);\r",
    "cloneID": "94671929d02b96352c4cb406b43324d4",
    "clone": "2913ae4b5fabde4c8e718e0d7b95fd9c",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/TableResult.java",
    "size": 406,
    "example": "\tstore = ((StorePageLink)insertStorePages.get( (int)(filePos & 0x3FFFFFFFFFFFFFFFL) )).getStore( table, con, lock);\r",
    "cloneID": "0992a1eed924c7794915bd95d262e798",
    "clone": "2913ae4b5fabde4c8e718e0d7b95fd9c",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestOperatoren.java",
    "size": 281,
    "example": " a(\"tinyint\"           , new Byte( (byte)3),     new Byte( (byte)4)),\r",
    "cloneID": "ec492519b66c7aa7270cb2d09ce4f058",
    "clone": "b9736aab4706d52b71b359e64be94a1e",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestJoins.java",
    "size": 218,
    "example": " a(\"tinyint\"           , new Byte( (byte)3),     new Byte( (byte)4)),\r",
    "cloneID": "8fa2b49def2431cf024b0c505c7b86c1",
    "clone": "b9736aab4706d52b71b359e64be94a1e",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestOperatoren.java",
    "size": 281,
    "example": " a(\"nchar(100)\"        , new String(\"abc\"),      new String(\"qwert\")),\r",
    "cloneID": "e1fc367ff1d9eff2839688efe0528097",
    "clone": "271d3dcc94ce09de450db7327db782a8",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestJoins.java",
    "size": 218,
    "example": " a(\"nchar(100)\"        , new String(\"abc\"),      new String(\"qwert\")),\r",
    "cloneID": "2de8ad5bb1e5b2cf91d1dcd9e62c28c3",
    "clone": "271d3dcc94ce09de450db7327db782a8",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SQLParser.java",
    "size": 2007,
    "example": "}catch(Exception e){\r\t\t\t\t\t\tthrow createSyntaxError(token, MISSING_NUMBERVALUE );\r\t\t\t\t\t}",
    "cloneID": "e138ec7632fcfcdee061369bfe3921fb",
    "clone": "b3912cad732a10993c3e7b882b7f2db1",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SQLParser.java",
    "size": 2007,
    "example": "}catch(Exception e){\r\t\t\t\t\t\tthrow createSyntaxError(token, MISSING_NUMBERVALUE );\r\t\t\t\t\t}",
    "cloneID": "875d94e593af7a8cd050539469d7e40a",
    "clone": "b3912cad732a10993c3e7b882b7f2db1",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SQLParser.java",
    "size": 2007,
    "example": "}catch(Exception e){\r\t\t\t\t\t\t\tthrow createSyntaxError(token, MISSING_NUMBERVALUE );\r\t\t\t\t\t\t}",
    "cloneID": "e13d5c9285c232407baa1c2045532919",
    "clone": "f8987db49d08c3b89a4df04089b4faed",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/StoreImpl.java",
    "size": 1548,
    "example": " page[ offset++ ] = (byte)(value >> 16);\r",
    "cloneID": "b6dbcf92d460d56d367c3ae544ff4b61",
    "clone": "6ce96577aaaccf053bff18b843b175fd",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/StoreImpl.java",
    "size": 1548,
    "example": " page[ offset++ ] = (byte)(value >> 16);\r",
    "cloneID": "18ad25e4d9a44af566fb7d7fa9154d78",
    "clone": "6ce96577aaaccf053bff18b843b175fd",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/IndexScrollStatus.java",
    "size": 186,
    "example": "\tnodeStack.push( new IndexNodeScrollStatus(node, status.asc, scroll, level) );\r",
    "cloneID": "b38f693378d06edb8dd2191f37837a58",
    "clone": "036c53883c065629aef47fa3940a5404",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/IndexScrollStatus.java",
    "size": 186,
    "example": "\tnodeStack.push( new IndexNodeScrollStatus(node, status.asc, scroll, level) );\r",
    "cloneID": "1bb69c515a1a126b72e553f1c39db940",
    "clone": "036c53883c065629aef47fa3940a5404",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/BenchTest.java",
    "size": 753,
    "example": "y{\r                // reset for the next test\r                Statement st = con.createStatement();\r                st.execute(\"DELETE FROM \" + tableName);\r                st.close();\r            }",
    "cloneID": "c98430f1133b0b31fd129ab62b9b1114",
    "clone": "39628f756626a7eada3147e084559491",
    "cloneSize": 6
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/BenchTest.java",
    "size": 753,
    "example": "y{\r            Statement st = con.createStatement();\r            st.execute(\"DELETE FROM \" + tableName);\r            st.close();\r        }",
    "cloneID": "dcfb55333919a31b1e2fb3eb04e1e207",
    "clone": "637791274ea8c4fbf5dbfb20c3da482a",
    "cloneSize": 5
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SmallSQLException.java",
    "size": 227,
    "example": "\tString message = translateMsg(messageCode, new Object[] { param0 });\r",
    "cloneID": "89d854f05dea194c6f106e2c29716cb0",
    "clone": "68a9fe100f03022fd72d4b14adc5f43d",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SmallSQLException.java",
    "size": 227,
    "example": "\tString message = translateMsg(messageCode, new Object[] { param0 });\r",
    "cloneID": "146d6269f7e7d71b9ac3f4caf990d44e",
    "clone": "68a9fe100f03022fd72d4b14adc5f43d",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestOperatoren.java",
    "size": 281,
    "example": " a(\"byte\"              , new Byte( (byte)3),     new Byte( (byte)4)),\r",
    "cloneID": "4dfe428a47b5fb7c82fc0b2372fd99db",
    "clone": "b71ad58090870a0d63ab2bfa1acf5a5f",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestJoins.java",
    "size": 218,
    "example": " a(\"byte\"              , new Byte( (byte)3),     new Byte( (byte)4)),\r",
    "cloneID": "0c5f4183c811fb301e6c9aa39dc24d66",
    "clone": "b71ad58090870a0d63ab2bfa1acf5a5f",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestOrderBy.java",
    "size": 821,
    "example": "){\r\t\t\toldValue = rs.getBoolean(\"b\");\r\t\t\tassertFalse(rs.wasNull());\r\t\t\tcount++;\r\t\t}",
    "cloneID": "694aa84a186b5ea06f1ff2a894839ed0",
    "clone": "590353095fea8ced13c9316444f5601e",
    "cloneSize": 5
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestOrderBy.java",
    "size": 821,
    "example": "){\r\t\t\toldValue = rs.getBoolean(\"b\");\r\t\t\tassertFalse(rs.wasNull());\r\t\t\tcount++;\r\t\t}",
    "cloneID": "cfb3f0f471eb5e63b0217944392a7770",
    "clone": "590353095fea8ced13c9316444f5601e",
    "cloneSize": 5
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/Where.java",
    "size": 187,
    "example": "\tfinal void beforeFirst() throws Exception {\r\t\trowSource.beforeFirst();\r\t\trow = 0;\r\t}",
    "cloneID": "257fc9118e10228d1a4bc5f0bd68de04",
    "clone": "705dd99d96b4a1322d14464d343aa79e",
    "cloneSize": 4
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/Distinct.java",
    "size": 145,
    "example": "\tfinal void beforeFirst() throws Exception {\r\t\trowSource.beforeFirst();\r\t\trow = 0;\r\t}",
    "cloneID": "8b1fcaef7cf6fc6a934cd76be9ce1379",
    "clone": "705dd99d96b4a1322d14464d343aa79e",
    "cloneSize": 4
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestFunctions.java",
    "size": 418,
    "example": " public void tearDown(){\r        try{\r            Connection con = AllTests.getConnection();\r            Statement st = con.createStatement();\r            st.execute(\"drop table \" + table);\r            st.close();\r        }catch(Throwable e){\r            //e.printStackTrace();\r        }\r    }",
    "cloneID": "53dc5b9183cac81546e273a761e7f6c6",
    "clone": "9f0a613a13360a2aabea3add7c3cad47",
    "cloneSize": 10
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestMoneyRounding.java",
    "size": 112,
    "example": " public void tearDown(){\r        try{\r            Connection con = AllTests.getConnection();\r            Statement st = con.createStatement();\r            st.execute(\"drop table \" + table);\r            st.close();\r        }catch(Throwable e){\r            //e.printStackTrace();\r        }\r    }",
    "cloneID": "a6a3f7807f4d448e6bd80c2cbca9b39f",
    "clone": "9f0a613a13360a2aabea3add7c3cad47",
    "cloneSize": 10
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestOperatoren.java",
    "size": 281,
    "example": " public void tearDown(){\r        try{\r            Connection con = AllTests.getConnection();\r            Statement st = con.createStatement();\r            st.execute(\"drop table \" + table);\r            st.close();\r        }catch(Throwable e){\r            //e.printStackTrace();\r        }\r    }",
    "cloneID": "e4efe73c3555565b9e8f5b0f7f8c24d8",
    "clone": "9f0a613a13360a2aabea3add7c3cad47",
    "cloneSize": 10
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestDataTypes.java",
    "size": 338,
    "example": " public void tearDown(){\r        try{\r            Connection con = AllTests.getConnection();\r            Statement st = con.createStatement();\r            st.execute(\"drop table \" + table);\r            st.close();\r        }catch(Throwable e){\r            //e.printStackTrace();\r        }\r    }",
    "cloneID": "e07397bb0872cc73caa4027358f90d0e",
    "clone": "9f0a613a13360a2aabea3add7c3cad47",
    "cloneSize": 10
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/LongTreeList.java",
    "size": 623,
    "example": "\tlistEnum.offsetStack[listEnum.stack] = offset+pointerSize;\r",
    "cloneID": "9e081af71bdbe600cb0b6982881ba7da",
    "clone": "a6f6d88b228b92e5b3de20f14f9f1974",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/LongTreeList.java",
    "size": 623,
    "example": "\tlistEnum.offsetStack[listEnum.stack] = offset+pointerSize;\r",
    "cloneID": "83adc11754a8e08bf711586dcc25216a",
    "clone": "a6f6d88b228b92e5b3de20f14f9f1974",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/IndexNode.java",
    "size": 451,
    "example": "\tint mid = start + (end - start)/2;\r",
    "cloneID": "139cd16ea68cfaff15b1f2cec24d924d",
    "clone": "1c89d9f6bc5f10517e90d75083dcb222",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/IndexNode.java",
    "size": 451,
    "example": "\tint mid = start + (end - start)/2;\r",
    "cloneID": "4499e78b0cc03c1d6ec6ea3b94362bb9",
    "clone": "1c89d9f6bc5f10517e90d75083dcb222",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/ExpressionValue.java",
    "size": 700,
    "example": "){\r\t\t\t\t\tif(expr.isNull())\r\t\t\t\t\t\tdataType = expr.getDataType();\r\t\t\t\t\telse\r\t\t\t\t\t\tinitValue( expr );\r\t\t\t\t}",
    "cloneID": "b897f441589c444da558e42d1202e1ed",
    "clone": "2728299c1920d1fe4941af2b8af4f7ac",
    "cloneSize": 6
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/ExpressionValue.java",
    "size": 700,
    "example": "){\r\t\t\t\t\tif(expr.isNull())\r\t\t\t\t\t\tdataType = expr.getDataType();\r\t\t\t\t\telse\r\t\t\t\t\t\tinitValue( expr );\r\t\t\t\t}",
    "cloneID": "0c6d71de3bc9d35b6d380a4e365e4fa1",
    "clone": "2728299c1920d1fe4941af2b8af4f7ac",
    "cloneSize": 6
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestAlterTable.java",
    "size": 117,
    "example": " ResultSet rs = st.executeQuery(\"Select * From \" + table);\r",
    "cloneID": "cd9edf3207ecc2da97c9aae6ed5c7a08",
    "clone": "2883dd35132a23909c1dc041a3ff4128",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestAlterTable.java",
    "size": 117,
    "example": " ResultSet rs = st.executeQuery(\"Select * From \" + table);\r",
    "cloneID": "fe8ad651324b3378834e024b4bf6c375",
    "clone": "2883dd35132a23909c1dc041a3ff4128",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestAlterTable.java",
    "size": 117,
    "example": " ResultSet rs = st.executeQuery(\"Select * From \" + table);\r",
    "cloneID": "6655ea572cd12e7fe6f7ed2dad56be9f",
    "clone": "2883dd35132a23909c1dc041a3ff4128",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestAlterTable.java",
    "size": 117,
    "example": " ResultSet rs = st.executeQuery(\"Select * From \" + table);\r",
    "cloneID": "ad652d5461fc87e22b5f4a6875de9a0e",
    "clone": "2883dd35132a23909c1dc041a3ff4128",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestAlterTable2.java",
    "size": 82,
    "example": " ResultSet rs = st.executeQuery(\"Select * From \" + table);\r",
    "cloneID": "a22a2a9bc3304a5f186798527ed24ce6",
    "clone": "2883dd35132a23909c1dc041a3ff4128",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestAlterTable2.java",
    "size": 82,
    "example": " ResultSet rs = st.executeQuery(\"Select * From \" + table);\r",
    "cloneID": "2a32ae8e98fe1ec1468171d448d48352",
    "clone": "2883dd35132a23909c1dc041a3ff4128",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestAlterTable2.java",
    "size": 82,
    "example": " ResultSet rs = st.executeQuery(\"Select * From \" + table);\r",
    "cloneID": "44b865c7749d6069354aef14ab208af7",
    "clone": "2883dd35132a23909c1dc041a3ff4128",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestAlterTable2.java",
    "size": 82,
    "example": " ResultSet rs = st.executeQuery(\"Select * From \" + table);\r",
    "cloneID": "8815fc5dc4f43d9598077c6d1be123df",
    "clone": "2883dd35132a23909c1dc041a3ff4128",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestOrderBy.java",
    "size": 821,
    "example": "\tif(newValue != null){\r\t\t\t\tassertTrue( oldValue.compareTo( newValue ) > 0 );\r\t\t\t\tcount++;\r\t\t\t}",
    "cloneID": "009c37e267293df6fe9eb8398aa2dd85",
    "clone": "3f493c5729354cd83bd1b5e86ef1dfb0",
    "cloneSize": 4
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestOrderBy.java",
    "size": 821,
    "example": "\tif(newValue != null){\r\t\t\t\tassertTrue( oldValue.compareTo( newValue ) > 0 );\r\t\t\t\tcount++;\r\t\t\t}",
    "cloneID": "bb38e2e91d1379d24fb29fd3fb2c761e",
    "clone": "3f493c5729354cd83bd1b5e86ef1dfb0",
    "cloneSize": 4
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestOrderBy.java",
    "size": 821,
    "example": "\tif(newValue != null){\r\t\t\t\tassertTrue( oldValue.compareTo( newValue ) > 0 );\r\t\t\t\tcount++;\r\t\t\t}",
    "cloneID": "cb8934b5773c281b51889516d5fd7490",
    "clone": "3f493c5729354cd83bd1b5e86ef1dfb0",
    "cloneSize": 4
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunctionReturnString.java",
    "size": 93,
    "example": "\tfinal long getMoney() throws Exception {\r\t\tif(isNull()) return 0;\r\t\treturn Money.parseMoney(getString().trim());\r\t}",
    "cloneID": "1031b2565972007f08a651302a21aaaa",
    "clone": "61366fe56f89f0c4a46cf4179eb0ef02",
    "cloneSize": 4
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunctionReturnP1StringAndBinary.java",
    "size": 91,
    "example": "\tfinal long getMoney() throws Exception {\r\t\tif(isNull()) return 0;\r\t\treturn Money.parseMoney(getString().trim());\r\t}",
    "cloneID": "aad70ac298f577b956ac5a735756f8d5",
    "clone": "61366fe56f89f0c4a46cf4179eb0ef02",
    "cloneSize": 4
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/IndexDescriptions.java",
    "size": 141,
    "example": "\tif(size >= data.length ){\r\t\t\tresize(size << 1);\r\t\t}",
    "cloneID": "8db08bf55914b2160716b7461ba30ac7",
    "clone": "4e59785724f8bba763f050f551567cd1",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/Strings.java",
    "size": 84,
    "example": "\tif(size >= data.length ){\r\t\t\tresize(size << 1);\r\t\t}",
    "cloneID": "f146b19ba2b9d3d7f50aa775401e7199",
    "clone": "4e59785724f8bba763f050f551567cd1",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/Columns.java",
    "size": 161,
    "example": " if(size >= data.length){\r            resize(size << 1);\r        }",
    "cloneID": "06e0359b09ea59430a329c463f1141f3",
    "clone": "2a754074d657f6f40c55560b372b7d8d",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/Expressions.java",
    "size": 135,
    "example": "\tif(size >= data.length ){\r\t\t\tresize(size << 1);\r\t\t}",
    "cloneID": "44b9ce1dfc814a56d1309cfa65c15f52",
    "clone": "4e59785724f8bba763f050f551567cd1",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/Expressions.java",
    "size": 135,
    "example": "\tif(size >= data.length ){\r\t\t\tresize(size << 1);\r\t\t}",
    "cloneID": "d7ff676d779b772a6b046c0fbc06505d",
    "clone": "4e59785724f8bba763f050f551567cd1",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/ForeignKeys.java",
    "size": 76,
    "example": "\tif(size >= data.length ){\r\t\t\tresize(size << 1);\r\t\t}",
    "cloneID": "d3d6f57d444867a260f7f8bc154dab16",
    "clone": "4e59785724f8bba763f050f551567cd1",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/LongList.java",
    "size": 86,
    "example": "\tif(size >= data.length ){\r\t\t\tresize(size << 1);\r\t\t}",
    "cloneID": "7f2e632545dc89a67ea3e2d5a2cbded3",
    "clone": "4e59785724f8bba763f050f551567cd1",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/Database.java",
    "size": 546,
    "example": "\tObject[][] result = new Object[rows.size()][];\r",
    "cloneID": "5b8be5dfa8df682b65627bec831ae52f",
    "clone": "77c73bc2f590218bba90aa9d00f02190",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/Database.java",
    "size": 546,
    "example": "\tObject[][] result = new Object[rows.size()][];\r",
    "cloneID": "531b6157bbcd53cd0134728ed8b97817",
    "clone": "77c73bc2f590218bba90aa9d00f02190",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/Database.java",
    "size": 546,
    "example": "\tObject[][] result = new Object[rows.size()][];\r",
    "cloneID": "ea01f8f91e27d858d1b23651f9fff37c",
    "clone": "77c73bc2f590218bba90aa9d00f02190",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/Database.java",
    "size": 546,
    "example": "\tObject[][] result = new Object[rows.size()][];\r",
    "cloneID": "c84f2984bfefd965e454b13ae1e9264b",
    "clone": "77c73bc2f590218bba90aa9d00f02190",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/Database.java",
    "size": 546,
    "example": "\tObject[][] result = new Object[rows.size()][];\r",
    "cloneID": "d9555fd09fc464dec0eb49cbdf9dc22c",
    "clone": "77c73bc2f590218bba90aa9d00f02190",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/BenchTest.java",
    "size": 753,
    "example": " for(int i=0; i<rowCount; i++){\r                fos.write(bytes);\r            }",
    "cloneID": "a1ed242f37ba06353cc27ffe54d7eb42",
    "clone": "2f9ebccfdd44d376b5dd98069b009e1b",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/BenchTest.java",
    "size": 753,
    "example": " for(int i=0; i<rowCount; i++){\r                fos.write(bytes);\r            }",
    "cloneID": "b38d5197f7f9a994409919e22847a132",
    "clone": "2f9ebccfdd44d376b5dd98069b009e1b",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/Scrollable.java",
    "size": 245,
    "example": "){\r\t\t\t\trowSource.setRowPosition( rowList.get(rowIdx) );\r\t\t\t\treturn true;\r\t\t\t}",
    "cloneID": "b05a43f1dae00793612691fa94f8279f",
    "clone": "f3c4147eb1ca97e082270d52df8c0fde",
    "cloneSize": 4
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/Scrollable.java",
    "size": 245,
    "example": "){\r\t\t\trowSource.setRowPosition( rowList.get(rowIdx) );\r\t\t\treturn true;\r\t\t}",
    "cloneID": "70072d79c790f99409d8b1c7daaed3ef",
    "clone": "6a8d98485730ed64f0a56b9e3ccb6c6d",
    "cloneSize": 4
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/Scrollable.java",
    "size": 245,
    "example": "e{\r\t\t\t\trowSource.setRowPosition( rowList.get(rowIdx) );\r\t\t\t\treturn true;\r\t\t\t}",
    "cloneID": "a00a993b554824a08320f1037a3a609d",
    "clone": "11f3a91039be7fdf6ed8ea113b84c6f1",
    "cloneSize": 4
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestOperatoren.java",
    "size": 281,
    "example": " a(\"text\"              , new String(\"abc\"),      new String(\"qwert\")),\r",
    "cloneID": "6b1da1af00193c8f981f4d407f945180",
    "clone": "8b51e8f0431df6447434a2f75cd17fa7",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestJoins.java",
    "size": 218,
    "example": " a(\"text\"              , new String(\"abc\"),      new String(\"qwert\")),\r",
    "cloneID": "ff058277bbc7b18c8628d0611f8a7f8f",
    "clone": "8b51e8f0431df6447434a2f75cd17fa7",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestAlterTable.java",
    "size": 117,
    "example": " public void tearDown(){\r        try {\r            dropTable( AllTests.getConnection(), table );\r        } catch (SQLException ex) {\r            ex.printStackTrace();\r        }\r    }",
    "cloneID": "1c7f63db8db59bb37a01f66811c52485",
    "clone": "51a45824413c869ea38d8049f56cb26d",
    "cloneSize": 7
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestAlterTable2.java",
    "size": 82,
    "example": " public void tearDown(){\r        try {\r            dropTable( AllTests.getConnection(), table );\r        } catch (SQLException ex) {\r            ex.printStackTrace();\r        }\r    }",
    "cloneID": "ed361525854f2b8a0387bcf6885facd1",
    "clone": "51a45824413c869ea38d8049f56cb26d",
    "cloneSize": 7
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/StoreImpl.java",
    "size": 1548,
    "example": " catch (Throwable th) {\r            throw SmallSQLException.createFromException(th);\r        }",
    "cloneID": "6e9c8aca5d0cf88f0962c22acb4865a1",
    "clone": "6d28f6e18d396f840b5b454d3c3ca31a",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/Database.java",
    "size": 546,
    "example": "}catch(Throwable th){\r            throw SmallSQLException.createFromException( th );\r        }",
    "cloneID": "c9b937fd6f7a342bc9fb99c65f6ec5c1",
    "clone": "7c657a6a26f9956210acab0de565ba23",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SSResultSet.java",
    "size": 935,
    "example": "\tif(st.con.log.isLogging()){\r\t\t\t\r\t\t\tst.con.log.println(\"parameter '\"+metaData.getColumnName(columnIndex)+\"' = \"+x+\"; type=\"+dataType);\r\t\t}",
    "cloneID": "c75598eb73fc900f513d6b57e131ac6d",
    "clone": "a73afbde714edb1926a3a7d6cc44f551",
    "cloneSize": 4
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SSResultSet.java",
    "size": 935,
    "example": "\tif(st.con.log.isLogging()){\r\t\t\tst.con.log.println(\"parameter '\"+metaData.getColumnName(columnIndex)+\"' = \"+x+\"; type=\"+dataType+\"; length=\"+length);\r\t\t}",
    "cloneID": "2e7e4a0b172f04625c4367030f90b50e",
    "clone": "46c99be165ddff04f7a237f150dfea50",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/Database.java",
    "size": 546,
    "example": "\tIndexDescriptions indexes = ((Table)tab).indexes;\r",
    "cloneID": "ea36fb83f1803cdf54d78717ec147dd9",
    "clone": "414d3d39522b9c8e6186aa89d91aa429",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/Database.java",
    "size": 546,
    "example": "\tIndexDescriptions indexes = ((Table)tab).indexes;\r",
    "cloneID": "d5a3828241bf4fb7c1ed2f59604535ae",
    "clone": "414d3d39522b9c8e6186aa89d91aa429",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/Database.java",
    "size": 546,
    "example": "\tIndexDescriptions indexes = ((Table)tab).indexes;\r",
    "cloneID": "797e9109eeb9591c90330acbe2ead276",
    "clone": "414d3d39522b9c8e6186aa89d91aa429",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/CommandInsert.java",
    "size": 191,
    "example": "){\r                            keyColumnNames.add(column.getName());\r                            keys.add(valueExpress.getObject());\r                            break;\r                        }",
    "cloneID": "a95730f714754a7b661374641188707a",
    "clone": "cb40e7026c0490c6e0d1be6bc3eb0552",
    "cloneSize": 5
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/CommandInsert.java",
    "size": 191,
    "example": "){\r                            keyColumnNames.add(column.getName());\r                            keys.add(valueExpress.getObject());\r                            break;\r                        }",
    "cloneID": "1a39c442937dfbb2322e3272150409fa",
    "clone": "cb40e7026c0490c6e0d1be6bc3eb0552",
    "cloneSize": 5
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/Money.java",
    "size": 141,
    "example": "){\r        this.value = (long)(value * 10000);\r    }",
    "cloneID": "4337540ff39982da8a1aca34e4b100b4",
    "clone": "10e6c1d146bb35ce174afbb0ca1ca92e",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/Money.java",
    "size": 141,
    "example": "){\r        this.value = (long)(value * 10000);\r    }",
    "cloneID": "57a6ef7a2867b87c69b35751a9203406",
    "clone": "10e6c1d146bb35ce174afbb0ca1ca92e",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/IndexDescription.java",
    "size": 278,
    "example": "}catch(Throwable e){\r            if(raFile != null)\r                try{\r                    raFile.close();\r                }catch(Exception e2){\r                    DriverManager.println(e2.toString());\r                }\r            throw SmallSQLException.createFromException(e);\r        }",
    "cloneID": "fa3f2e79c4dfb56ba0660e4b561578d8",
    "clone": "1c604339b86914438ec418b60ac7b475",
    "cloneSize": 9
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/TableView.java",
    "size": 194,
    "example": "}catch(Throwable e){\r\t\t\tif(raFile != null)\r\t\t\t\ttry{\r\t\t\t\t\traFile.close();\r\t\t\t\t}catch(Exception e2){\r\t\t\t\t\tDriverManager.println(e2.toString());\r\t\t\t\t}\r\t\t\tthrow SmallSQLException.createFromException(e);\r\t\t}",
    "cloneID": "9995af6381df045e0cef25746251012d",
    "clone": "6807be67efb2ac091183a427528cce6f",
    "cloneSize": 9
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/IndexDescription.java",
    "size": 278,
    "example": "\tif(!ok) throw SmallSQLException.create(Language.TABLE_CANT_DROP, name);\r",
    "cloneID": "0d16ce25b070b268a1cc9745c0f880fa",
    "clone": "47135122a06c83a32a2d3b65154491ab",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/Table.java",
    "size": 568,
    "example": " if(!ok) throw SmallSQLException.create(Language.TABLE_CANT_DROP, name);\r",
    "cloneID": "6b7d7c65a8d945bd16ee8abdec10a991",
    "clone": "22d338d568aafb092c9e4f92e66d1218",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/Table.java",
    "size": 568,
    "example": "\tif(!ok) throw SmallSQLException.create(Language.TABLE_CANT_DROP, name);\r",
    "cloneID": "e41df2fb874b819b31891cc8a20f4d8e",
    "clone": "47135122a06c83a32a2d3b65154491ab",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/BenchTest.java",
    "size": 753,
    "example": " System.out.println( \"  Failed: Only \" + (rowCount-count) + \" rows were deleted.\");\r",
    "cloneID": "46990c187eaf7db9929b6c32fd26e486",
    "clone": "a3cd52974b31b0d4c9c90b3d11682cbd",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/BenchTest.java",
    "size": 753,
    "example": " System.out.println( \"  Failed: Only \" + (rowCount-count) + \" rows were deleted.\");\r",
    "cloneID": "18824ffe5265b9f535f69e1bf5aeb736",
    "clone": "a3cd52974b31b0d4c9c90b3d11682cbd",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/BenchTest.java",
    "size": 753,
    "example": " System.out.println( \"  Failed: Only \" + (rowCount-count) + \" rows were found.\");\r",
    "cloneID": "6e0c0a2148f72e05077b1c156287be21",
    "clone": "d5da733c274f96eec823d84047357bd4",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/MemoryStream.java",
    "size": 163,
    "example": "\tpuffer[ offset++ ] = (byte)(value >> 8);\r",
    "cloneID": "ddaf9b78143842d1e91ccd0ab482f2f5",
    "clone": "6dbe83557a9bb0c85171284a154a9c77",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/MemoryStream.java",
    "size": 163,
    "example": "\tpuffer[ offset++ ] = (byte)(value >> 8);\r",
    "cloneID": "da9bfc9599d2b0742b41ed729fac1c3c",
    "clone": "6dbe83557a9bb0c85171284a154a9c77",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/MemoryStream.java",
    "size": 163,
    "example": "\tpuffer[ offset++ ] = (byte)(value >> 8);\r",
    "cloneID": "96f89a2725023c06209b94513e6cad65",
    "clone": "6dbe83557a9bb0c85171284a154a9c77",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestDataTypes.java",
    "size": 338,
    "example": " ResultSet rs = st.executeQuery(\"SELECT * From \" + table);\r",
    "cloneID": "8702a8a10bb991f363a8935cd1135dd0",
    "clone": "7e84ae48e3ba95ea042a80dc60697bce",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestDataTypes.java",
    "size": 338,
    "example": " ResultSet rs = st.executeQuery(\"SELECT * From \" + table);\r",
    "cloneID": "0a94f632b74fc223792c12e331c3c1ac",
    "clone": "7e84ae48e3ba95ea042a80dc60697bce",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/LongTreeList.java",
    "size": 623,
    "example": "\tSystem.arraycopy(data, oldOffset + 2+pointerSize, data, oldOffset, size-oldOffset);\r",
    "cloneID": "5e213058fcc160cf8f1759cfae1d9de3",
    "clone": "157b7d832a23252851e3f1e1887b1045",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/LongTreeList.java",
    "size": 623,
    "example": "\tSystem.arraycopy(data, oldOffset + 2, data, oldOffset, size-oldOffset);\r",
    "cloneID": "30e31d00637890f10795c7c7f9de84bd",
    "clone": "04f11f60cb509f575ad93fd5032bfef3",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SSDatabaseMetaData.java",
    "size": 1039,
    "example": "\tString[] colNames = {\"PROCEDURE_CAT\", \"PROCEDURE_SCHEM\", \"PROCEDURE_NAME\", \"COLUMN_NAME\", \"COLUMN_TYPE\", \"DATA_TYPE\", \"TYPE_NAME\", \"PRECISION\", \"LENGTH\", \"SCALE\", \"RADIX\", \"NULLABLE\", \"REMARKS\" };\r",
    "cloneID": "d3d93ad097ccebb5db03235864e9489c",
    "clone": "ce9065802b3e219c5603a1493a81b8a9",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestDBMetaData.java",
    "size": 310,
    "example": " String[] colNames = {\"PROCEDURE_CAT\", \"PROCEDURE_SCHEM\", \"PROCEDURE_NAME\", \"COLUMN_NAME\", \"COLUMN_TYPE\", \"DATA_TYPE\", \"TYPE_NAME\", \"PRECISION\", \"LENGTH\", \"SCALE\", \"RADIX\", \"NULLABLE\", \"REMARKS\" };\r",
    "cloneID": "9bc8999ba1b88ee2428a540d6363e414",
    "clone": "abb1562bf3e89624639975ca178cc08a",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestAlterTable2.java",
    "size": 82,
    "example": " assertRSMetaData( rs, new String[]{\"a\", \"b\"},  new int[]{Types.VARCHAR, Types.VARCHAR} );\r",
    "cloneID": "698ffc1d761f7900a7e7c2c2030ae7f7",
    "clone": "044dca3254369588025f38978314c2cb",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestAlterTable2.java",
    "size": 82,
    "example": " assertRSMetaData( rs, new String[]{\"a\", \"b\"},  new int[]{Types.VARCHAR, Types.VARCHAR} );\r",
    "cloneID": "960c1e88537636c0bacff07295fdffbd",
    "clone": "044dca3254369588025f38978314c2cb",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SSDatabaseMetaData.java",
    "size": 1039,
    "example": "\treturn new SSResultSet( st, Utils.createMemoryCommandSelect( con, colNames, data));\r",
    "cloneID": "1235f6c382c68d01aa52d0217c806dbe",
    "clone": "10846da70085138d04d96523690dcc56",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SSDatabaseMetaData.java",
    "size": 1039,
    "example": "\treturn new SSResultSet( st, Utils.createMemoryCommandSelect( con, colNames, data));\r",
    "cloneID": "99083327dd1c7fa95c22fc65a95e1ce8",
    "clone": "10846da70085138d04d96523690dcc56",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SSDatabaseMetaData.java",
    "size": 1039,
    "example": "\treturn new SSResultSet( st, Utils.createMemoryCommandSelect( con, colNames, data));\r",
    "cloneID": "bcb8280f3fab16390041295422dd6bcc",
    "clone": "10846da70085138d04d96523690dcc56",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SSDatabaseMetaData.java",
    "size": 1039,
    "example": "\treturn new SSResultSet( st, Utils.createMemoryCommandSelect( con, colNames, data));\r",
    "cloneID": "12e8b3ffda51b3e57176bfb43385b02c",
    "clone": "10846da70085138d04d96523690dcc56",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SSDatabaseMetaData.java",
    "size": 1039,
    "example": "\treturn new SSResultSet( st, Utils.createMemoryCommandSelect( con, colNames, data));\r",
    "cloneID": "0df55cdb25073c0699e86e8a916cfebf",
    "clone": "10846da70085138d04d96523690dcc56",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SSDatabaseMetaData.java",
    "size": 1039,
    "example": "\treturn new SSResultSet( st, Utils.createMemoryCommandSelect( con, colNames, data));\r",
    "cloneID": "8ee9bc98c2ac446fe25ccc1d098a9966",
    "clone": "10846da70085138d04d96523690dcc56",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SSDatabaseMetaData.java",
    "size": 1039,
    "example": "\treturn new SSResultSet( st, Utils.createMemoryCommandSelect( con, colNames, data));\r",
    "cloneID": "fa37586a63fd20ad2fe580223ae76da9",
    "clone": "10846da70085138d04d96523690dcc56",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SSDatabaseMetaData.java",
    "size": 1039,
    "example": "\treturn new SSResultSet( st, Utils.createMemoryCommandSelect( con, colNames, data));\r",
    "cloneID": "5f8198d056a33c1d2ce929df8aab8dab",
    "clone": "10846da70085138d04d96523690dcc56",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SSDatabaseMetaData.java",
    "size": 1039,
    "example": "\treturn new SSResultSet( st, Utils.createMemoryCommandSelect( con, colNames, data));\r",
    "cloneID": "52438965cadcc225c658f234be62bf75",
    "clone": "10846da70085138d04d96523690dcc56",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SSDatabaseMetaData.java",
    "size": 1039,
    "example": "\treturn new SSResultSet( st, Utils.createMemoryCommandSelect( con, colNames, data));\r",
    "cloneID": "e8a1a58a05605cb9974d35a913a12d2e",
    "clone": "10846da70085138d04d96523690dcc56",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SSDatabaseMetaData.java",
    "size": 1039,
    "example": "\t//TODO add more data types to the list\r\t\treturn new SSResultSet( st, Utils.createMemoryCommandSelect( con, colNames, data));",
    "cloneID": "0ee7642187be57f13772719d06b8683a",
    "clone": "8a8f9cb2480b29b1972bb318a6302773",
    "cloneSize": 2
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SSDatabaseMetaData.java",
    "size": 1039,
    "example": "\treturn new SSResultSet( st, Utils.createMemoryCommandSelect( con, colNames, data));\r",
    "cloneID": "963635b40e515248285310634d6d6431",
    "clone": "10846da70085138d04d96523690dcc56",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SSDatabaseMetaData.java",
    "size": 1039,
    "example": "\treturn new SSResultSet( st, Utils.createMemoryCommandSelect( con, colNames, data));\r",
    "cloneID": "9d66a665376f280a32c7f56af50b853b",
    "clone": "10846da70085138d04d96523690dcc56",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SSDatabaseMetaData.java",
    "size": 1039,
    "example": "\tString[] colNames = {\"TABLE_CAT\",\"TABLE_SCHEM\",\"TABLE_NAME\",\"TABLE_TYPE\",\"REMARKS\",\"TYPE_CAT\",\"TYPE_SCHEM\",\"TYPE_NAME\",\"SELF_REFERENCING_COL_NAME\",\"REF_GENERATION\"};\r",
    "cloneID": "b5c2ce98704381bb67f13807009e807f",
    "clone": "1c40c8d6bf5a944293033b0368421dba",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestDBMetaData.java",
    "size": 310,
    "example": " String[] colNames = {\"TABLE_CAT\",\"TABLE_SCHEM\",\"TABLE_NAME\",\"TABLE_TYPE\",\"REMARKS\",\"TYPE_CAT\",\"TYPE_SCHEM\",\"TYPE_NAME\",\"SELF_REFERENCING_COL_NAME\",\"REF_GENERATION\"};\r",
    "cloneID": "a76f63e4120713f1e484b14cdbd8eeb3",
    "clone": "4001b4887936a4e2e0c2af69ab45ca50",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunctionReturnString.java",
    "size": 93,
    "example": "\tfinal float getFloat() throws Exception {\r\t\tif(isNull()) return 0;\r\t\treturn Float.parseFloat(getString().trim());\r\t}",
    "cloneID": "c94a3b84eb7b84ef0bca928b7fccdb9a",
    "clone": "c086a02b0f931fbcb1a97b0b2e3d772d",
    "cloneSize": 4
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunctionReturnP1StringAndBinary.java",
    "size": 91,
    "example": "\tfinal float getFloat() throws Exception {\r\t\tif(isNull()) return 0;\r\t\treturn Float.parseFloat(getString().trim());\r\t}",
    "cloneID": "cc528c6e32ffe65198b798d463703bd2",
    "clone": "c086a02b0f931fbcb1a97b0b2e3d772d",
    "cloneSize": 4
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestOperatoren.java",
    "size": 281,
    "example": " private static TestValue a(String dataType, Object small, Object large){\r        TestValue value = new TestValue();\r        value.dataType  = dataType;\r        value.small     = small;\r        value.large     = large;\r        return value;\r    }",
    "cloneID": "34ecd12cca3e656e3b150a25833818fb",
    "clone": "a8d1458e2e085a277b998b5ad079c1d4",
    "cloneSize": 7
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestJoins.java",
    "size": 218,
    "example": " private static TestValue a(String dataType, Object small, Object large){\r        TestValue value = new TestValue();\r        value.dataType  = dataType;\r        value.small     = small;\r        value.large     = large;\r        return value;\r    }",
    "cloneID": "40cd8dac279d5a5a9be2fe8a95a40bbf",
    "clone": "a8d1458e2e085a277b998b5ad079c1d4",
    "cloneSize": 7
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/BenchTest.java",
    "size": 753,
    "example": " java.io.FileInputStream fis = new java.io.FileInputStream(tableName+\".bin\");\r",
    "cloneID": "ba4b9b9ad75026ef76aad626edc643eb",
    "clone": "bb99f33f9fab0e4b99691fabc439921e",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/BenchTest.java",
    "size": 753,
    "example": " java.io.FileInputStream fis = new java.io.FileInputStream(tableName+\".bin\");\r",
    "cloneID": "f1125a3f879360d14bb4da78a1ff1eda",
    "clone": "bb99f33f9fab0e4b99691fabc439921e",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestOperatoren.java",
    "size": 281,
    "example": " a(\"smallint\"          , new Short( (short)3),   new Short( (short)4)),\r",
    "cloneID": "8a29192b36479a2c159cae8969f49836",
    "clone": "c7b97427d2f79b5461ae200bbea12a6d",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestJoins.java",
    "size": 218,
    "example": " a(\"smallint\"          , new Short( (short)3),   new Short( (short)4)),\r",
    "cloneID": "530a23fab4289a0bc3697177981f67ae",
    "clone": "c7b97427d2f79b5461ae200bbea12a6d",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SQLParser.java",
    "size": 2007,
    "example": "\ttry{\r\t\t\t\t\t\tvalue = Integer.parseInt(token.getName(sql) );\r\t\t\t\t\t}catch(Exception e){\r\t\t\t\t\t\tthrow createSyntaxError(token, MISSING_NUMBERVALUE );\r\t\t\t\t\t}",
    "cloneID": "b438a30939057c9efdf05661b0fc7525",
    "clone": "c0464e0a70e8bebee921153b7e16e598",
    "cloneSize": 5
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SQLParser.java",
    "size": 2007,
    "example": "\ttry{\r\t\t\t\t\t\t\tvalue = Integer.parseInt(token.getName(sql) );\r\t\t\t\t\t\t}catch(Exception e){\r\t\t\t\t\t\t\tthrow createSyntaxError(token, MISSING_NUMBERVALUE );\r\t\t\t\t\t\t}",
    "cloneID": "72b331f475440bfc4d26cc60026cb9a3",
    "clone": "67d5261a284d31934ff8be41b3db291d",
    "cloneSize": 5
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/MutableNumeric.java",
    "size": 594,
    "example": " return Utils.double2long(temp / scaleDoubleFactor[scale] * signum);\r",
    "cloneID": "f22ab1d8c44be6d39c7ce86b67f77424",
    "clone": "16256a14eec1c6e6ba4a54af6c950f6e",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/MutableNumeric.java",
    "size": 594,
    "example": " return Utils.double2long(temp / scaleDoubleFactor[scale] * signum);\r",
    "cloneID": "7a26b3c9838b8e5b1c7f242d4c0047b1",
    "clone": "16256a14eec1c6e6ba4a54af6c950f6e",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/IndexScrollStatus.java",
    "size": 186,
    "example": "\tif(status.nodeValue != null){\r\t\t\t\t\t\tif(status.nodeValue instanceof IndexNode){\r\t\t\t\t\t\t\tlevel++;\r\t\t\t\t\t\t\tnodeStack.push(\r\t\t\t\t\t\t\t\tnew IndexNodeScrollStatus( \t(IndexNode)status.nodeValue, \r\t\t\t\t\t\t\t\t\t\t\t\t\t\t(expressions.get(level).getAlias() != SQLTokenizer.DESC_STR), \r\t\t\t\t\t\t\t\t\t\t\t\t\t\tscroll, level));\r\t\t\t\t\t\t\tcontinue;\r\t\t\t\t\t\t}else\r\t\t\t\t\t\t\treturn getReturnValue(status.nodeValue);\r\t\t\t\t\t}",
    "cloneID": "e2c9bcde34227463596212ee0e54a812",
    "clone": "32780974ef12148aa891825efdfbe7ba",
    "cloneSize": 11
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/IndexScrollStatus.java",
    "size": 186,
    "example": "\tif(status.nodeValue != null){\r\t\t\t\t\t\tif(status.nodeValue instanceof IndexNode){\r\t\t\t\t\t\t\tlevel++;\r\t\t\t\t\t\t\tnodeStack.push(\r\t\t\t\t\t\t\t\tnew IndexNodeScrollStatus( \t(IndexNode)status.nodeValue, \r\t\t\t\t\t\t\t\t\t\t\t\t\t\t(expressions.get(level).getAlias() != SQLTokenizer.DESC_STR), \r\t\t\t\t\t\t\t\t\t\t\t\t\t\tscroll, level));\r\t\t\t\t\t\t\tcontinue;\r\t\t\t\t\t\t}else\r\t\t\t\t\t\t\treturn getReturnValue(status.nodeValue);\r\t\t\t\t\t}\r\t\t\t\t\t//There is no RowOffset in this node",
    "cloneID": "d40b82a68e2c5600900b575d58f93906",
    "clone": "dff85241c0b791c3b37b6c0639e9fa0d",
    "cloneSize": 12
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/BenchTest.java",
    "size": 753,
    "example": " if (count != rowCount)\r                System.out.println( \"  Failed: Only \" + count + \" rows were inserted.\");\r            else System.out.println( \"  Test time: \" + time + \" ms\");",
    "cloneID": "dc7eb7009bfbc31f75aa107cb893037a",
    "clone": "76f7c8e583bb8b0547273ae428dd2cac",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/BenchTest.java",
    "size": 753,
    "example": " if (count != rowCount)\r                 System.out.println( \"  Failed: Only \" + count + \" rows were inserted.\");\r            else System.out.println( \"  Test time: \" + time + \" ms\");",
    "cloneID": "463603082b0c97fcaced1cbcbeeff3a4",
    "clone": "f366bc6ac8ed58e04280b0eb0463da71",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/BenchTest.java",
    "size": 753,
    "example": " if (count != rowCount)\r                 System.out.println( \"  Failed: Only \" + count + \" rows were updated.\");\r            else System.out.println( \"  Test time: \" + time + \" ms\");",
    "cloneID": "a92210cf534984606cb23b0d89529fb7",
    "clone": "37dab4a3ddfba5a1ac58933eb7cee59b",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SSDatabaseMetaData.java",
    "size": 1039,
    "example": "\tString[] colNames = {\"TABLE_CAT\", \"TABLE_SCHEM\", \"TABLE_NAME\", \"COLUMN_NAME\", \"DATA_TYPE\", \"TYPE_NAME\", \"COLUMN_SIZE\", \"BUFFER_LENGTH\", \"DECIMAL_DIGITS\", \"NUM_PREC_RADIX\", \"NULLABLE\", \"REMARKS\", \"COLUMN_DEF\", \"SQL_DATA_TYPE\", \"SQL_DATETIME_SUB\", \"CHAR_OCTET_LENGTH\", \"ORDINAL_POSITION\", \"IS_NULLABLE\"};\r",
    "cloneID": "3258cc05ac42c8bb602a1399241b4182",
    "clone": "08f4a18e5d3930c42ea2be8c143df3c3",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestDBMetaData.java",
    "size": 310,
    "example": " String[] colNames = {\"TABLE_CAT\", \"TABLE_SCHEM\", \"TABLE_NAME\", \"COLUMN_NAME\", \"DATA_TYPE\", \"TYPE_NAME\", \"COLUMN_SIZE\", \"BUFFER_LENGTH\", \"DECIMAL_DIGITS\", \"NUM_PREC_RADIX\", \"NULLABLE\", \"REMARKS\", \"COLUMN_DEF\", \"SQL_DATA_TYPE\", \"SQL_DATETIME_SUB\", \"CHAR_OCTET_LENGTH\", \"ORDINAL_POSITION\", \"IS_NULLABLE\"};\r",
    "cloneID": "a35f6ca70c756cd1bca8e44b42a35791",
    "clone": "debfde1b1be24d96f0cefc5fd88be9ce",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunctionSubstring.java",
    "size": 88,
    "example": "\tif(length < 0) \r\t\t\tthrow SmallSQLException.create(Language.SUBSTR_INVALID_LEN, new Integer(length));",
    "cloneID": "503a76654cb93aa38a3663766916d39e",
    "clone": "df11b6ba79120dece9da30774cd7c2f2",
    "cloneSize": 2
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunctionSubstring.java",
    "size": 88,
    "example": "\tif(length < 0) \r\t\t\tthrow SmallSQLException.create(Language.SUBSTR_INVALID_LEN, new Integer(length));",
    "cloneID": "235f13102c4f94f8916565bccbb34d5b",
    "clone": "df11b6ba79120dece9da30774cd7c2f2",
    "cloneSize": 2
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestMoneyRounding.java",
    "size": 112,
    "example": "n{\r            Connection con = AllTests.getConnection();\r            Statement st = con.createStatement();\r            int firstValue = -10000;\r            for(int i=firstValue; i<10000; i++){\r                st.execute(\"Insert into \" + table + \"(a,b) values(\" + (i/10000.0) + \",\" +(i/10000.0) +\")\");\r            }\r            st.close();\r            verify(firstValue);\r    }",
    "cloneID": "0fdae0609e554d139959812f0a6ab84d",
    "clone": "eff508e5f1edc44a0139bda5d6fcc14c",
    "cloneSize": 10
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestMoneyRounding.java",
    "size": 112,
    "example": "n{\r\t\t\tConnection con = AllTests.getConnection();\r\t\t\tStatement st = con.createStatement();\r\t\t\tint firstValue = -10000;\r\t\t\tfor(int i=firstValue; i<10000; i++){\r\t\t\t\tst.execute(\"Insert into \" + table + \"(a,b) values( (\" + i + \"/10000.0), (\" + i + \"/10000.0) )\");\r\t\t\t}\r\t\t\tst.close();\r\t\t\tverify(firstValue);\r\t}",
    "cloneID": "b6395d10d5f1050e42d83a94048ac179",
    "clone": "59de2ff5b74e1389bc36ca1a3c6508d4",
    "cloneSize": 10
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SmallSQLException.java",
    "size": 227,
    "example": "\tString message = translateMsg(messageCode, new Object[] { param0 });\r",
    "cloneID": "89d854f05dea194c6f106e2c29716cb0",
    "clone": "68a9fe100f03022fd72d4b14adc5f43d",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SmallSQLException.java",
    "size": 227,
    "example": "\tString message = translateMsg(messageCode, new Object[] { param0 });\r",
    "cloneID": "146d6269f7e7d71b9ac3f4caf990d44e",
    "clone": "68a9fe100f03022fd72d4b14adc5f43d",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/BenchTest.java",
    "size": 753,
    "example": " if (updateCount != 1){\r                    System.out.println( \"  Failed: Update count should be 1 but it is \" + updateCount + \".\");\r                    return;\r                }",
    "cloneID": "e40e5a66ddeb377672bb8c8d5ef89086",
    "clone": "60719ecd4144d39398b31810703b431e",
    "cloneSize": 4
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/BenchTest.java",
    "size": 753,
    "example": " if (updateCount != 1){\r                    System.out.println( \"  Failed: Update count should be 1 but it is \" + updateCount + \".\");\r                    return;\r                }",
    "cloneID": "d29c8b4c420170ea2dfdaf5c2de6a97f",
    "clone": "60719ecd4144d39398b31810703b431e",
    "cloneSize": 4
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/DateTime.java",
    "size": 802,
    "example": "\tbuf.append( details.hour < 12 ? \"AM\" : \"PM\" );\r",
    "cloneID": "1510dcc3356c227fa86fe63bf00aa5eb",
    "clone": "7231c9a8e728f88ab6a2a36f1b4fdd25",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/DateTime.java",
    "size": 802,
    "example": "\tbuf.append( details.hour < 12 ? \"AM\" : \"PM\" );\r",
    "cloneID": "e8e93c8448ea0bfefd1d4053a717d798",
    "clone": "7231c9a8e728f88ab6a2a36f1b4fdd25",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/DateTime.java",
    "size": 802,
    "example": "\tbuf.append( details.hour < 12 ? \"AM\" : \"PM\" );\r",
    "cloneID": "a825c0c132522f89eb6934214a9e5261",
    "clone": "7231c9a8e728f88ab6a2a36f1b4fdd25",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/ExpressionArithmetic.java",
    "size": 1015,
    "example": "(getDataType(right.getDataType(), SQLTokenizer.INT) == SQLTokenizer.INT){\r",
    "cloneID": "bcd6fc8814c91166b6c51a05997c8022",
    "clone": "207a3062ee9255177bbbdf00c7051ea5",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/ExpressionArithmetic.java",
    "size": 1015,
    "example": "(getDataType(right.getDataType(), SQLTokenizer.INT) == SQLTokenizer.INT)\r",
    "cloneID": "3c47b423c8fa05c7c7a973ece9838fb1",
    "clone": "3e0d40caba21e4b7e4a3cf309e13fc9b",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/Index.java",
    "size": 547,
    "example": "\tif(equals(node.getRemainderValue(), key, i)){\r\t\t\t\treturn node;\r\t\t\t}",
    "cloneID": "05288a45995ce9057f0c5158ac440059",
    "clone": "1f9c83802e76bcd1afcb9d163bfb8949",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/Index.java",
    "size": 547,
    "example": "\tif(equals(node.getRemainderValue(), key, i)){\r\t\t\t\treturn node;\r\t\t\t}",
    "cloneID": "bf1a646b6e5fd5dec23d927f510a5fd2",
    "clone": "1f9c83802e76bcd1afcb9d163bfb8949",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/MutableNumeric.java",
    "size": 594,
    "example": " // simple Long Value\r                long temp = (((long)value[0]) << 32) | (value[1] & 0xFFFFFFFFL);",
    "cloneID": "5bbb78ced87da766cccc7f1ba1826449",
    "clone": "4be8c6a9a1e1fff7895900b4a1e58b72",
    "cloneSize": 2
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/MutableNumeric.java",
    "size": 594,
    "example": " // simple Long Value\r                long temp = (((long)value[0]) << 32) | (value[1] & 0xFFFFFFFFL);",
    "cloneID": "6e51f51d1a503c62a3fafe20adc55890",
    "clone": "4be8c6a9a1e1fff7895900b4a1e58b72",
    "cloneSize": 2
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/MutableNumeric.java",
    "size": 594,
    "example": " // simple Long Value\r                long temp = (((long)value[0]) << 32) | (value[1] & 0xFFFFFFFFL);",
    "cloneID": "d924192576c6e8268dd244c5b7fbbff8",
    "clone": "4be8c6a9a1e1fff7895900b4a1e58b72",
    "cloneSize": 2
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/MutableNumeric.java",
    "size": 594,
    "example": " // simple Long Value\r                long temp = (((long)value[0]) << 32) | (value[1] & 0xFFFFFFFFL);",
    "cloneID": "25001c210c317e1037d7c5346b0946bf",
    "clone": "4be8c6a9a1e1fff7895900b4a1e58b72",
    "cloneSize": 2
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/Expressions.java",
    "size": 135,
    "example": "){\r\t\tif (idx >= size)\r\t\t\tthrow new IndexOutOfBoundsException(\"Index: \"+idx+\", Size: \"+size);\r\t\treturn data[idx];\r\t}",
    "cloneID": "115555bb8cb14696ccb00ae573c1ebfb",
    "clone": "b6662a4efa5e0c40b501c81dd821ae55",
    "cloneSize": 5
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/DataSources.java",
    "size": 62,
    "example": "){\r\t\tif (idx >= size)\r\t\t\tthrow new IndexOutOfBoundsException(\"Index: \"+idx+\", Size: \"+size);\r\t\treturn data[idx];\r\t}",
    "cloneID": "a03eae0615657ecafe047a4427fbd90d",
    "clone": "b6662a4efa5e0c40b501c81dd821ae55",
    "cloneSize": 5
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/LongList.java",
    "size": 86,
    "example": "){\r\t\tif (idx >= size)\r\t\t\tthrow new IndexOutOfBoundsException(\"Index: \"+idx+\", Size: \"+size);\r\t\treturn data[idx];\r\t}",
    "cloneID": "255c5ad5451b27c13436b8f818ea67a3",
    "clone": "b6662a4efa5e0c40b501c81dd821ae55",
    "cloneSize": 5
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunctionDayOfYear.java",
    "size": 54,
    "example": "\tDateTime.Details details = new DateTime.Details(param1.getLong());\r",
    "cloneID": "43b9095ee786a5220029c40e9283e760",
    "clone": "af55146dc6a57a6411ec653e4d870194",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunctionHour.java",
    "size": 54,
    "example": "\tDateTime.Details details = new DateTime.Details(param1.getLong());\r",
    "cloneID": "8f7ffc6c675ade9f6ac0ab6d0fcbf21c",
    "clone": "af55146dc6a57a6411ec653e4d870194",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunctionYear.java",
    "size": 54,
    "example": "\tDateTime.Details details = new DateTime.Details(param1.getLong());\r",
    "cloneID": "b56c7938b7b8434f92a72f250bd4cf93",
    "clone": "af55146dc6a57a6411ec653e4d870194",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunctionMonth.java",
    "size": 54,
    "example": "\tDateTime.Details details = new DateTime.Details(param1.getLong());\r",
    "cloneID": "d184d8dec07ec9d5168804fe2a2a5993",
    "clone": "af55146dc6a57a6411ec653e4d870194",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunctionMinute.java",
    "size": 54,
    "example": "\tDateTime.Details details = new DateTime.Details(param1.getLong());\r",
    "cloneID": "82065b5d81331a9e21aa679a916ba8a6",
    "clone": "af55146dc6a57a6411ec653e4d870194",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunctionDayOfMonth.java",
    "size": 54,
    "example": "\tDateTime.Details details = new DateTime.Details(param1.getLong());\r",
    "cloneID": "e12ff8d7ac77e5c7546f412f5ac206de",
    "clone": "af55146dc6a57a6411ec653e4d870194",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestOperatoren.java",
    "size": 281,
    "example": " PreparedStatement pr = con.prepareStatement(\"INSERT into \" + table + \"(a,b) Values(?,?)\");\r",
    "cloneID": "447a88d3ac1342b13e0d38076ae6fa90",
    "clone": "38f30af45999809dc3a24da3a3f9a2f6",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestJoins.java",
    "size": 218,
    "example": " PreparedStatement pr = con.prepareStatement(\"INSERT into \" + table + \"(a,b) Values(?,?)\");\r",
    "cloneID": "eb2afbaa659eb75b84ce495226bb69ba",
    "clone": "38f30af45999809dc3a24da3a3f9a2f6",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/Utils.java",
    "size": 477,
    "example": "){\r        try{\r            return Double.parseDouble( val ) != 0;\r        }catch(NumberFormatException e){/*ignore it if it not a number*/}\r        return \"true\".equalsIgnoreCase( val ) || \"yes\".equalsIgnoreCase( val ) || \"t\".equalsIgnoreCase( val );\r    }",
    "cloneID": "d96d5d971cf8452d89027be0b4a82a64",
    "clone": "f32d45d86729c42e05b039d18b415638",
    "cloneSize": 6
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/BasicTestCase.java",
    "size": 373,
    "example": "){\r        try{\r            return Double.parseDouble( val ) != 0;\r        }catch(NumberFormatException e){/*ignore it if it not a number*/}\r        return \"true\".equalsIgnoreCase( val ) || \"yes\".equalsIgnoreCase( val ) || \"t\".equalsIgnoreCase( val );\r    }",
    "cloneID": "54a7d62ae118c4df31a9f51abe9c30e4",
    "clone": "f32d45d86729c42e05b039d18b415638",
    "cloneSize": 6
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SQLParser.java",
    "size": 2007,
    "example": "\tif(token.value == SQLTokenizer.OUTER)\r                \t\ttoken = nextToken(MISSING_JOIN);",
    "cloneID": "74193351b0b921af9fc06941d5c45535",
    "clone": "9d108a96665a77b864e948814eee72a7",
    "cloneSize": 2
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SQLParser.java",
    "size": 2007,
    "example": "\tif(token.value == SQLTokenizer.OUTER)\r                \t\ttoken = nextToken(MISSING_JOIN);",
    "cloneID": "d5270cb34aefb31fd21d7222706034d3",
    "clone": "9d108a96665a77b864e948814eee72a7",
    "cloneSize": 2
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SQLParser.java",
    "size": 2007,
    "example": "\tif(token.value == SQLTokenizer.OUTER)\r\t\t\t\t\t\ttoken = nextToken(MISSING_JOIN);",
    "cloneID": "645eb77c3153551cfc84f92fd383d8a9",
    "clone": "8bd5ed21bfbd3f7b5e5b377a8d5f4d5f",
    "cloneSize": 2
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/BenchTest.java",
    "size": 753,
    "example": " java.io.FileOutputStream fos = new java.io.FileOutputStream(tableName+\".bin\");\r",
    "cloneID": "eb3532d1330d37fa0b09983dd15c5db0",
    "clone": "61be9255058b165e0f8cd6c3bea0569a",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/BenchTest.java",
    "size": 753,
    "example": " java.io.FileOutputStream fos = new java.io.FileOutputStream(tableName+\".bin\");\r",
    "cloneID": "6c240801a11ac24fb6c2aa8270ecd911",
    "clone": "61be9255058b165e0f8cd6c3bea0569a",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestTransactions.java",
    "size": 509,
    "example": "y{\r\t\t    dropTable(con1, \"transactions\");\r\t\t\tcon1.setAutoCommit(true);\r\t\t\tcon2.close();\r\t\t}",
    "cloneID": "74d24c4d3586b2166617cb0542734663",
    "clone": "0d24b7f050fb33c92b8606f211e78a27",
    "cloneSize": 5
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestTransactions.java",
    "size": 509,
    "example": "y{\r            dropTable(con1, \"transactions\");\r\t\t\tcon1.setAutoCommit(true);\r\t\t\tcon2.close();\r\t\t}",
    "cloneID": "2730e3621a12e9d8fc636837c7b629aa",
    "clone": "3b2f34028d375d5484fee5f3825a2bc2",
    "cloneSize": 5
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/CommandSelect.java",
    "size": 570,
    "example": "\tthrow SmallSQLException.create(Language.COL_READONLY, new Integer(i));\r",
    "cloneID": "70633f6fbbacc8d62afee00d9a7f9f96",
    "clone": "041ef20967d3de2c013d3e8ac98bb293",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/CommandSelect.java",
    "size": 570,
    "example": "\tthrow SmallSQLException.create(Language.COL_READONLY, new Integer(i));\r",
    "cloneID": "6b4bd13d4f4f0f5e7fb1b7c20411fd18",
    "clone": "041ef20967d3de2c013d3e8ac98bb293",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestOperatoren.java",
    "size": 281,
    "example": " a(\"varchar2(100)\"     , new String(\"abc\"),      new String(\"qwert\")),\r",
    "cloneID": "329b08720032863912eab6af66fdb1ba",
    "clone": "e45426e2ea583dda06b5cd6ad68cf2f5",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestJoins.java",
    "size": 218,
    "example": " a(\"varchar2(100)\"     , new String(\"abc\"),      new String(\"qwert\")),\r",
    "cloneID": "9398eadf2bb526d7a4953883dcff6214",
    "clone": "e45426e2ea583dda06b5cd6ad68cf2f5",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/Language/Language.java",
    "size": 629,
    "example": " new HashMap((int)(MESSAGES.length / 0.7)); //avoid re",
    "cloneID": "c1abcd91ca3ecb957bb5ff31fa481e13",
    "clone": "23c6ada6609060d759706493e8570a60",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/Language/Language.java",
    "size": 629,
    "example": " new HashMap((int)(MESSAGES.length / 0.7)); //avoid reh",
    "cloneID": "2c905f7b6254f53c099ed3e719abb1a0",
    "clone": "84190b90c3182038e28595b5d50d19c7",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunctionConvert.java",
    "size": 264,
    "example": "){\r\t\t\t\t\tbyte[] buffer = new byte[length];\r\t\t\t\t\tSystem.arraycopy(bytes, 0, buffer, 0, Math.min(bytes.length,length) );\r\t\t\t\t\treturn buffer;\r\t\t\t\t}",
    "cloneID": "d4d39cd9ac7e4643fa799f4ac94fa78a",
    "clone": "e765a0a86c923d50244845d320beada2",
    "cloneSize": 5
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunctionConvert.java",
    "size": 264,
    "example": "){\r\t\t\t\t\tbyte[] buffer = new byte[length];\r\t\t\t\t\tSystem.arraycopy(bytes, 0, buffer, 0, Math.min(bytes.length,length) );\r\t\t\t\t\treturn buffer;\r\t\t\t\t}",
    "cloneID": "97eb0a0dc8ae9f52346e2f3d4a2fae8d",
    "clone": "e765a0a86c923d50244845d320beada2",
    "cloneSize": 5
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/BenchTest.java",
    "size": 753,
    "example": " pr.setDate  (  3 , new Date( System.currentTimeMillis() ) );\r",
    "cloneID": "eafba24122ea23595ea42a5f349b569e",
    "clone": "3d061cf06a9f6447b43b93b0a412889f",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/BenchTest.java",
    "size": 753,
    "example": " pr.setDate  (  3 , new Date( System.currentTimeMillis() ) );\r",
    "cloneID": "aa4e3d1de16020f35ffde387e6aee800",
    "clone": "3d061cf06a9f6447b43b93b0a412889f",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/BenchTest.java",
    "size": 753,
    "example": " pr.setDate  (  3 , new Date( System.currentTimeMillis() ) );\r",
    "cloneID": "8bdaf0b1ff4e1e9c84e2369657808fb3",
    "clone": "3d061cf06a9f6447b43b93b0a412889f",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunctionSubstring.java",
    "size": 88,
    "example": "\tfinal boolean isNull() throws Exception {\r\t\treturn param1.isNull() || param2.isNull() || param3.isNull();\r\t}",
    "cloneID": "57b34bdc37ed7cc720d5d8386f19b707",
    "clone": "a1146cfdefb28f79731059bad6350ac6",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunctionLeft.java",
    "size": 73,
    "example": "\tfinal boolean isNull() throws Exception {\r\t\treturn param1.isNull() || param2.isNull();\r\t}",
    "cloneID": "3d7fb1855e05b1dac868ef2674a07c5a",
    "clone": "d0f9c7c735e2b1cd7889bf8cd5f27cc6",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunctionInsert.java",
    "size": 90,
    "example": "\tfinal boolean isNull() throws Exception {\r\t\treturn param1.isNull() || param2.isNull() || param3.isNull() || param4.isNull();\r\t}",
    "cloneID": "f4910560cf634a6078da164f7c603f22",
    "clone": "9fd5c783b103a994830fda1f19b9a274",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunctionRight.java",
    "size": 73,
    "example": "\tfinal boolean isNull() throws Exception {\r\t\treturn param1.isNull() || param2.isNull();\r\t}",
    "cloneID": "f156424a9c8a56592bb4dd84165ea620",
    "clone": "d0f9c7c735e2b1cd7889bf8cd5f27cc6",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunctionReplace.java",
    "size": 110,
    "example": "\tfinal boolean isNull() throws Exception {\r\t\treturn param1.isNull() || param2.isNull() || param3.isNull();\r\t}",
    "cloneID": "2d39de276c7e960bb23eedb9fe1015b4",
    "clone": "a1146cfdefb28f79731059bad6350ac6",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SSDatabaseMetaData.java",
    "size": 1039,
    "example": "\tString[] colNames = {\"SCOPE\", \"COLUMN_NAME\", \"DATA_TYPE\", \"TYPE_NAME\", \"COLUMN_SIZE\", \"BUFFER_LENGTH\", \"DECIMAL_DIGITS\", \"PSEUDO_COLUMN\"};\r",
    "cloneID": "d05babfdc1b21333d302f9ef5105ab2f",
    "clone": "fbeef0851a23e074d4a5291bfb1a10cb",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SSDatabaseMetaData.java",
    "size": 1039,
    "example": "\tString[] colNames = {\"SCOPE\", \"COLUMN_NAME\", \"DATA_TYPE\", \"TYPE_NAME\", \"COLUMN_SIZE\", \"BUFFER_LENGTH\", \"DECIMAL_DIGITS\", \"PSEUDO_COLUMN\"};\r",
    "cloneID": "273d2c83d4fad9d9a24e5cc9d14e4b66",
    "clone": "fbeef0851a23e074d4a5291bfb1a10cb",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestDBMetaData.java",
    "size": 310,
    "example": " String[] colNames = {\"SCOPE\", \"COLUMN_NAME\", \"DATA_TYPE\", \"TYPE_NAME\", \"COLUMN_SIZE\", \"BUFFER_LENGTH\", \"DECIMAL_DIGITS\", \"PSEUDO_COLUMN\"};\r",
    "cloneID": "ec20d07117268e816b4b9571eb31be3f",
    "clone": "2e6c6948bb68acf55c7dc3609fecd189",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SQLParser.java",
    "size": 2007,
    "example": "\tCommandDelete cmd = new CommandDelete(con.log);\r",
    "cloneID": "dee5c18243f7ab8ecdbe2826634a0be6",
    "clone": "81498872bf322b2780f0dcf5cc51a64d",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SQLParser.java",
    "size": 2007,
    "example": "\tCommandDelete cmd = new CommandDelete(con.log);\r",
    "cloneID": "16389b02a2f4b1ad4be6ddf6f068e7ab",
    "clone": "81498872bf322b2780f0dcf5cc51a64d",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SSCallableStatement.java",
    "size": 405,
    "example": " MutableNumeric obj = getValue(i).getNumeric();\r",
    "cloneID": "be4e79d53afdb91a615b029cec6d8bb7",
    "clone": "ce636087ef69dac8693962a7d6d29cb7",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SSCallableStatement.java",
    "size": 405,
    "example": " MutableNumeric obj = getValue(i).getNumeric();\r",
    "cloneID": "dd6dd74ccb7883af49a9f7014246d5b1",
    "clone": "ce636087ef69dac8693962a7d6d29cb7",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestOperatoren.java",
    "size": 281,
    "example": " a(\"character(100)\"    , new String(\"abc\"),      new String(\"qwert\")),\r",
    "cloneID": "a235e19acc255e0f9dce483e3c0796a9",
    "clone": "41406d68a797ace7a1973b3e967df675",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestJoins.java",
    "size": 218,
    "example": " a(\"character(100)\"    , new String(\"abc\"),      new String(\"qwert\")),\r",
    "cloneID": "21572670e49eb652c03088bda671c659",
    "clone": "41406d68a797ace7a1973b3e967df675",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/Command.java",
    "size": 181,
    "example": "\tif(log.isLogging()){\r\t\t\tlog.println(\"param\"+idx+'='+value+\"; type=\"+dataType);\r\t\t}",
    "cloneID": "0435504211cbc45d1b9ce5cdb9ce6760",
    "clone": "3f104423f44f0f3d7c8d8f45a5bd119f",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/Command.java",
    "size": 181,
    "example": "\tif(log.isLogging()){\r\t\t\tlog.println(\"param\"+idx+'='+value+\"; type=\"+dataType+\"; length=\"+length);\r\t\t}",
    "cloneID": "cdb364d67ebfe2fea6d1098325ea6a23",
    "clone": "8ca339cc969abffafaa6e532d4489336",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestOperatoren.java",
    "size": 281,
    "example": " a(\"char(100)\"         , new String(\"abc\"),      new String(\"qwert\")),\r",
    "cloneID": "738c64526803e4e44ea5a131479b3a2c",
    "clone": "272f28b9785f22cce551c827296c294e",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestJoins.java",
    "size": 218,
    "example": " a(\"char(100)\"         , new String(\"abc\"),      new String(\"qwert\")),\r",
    "cloneID": "4e7c1cb101d691162e6604299f2f75f5",
    "clone": "272f28b9785f22cce551c827296c294e",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunctionATan2.java",
    "size": 48,
    "example": " boolean isNull() throws Exception{\r        return param1.isNull() || param2.isNull();\r    }",
    "cloneID": "5417cca8b816fe8489fbdf4383965952",
    "clone": "004e42de8bd3022e6bb2f63867139186",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunctionTruncate.java",
    "size": 71,
    "example": " boolean isNull() throws Exception{\r        return param1.isNull() || param2.isNull();\r    }",
    "cloneID": "863e305ed4884d7bdc44ec18375dac61",
    "clone": "004e42de8bd3022e6bb2f63867139186",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunctionRound.java",
    "size": 71,
    "example": " boolean isNull() throws Exception{\r        return param1.isNull() || param2.isNull();\r    }",
    "cloneID": "95e2533fc6aedb18fac4c6a159077948",
    "clone": "004e42de8bd3022e6bb2f63867139186",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunctionDifference.java",
    "size": 65,
    "example": " boolean isNull() throws Exception {\r        return param1.isNull() || param2.isNull();\r    }",
    "cloneID": "3d83e3292c5212a30660b5757ca596b8",
    "clone": "2fd04ee8a0c67b2930175fe8d04e1a76",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunctionPower.java",
    "size": 48,
    "example": " boolean isNull() throws Exception{\r        return param1.isNull() || param2.isNull();\r    }",
    "cloneID": "d405b83c8251d312e470daf06e39829d",
    "clone": "004e42de8bd3022e6bb2f63867139186",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunctionMod.java",
    "size": 50,
    "example": " boolean isNull() throws Exception{\r        return param1.isNull() || param2.isNull();\r    }",
    "cloneID": "94ac94c0c6dd96d9e7330106a49b5a32",
    "clone": "004e42de8bd3022e6bb2f63867139186",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunctionLocate.java",
    "size": 65,
    "example": "\tboolean isNull() throws Exception {\r\t\treturn param1.isNull() || param2.isNull();\r\t}",
    "cloneID": "6a895007f18419588e536197fa49f2a5",
    "clone": "1f17ce0d162027c8249b2c75b55ea7f3",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunctionTimestampDiff.java",
    "size": 170,
    "example": "\tboolean isNull() throws Exception {\r\t\treturn param1.isNull() || param2.isNull();\r\t}",
    "cloneID": "c03c6104abdb5c992165feacb9e52347",
    "clone": "1f17ce0d162027c8249b2c75b55ea7f3",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunctionTimestampAdd.java",
    "size": 144,
    "example": "\tboolean isNull() throws Exception {\r\t\treturn param1.isNull() || param2.isNull();\r\t}",
    "cloneID": "6ca206cd4e06c0ab65458897e91b0d00",
    "clone": "1f17ce0d162027c8249b2c75b55ea7f3",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestOrderBy.java",
    "size": 821,
    "example": "n{\r\t\tinit();\r\t\tConnection con = AllTests.getConnection();\r\t\tStatement st = con.createStatement();\r\t\tResultSet rs;\r\t\tInteger oldValue;\r\t\t\r\t\trs = st.executeQuery(\"SELECT * FROM \" + table1 + \" ORDER  by i\");\r\t\t\r\t\tassertTrue( rs.next() );\r\t\t\r\t\toldValue = (Integer)rs.getObject(\"i\");\r\t\tassertNull(oldValue);\r\t\tassertTrue( rs.next() );\r\t\toldValue = (Integer)rs.getObject(\"i\");\r\t\t\r\t\tint count = 1;\r\t\twhile(rs.next()){\r\t\t\tassertTrue( oldValue.compareTo( (Integer)rs.getObject(\"i\") ) < 0 );\r\t\t\toldValue = (Integer)rs.getObject(\"i\");\r\t\t\tcount++;\r\t\t}\r\t\tassertEquals( valueCount, count );\r\t}",
    "cloneID": "3ebe9a7ca05783f7885320f6580ddaa8",
    "clone": "da35a9340a99512b552bbfb548b0b482",
    "cloneSize": 24
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestOrderBy.java",
    "size": 821,
    "example": "n{\r\t\tinit();\r\t\tConnection con = AllTests.getConnection();\r\t\tStatement st = con.createStatement();\r\t\tResultSet rs;\r\t\tInteger oldValue;\r\t\t\r\t\trs = st.executeQuery(\"SELECT * FROM \" + table1 + \" ORDER  by i Asc\");\r\t\t\r\t\tassertTrue( rs.next() );\r\t\t\r\t\toldValue = (Integer)rs.getObject(\"i\");\r\t\tassertNull(oldValue);\r\t\tassertTrue( rs.next() );\r\t\toldValue = (Integer)rs.getObject(\"i\");\r\t\t\r\t\tint count = 1;\r\t\twhile(rs.next()){\r\t\t\tassertTrue( oldValue.compareTo( (Integer)rs.getObject(\"i\") ) < 0 );\r\t\t\toldValue = (Integer)rs.getObject(\"i\");\r\t\t\tcount++;\r\t\t}\r\t\tassertEquals( valueCount, count );\r\t}",
    "cloneID": "398a614e5ddddb9af956a964df93fb22",
    "clone": "96c422c6bd4f428fd84758156498c978",
    "cloneSize": 24
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestTransactions.java",
    "size": 509,
    "example": "y{\r\t\t\ttry{\r\t\t\t\tcon.createStatement().execute(\"Drop Table transactions\");\r\t\t\t}catch(Throwable e){e.printStackTrace();}\r\t\t}",
    "cloneID": "8e0dda1c31884395612459268db99444",
    "clone": "5eccb54bb38b891b53825f1104a4d6bd",
    "cloneSize": 5
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestTransactions.java",
    "size": 509,
    "example": "y{\r\t\t\ttry{\r\t\t\t\tcon.createStatement().execute(\"Drop Table transactions\");\r\t\t\t}catch(Throwable e){e.printStackTrace();}\r\t\t}",
    "cloneID": "b711dbb48d5d1d50d66a319f819c05c9",
    "clone": "5eccb54bb38b891b53825f1104a4d6bd",
    "cloneSize": 5
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/GroupResult.java",
    "size": 254,
    "example": "e{\r\t\t\tint idx = internalExpressions.indexOf(expr);\r\t\t\tif(idx >= 0) return idx;\r\t\t\tinternalExpressions.add(expr);\r\t\t\treturn internalExpressions.size()-1;\r\t\t}",
    "cloneID": "a6fcde1c5eda3af2a6508a6224241134",
    "clone": "956d9977e294981d249cfa4ab8cc1233",
    "cloneSize": 6
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/GroupResult.java",
    "size": 254,
    "example": "){\r\t\t\tint idx = internalExpressions.indexOf(expr);\r\t\t\tif(idx >= 0) return idx;\r\t\t\tinternalExpressions.add(expr);\r\t\t\treturn internalExpressions.size()-1;\r\t\t}",
    "cloneID": "61c286a6da48f35c2e20f2b8127267c4",
    "clone": "99456c2b9c734c2c27e42bb2e79d218b",
    "cloneSize": 6
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/Table.java",
    "size": 568,
    "example": "\tTableStorePage lock = (TableStorePage)locks.get( pageKey );\r",
    "cloneID": "1aca403ff09c326b74aae3eca8ccfab0",
    "clone": "7ad2c50cbdfa106a8a03a3487cc176b0",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/Table.java",
    "size": 568,
    "example": "\tTableStorePage lock = (TableStorePage)locks.get( pageKey );\r",
    "cloneID": "ba14557d86a5f5d8f84e39563df44da2",
    "clone": "7ad2c50cbdfa106a8a03a3487cc176b0",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/StoreImpl.java",
    "size": 1548,
    "example": " System.arraycopy( page, valueOffset, bytes, 0, bytes.length);\r",
    "cloneID": "5464bf652a6dbbf3b3e1cf52956a2038",
    "clone": "d9051208ca48124f04d09eed59ef01bd",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/StoreImpl.java",
    "size": 1548,
    "example": " System.arraycopy( page, valueOffset, bytes, 0, bytes.length);\r",
    "cloneID": "e82dd0f48ae9a112e4b50bea451df4b3",
    "clone": "d9051208ca48124f04d09eed59ef01bd",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/StoreImpl.java",
    "size": 1548,
    "example": " System.arraycopy( page, valueOffset, bytes, 0, bytes.length);\r",
    "cloneID": "4da59ef6e05d2f5d93db55655e0b5184",
    "clone": "d9051208ca48124f04d09eed59ef01bd",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/StoreImpl.java",
    "size": 1548,
    "example": " System.arraycopy( page, valueOffset, bytes, 0, bytes.length);\r",
    "cloneID": "3e9a087b8d6bd3453678eb5a5f3fda39",
    "clone": "d9051208ca48124f04d09eed59ef01bd",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/StoreImpl.java",
    "size": 1548,
    "example": " System.arraycopy( page, valueOffset, bytes, 0, bytes.length);\r",
    "cloneID": "2cdc1911fbdf02d1572e9a7db8d0ed76",
    "clone": "d9051208ca48124f04d09eed59ef01bd",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/StoreImpl.java",
    "size": 1548,
    "example": "\toffset += column.initAutoIncrement(storePage.raFile, filePos+offset);\r",
    "cloneID": "123ec976de4ee559e209a511e0b4708c",
    "clone": "884ad98164802b291b900e3146661098",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/StoreImpl.java",
    "size": 1548,
    "example": "\toffset += column.initAutoIncrement(storePage.raFile, filePos+offset);\r",
    "cloneID": "e7827ce4264bab3a108eea17eadf077b",
    "clone": "884ad98164802b291b900e3146661098",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/BenchTest.java",
    "size": 753,
    "example": " if (count != rowCount){\r                // There are not the correct count of rows.\r                if (count == 0){\r                    createTestDataWithClassicInsert( con );\r                    rs = st1.executeQuery( \"SELECT count(*) FROM \" + tableName);\r                    rs.next();\r                    count = rs.getInt(1);\r                }\r                if (count != rowCount){\r                    System.out.println( \"  Failed: Only \" + (rowCount-count) + \" rows were deleted.\");\r                    return;\r                }\r            }",
    "cloneID": "78694d2aff6522dcf2d643ff3398ca6f",
    "clone": "63a7f5e2f87a6f7bd08352b54f1f262a",
    "cloneSize": 13
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/BenchTest.java",
    "size": 753,
    "example": " if (count != rowCount){\r                // There are not the correct count of rows.\r                if (count == 0){\r                    createTestDataWithClassicInsert( con );\r                    rs = st1.executeQuery( \"SELECT count(*) FROM \" + tableName);\r                    rs.next();\r                    count = rs.getInt(1);\r                }\r                if (count != rowCount){\r                    System.out.println( \"  Failed: Only \" + (rowCount-count) + \" rows were found.\");\r                    return;\r                }\r            }",
    "cloneID": "cfb19882c4e129ff11c00dd8cd6b4185",
    "clone": "238a31b406f3fcb9048b296fcff49723",
    "cloneSize": 13
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/MemoryStream.java",
    "size": 163,
    "example": "\tpuffer[ offset++ ] = (byte)(value >> 16);\r",
    "cloneID": "24736ad6dcbebe625a625860540375ef",
    "clone": "8a7a4ec7daa13449cfdfca84b4aa15cf",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/MemoryStream.java",
    "size": 163,
    "example": "\tpuffer[ offset++ ] = (byte)(value >> 16);\r",
    "cloneID": "f6730dcb3401463fb18d20f5534d669e",
    "clone": "8a7a4ec7daa13449cfdfca84b4aa15cf",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SQLParser.java",
    "size": 2007,
    "example": "\tCommandDelete cmd = new CommandDelete(con.log);\r",
    "cloneID": "dee5c18243f7ab8ecdbe2826634a0be6",
    "clone": "81498872bf322b2780f0dcf5cc51a64d",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SQLParser.java",
    "size": 2007,
    "example": "\tCommandDelete cmd = new CommandDelete(con.log);\r",
    "cloneID": "16389b02a2f4b1ad4be6ddf6f068e7ab",
    "clone": "81498872bf322b2780f0dcf5cc51a64d",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestOperatoren.java",
    "size": 281,
    "example": " assertEqualsObject( \"Values not equals\", rs.getObject(1), rs.getObject(2), false);\r",
    "cloneID": "28a80a1811cccd62dc8051f3d8f44be1",
    "clone": "a9865bac8d10293d3593507663005578",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestOperatoren.java",
    "size": 281,
    "example": " assertEqualsObject( \"Values not equals\", rs.getObject(1), rs.getObject(2), false);\r",
    "cloneID": "5a871b2952f99a6ce65d0ffe6364d591",
    "clone": "a9865bac8d10293d3593507663005578",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestOperatoren.java",
    "size": 281,
    "example": " assertEqualsObject( \"Values not equals\", rs.getObject(1), rs.getObject(2), false);\r",
    "cloneID": "e648a6ac1c48746df2ed82a60a84076e",
    "clone": "a9865bac8d10293d3593507663005578",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestOperatoren.java",
    "size": 281,
    "example": " assertEqualsObject( \"Values not equals\", rs.getObject(1), rs.getObject(2), false);\r",
    "cloneID": "961fb780d44fb64436b3389153d1363d",
    "clone": "a9865bac8d10293d3593507663005578",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/StoreImpl.java",
    "size": 1548,
    "example": " ByteArrayInputStream bais = new ByteArrayInputStream(readLongBinary());\r",
    "cloneID": "2cd1e2d8a7da225f4e34a86387dd328d",
    "clone": "7f3b36d7ba08020f23ecbf822b743be1",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/StoreImpl.java",
    "size": 1548,
    "example": " ByteArrayInputStream bais = new ByteArrayInputStream(readLongBinary());\r",
    "cloneID": "95032c597d29b96b167dc4359ab3b79d",
    "clone": "7f3b36d7ba08020f23ecbf822b743be1",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/StoreImpl.java",
    "size": 1548,
    "example": " ByteArrayInputStream bais = new ByteArrayInputStream(readLongBinary());\r",
    "cloneID": "3e89cac252c7aa79fdefbbb08a510f5f",
    "clone": "7f3b36d7ba08020f23ecbf822b743be1",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/StoreImpl.java",
    "size": 1548,
    "example": " ByteArrayInputStream bais = new ByteArrayInputStream(readLongBinary());\r",
    "cloneID": "683716088dd116e9a89b7d77aa36466b",
    "clone": "7f3b36d7ba08020f23ecbf822b743be1",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/StoreImpl.java",
    "size": 1548,
    "example": " ByteArrayInputStream bais = new ByteArrayInputStream(readLongBinary());\r",
    "cloneID": "0d65f75e9548f86157417e032f40a3c1",
    "clone": "7f3b36d7ba08020f23ecbf822b743be1",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/StoreImpl.java",
    "size": 1548,
    "example": " ByteArrayInputStream bais = new ByteArrayInputStream(readLongBinary());\r",
    "cloneID": "bc43fd2c91dbac24c76cfd39fe940e37",
    "clone": "7f3b36d7ba08020f23ecbf822b743be1",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/StoreImpl.java",
    "size": 1548,
    "example": " ByteArrayInputStream bais = new ByteArrayInputStream(readLongBinary());\r",
    "cloneID": "28468a3892f9788b7883b7c253393239",
    "clone": "7f3b36d7ba08020f23ecbf822b743be1",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/StoreImpl.java",
    "size": 1548,
    "example": " ByteArrayInputStream bais = new ByteArrayInputStream(readLongBinary());\r",
    "cloneID": "19f6341ca26124f56a4813be20aa548c",
    "clone": "7f3b36d7ba08020f23ecbf822b743be1",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/StoreImpl.java",
    "size": 1548,
    "example": " ByteArrayInputStream bais = new ByteArrayInputStream(readLongBinary());\r",
    "cloneID": "fced874168a2dafe62c2e15c47ce9856",
    "clone": "7f3b36d7ba08020f23ecbf822b743be1",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/BenchTest.java",
    "size": 753,
    "example": " PreparedStatement pr = con.prepareStatement( \"UPDATE \" + tableName + \" SET bi=?,c=?,d=?,de=?,f=?,im=?,i=?,m=?,n=?,r=?,sd=?,si=?,sm=?,sy=?,t=?,ti=?,vb=?,vc=? WHERE i=?\" );\r",
    "cloneID": "00d431955facc518fd406fa1dc3f365a",
    "clone": "47cdbd06eec1a7acb2162a525c463a71",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/BenchTest.java",
    "size": 753,
    "example": " PreparedStatement pr = con.prepareStatement( \"UPDATE \" + tableName + \" SET bi=?,c=?,d=?,de=?,f=?,im=?,i=?,m=?,n=?,r=?,sd=?,si=?,sm=?,sy=?,t=?,ti=?,vb=?,vc=? WHERE i=?\" );\r",
    "cloneID": "0294aa9869e846340790667452d1891c",
    "clone": "47cdbd06eec1a7acb2162a525c463a71",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SQLParser.java",
    "size": 2007,
    "example": "\tint length = last.offset + last.length - offset;\r",
    "cloneID": "1d030ee4873d500a4f8942c0e4838187",
    "clone": "77e03d8a9bde32fe82c71cdb0681fde0",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SQLParser.java",
    "size": 2007,
    "example": " int length = last.offset + last.length - offset;\r",
    "cloneID": "2aaba38218b4518aecad5b0ee18e7eec",
    "clone": "d059d7e22d054b9e53793387ec3205bb",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/FileIndexNode.java",
    "size": 99,
    "example": " StorePage storePage = new StorePage( null, -1, file, offset);\r",
    "cloneID": "4ef80e9c0a7708da333b97fee6fd0f19",
    "clone": "ca06be02a6c6d7ac47c97086eefc5b36",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/FileIndexNode.java",
    "size": 99,
    "example": " StorePage storePage = new StorePage( null, -1, file, offset);\r",
    "cloneID": "92557f5bf6ae907e8f258349bfc126ed",
    "clone": "ca06be02a6c6d7ac47c97086eefc5b36",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SSDatabaseMetaData.java",
    "size": 1039,
    "example": "\tString[] colNames = {\"PKTABLE_CAT\", \"PKTABLE_SCHEM\", \"PKTABLE_NAME\", \"PKCOLUMN_NAME\", \"FKTABLE_CAT\", \"FKTABLE_SCHEM\", \"FKTABLE_NAME\", \"FKCOLUMN_NAME\", \"KEY_SEQ\", \"UPDATE_RULE\", \"DELETE_RULE\", \"FK_NAME\", \"PK_NAME\", \"DEFERRABILITY\"};\r",
    "cloneID": "4571ae5da887c0f8d3ce951f64e4c5e7",
    "clone": "f86a151e3207150648384b2a92b9bdcf",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestDBMetaData.java",
    "size": 310,
    "example": " String[] colNames = {\"PKTABLE_CAT\", \"PKTABLE_SCHEM\", \"PKTABLE_NAME\", \"PKCOLUMN_NAME\", \"FKTABLE_CAT\", \"FKTABLE_SCHEM\", \"FKTABLE_NAME\", \"FKCOLUMN_NAME\", \"KEY_SEQ\", \"UPDATE_RULE\", \"DELETE_RULE\", \"FK_NAME\", \"PK_NAME\", \"DEFERRABILITY\"};\r",
    "cloneID": "12d2db82e4460708ba9c1369cbb7819a",
    "clone": "6dd56e440a39ddc37959fad92f633fd8",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestOperatoren.java",
    "size": 281,
    "example": " a(\"decimal(19,2)\"     , new BigDecimal(\"3.45\"), new BigDecimal(\"4.56\")),\r",
    "cloneID": "c977747ca698c770b2bb522785fe1e2c",
    "clone": "b7c0733c1baebb5c07c70aa1efa08548",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestJoins.java",
    "size": 218,
    "example": " a(\"decimal(19,2)\"     , new BigDecimal(\"3.45\"), new BigDecimal(\"4.56\")),\r",
    "cloneID": "d91202ed7e323424f827ce99d5b53089",
    "clone": "b7c0733c1baebb5c07c70aa1efa08548",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestTransactions.java",
    "size": 509,
    "example": "y{\r\t\t\ttry{\r\t\t\t\tcon.createStatement().execute(\"Drop Table transactions\");\r\t\t\t}catch(Throwable e){e.printStackTrace();}\r\t\t\tcon.setAutoCommit(true);\r\t\t}",
    "cloneID": "4c0a9f7857715eff6604ed4aa516c07d",
    "clone": "dc5ee9aa2bca06cab058cb3c988ab91a",
    "cloneSize": 6
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestTransactions.java",
    "size": 509,
    "example": "y{\r\t\t\ttry{\r\t\t\t\tcon.createStatement().execute(\"Drop Table transactions\");\r\t\t\t}catch(Throwable e){e.printStackTrace();}\r\t\t\tcon.setAutoCommit(true);\r\t\t}",
    "cloneID": "4d0ef7c6a946f1847a36fdf2f471d3f2",
    "clone": "dc5ee9aa2bca06cab058cb3c988ab91a",
    "cloneSize": 6
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestTransactions.java",
    "size": 509,
    "example": "y{\r\t\t\ttry{\r\t\t\t\tcon.createStatement().execute(\"Drop Table transactions\");\r\t\t\t}catch(Throwable e){e.printStackTrace();}\r\t\t\tcon.setAutoCommit(true);\r\t\t}",
    "cloneID": "fd8137f2074e3240aa9a1501426f41f5",
    "clone": "dc5ee9aa2bca06cab058cb3c988ab91a",
    "cloneSize": 6
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestTransactions.java",
    "size": 509,
    "example": "y{\r\t\t\ttry{\r\t\t\t\tcon.createStatement().execute(\"Drop Table transactions\");\r\t\t\t}catch(Throwable e){e.printStackTrace();}\r\t\t\tcon.setAutoCommit(true);\r\t\t}",
    "cloneID": "44d1b437fe4e84ac50f0161e63b40836",
    "clone": "dc5ee9aa2bca06cab058cb3c988ab91a",
    "cloneSize": 6
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestTransactions.java",
    "size": 509,
    "example": "y{\r\t\t\ttry{\r\t\t\t\tcon.createStatement().execute(\"Drop Table transactions\");\r\t\t\t}catch(Throwable e){e.printStackTrace();}\r\t\t\tcon.setAutoCommit(true);\r\t\t}",
    "cloneID": "7a8706a81104217421747fe6196b4b68",
    "clone": "dc5ee9aa2bca06cab058cb3c988ab91a",
    "cloneSize": 6
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestTransactions.java",
    "size": 509,
    "example": "y{\r\t\t\ttry{\r\t\t\t\tcon.createStatement().execute(\"Drop Table transactions\");\r\t\t\t}catch(Throwable e){e.printStackTrace();}\r\t\t\tcon.setAutoCommit(true);\r\t\t}",
    "cloneID": "54ec3f8d943db255adb8489ba6a9cb6c",
    "clone": "dc5ee9aa2bca06cab058cb3c988ab91a",
    "cloneSize": 6
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestOperatoren.java",
    "size": 281,
    "example": " a(\"date\"              , new Date(99, 1,1),      new Date(99, 2,2)),\r",
    "cloneID": "c91b55ab552385babadb045b2e153c27",
    "clone": "dc452b85a7d669cae5704675921da377",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestJoins.java",
    "size": 218,
    "example": " a(\"date\"              , new Date(99, 1,1),      new Date(99, 2,2)),\r",
    "cloneID": "781181fd73d94555367c24a6c9632ae4",
    "clone": "dc452b85a7d669cae5704675921da377",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/LongTreeList.java",
    "size": 623,
    "example": "\tif(listEnum.stack>=3){\r\t\t\t\t\tlistEnum.offsetStack[listEnum.stack] = offset;\r\t\t\t\t\treturn result;\r\t\t\t\t}",
    "cloneID": "9a6b2dde6cf485f40a18d74277f1a91e",
    "clone": "3503f77c2307efdeb1e76ee04b7b52b4",
    "cloneSize": 4
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/LongTreeList.java",
    "size": 623,
    "example": "\tif(listEnum.stack>=3){\r\t\t\t\t\tlistEnum.offsetStack[listEnum.stack] = offset;\r\t\t\t\t\treturn result;\r\t\t\t\t}",
    "cloneID": "1d653ad8a7e60dda916dd9b8d515b8a0",
    "clone": "3503f77c2307efdeb1e76ee04b7b52b4",
    "cloneSize": 4
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestOperatoren.java",
    "size": 281,
    "example": " private static class TestValue{\r        String dataType;\r        Object small;\r        Object large;\r    }",
    "cloneID": "bbc3c6443c408120effbb8551387453f",
    "clone": "a9db94f669e8b4c07deb147a189f8b5e",
    "cloneSize": 5
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestJoins.java",
    "size": 218,
    "example": " private static class TestValue{\r        String dataType;\r        Object small;\r        Object large;\r    }",
    "cloneID": "35ddb5f2480918e9e87ecf4f1ad05c6b",
    "clone": "a9db94f669e8b4c07deb147a189f8b5e",
    "cloneSize": 5
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestAlterTable.java",
    "size": 117,
    "example": " ResultSet rs = st.executeQuery(\"Select * From \" + table);\r",
    "cloneID": "cd9edf3207ecc2da97c9aae6ed5c7a08",
    "clone": "2883dd35132a23909c1dc041a3ff4128",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestAlterTable.java",
    "size": 117,
    "example": " ResultSet rs = st.executeQuery(\"Select * From \" + table);\r",
    "cloneID": "fe8ad651324b3378834e024b4bf6c375",
    "clone": "2883dd35132a23909c1dc041a3ff4128",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestAlterTable.java",
    "size": 117,
    "example": " ResultSet rs = st.executeQuery(\"Select * From \" + table);\r",
    "cloneID": "6655ea572cd12e7fe6f7ed2dad56be9f",
    "clone": "2883dd35132a23909c1dc041a3ff4128",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestAlterTable.java",
    "size": 117,
    "example": " ResultSet rs = st.executeQuery(\"Select * From \" + table);\r",
    "cloneID": "ad652d5461fc87e22b5f4a6875de9a0e",
    "clone": "2883dd35132a23909c1dc041a3ff4128",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestAlterTable2.java",
    "size": 82,
    "example": " ResultSet rs = st.executeQuery(\"Select * From \" + table);\r",
    "cloneID": "a22a2a9bc3304a5f186798527ed24ce6",
    "clone": "2883dd35132a23909c1dc041a3ff4128",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestAlterTable2.java",
    "size": 82,
    "example": " ResultSet rs = st.executeQuery(\"Select * From \" + table);\r",
    "cloneID": "2a32ae8e98fe1ec1468171d448d48352",
    "clone": "2883dd35132a23909c1dc041a3ff4128",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestAlterTable2.java",
    "size": 82,
    "example": " ResultSet rs = st.executeQuery(\"Select * From \" + table);\r",
    "cloneID": "44b865c7749d6069354aef14ab208af7",
    "clone": "2883dd35132a23909c1dc041a3ff4128",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestAlterTable2.java",
    "size": 82,
    "example": " ResultSet rs = st.executeQuery(\"Select * From \" + table);\r",
    "cloneID": "8815fc5dc4f43d9598077c6d1be123df",
    "clone": "2883dd35132a23909c1dc041a3ff4128",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/Table.java",
    "size": 568,
    "example": "\tTableStorePageInsert lock = (TableStorePageInsert)locksInsert.get(i);\r",
    "cloneID": "ba7aff8d7ffae424eddad190c2b9b0e9",
    "clone": "be34260465676340dca5f3fac1867fd9",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/Table.java",
    "size": 568,
    "example": "\tTableStorePageInsert lock = (TableStorePageInsert)locksInsert.get(i);\r",
    "cloneID": "1e15bd71917b712cb8efc8dfa56aca62",
    "clone": "be34260465676340dca5f3fac1867fd9",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/Table.java",
    "size": 568,
    "example": "\t//the first StorePage in the linked list must be ever TableStorePageInsert\r\t\t\t\t\t\t\tTableStorePageInsert lock = (TableStorePageInsert)locksInsert.get(i);",
    "cloneID": "8abf8d78525c45229b161df63e8bb181",
    "clone": "a118264da12a7a49f174391dd0bfa852",
    "cloneSize": 2
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/Index.java",
    "size": 547,
    "example": "\tchar digit = (char)(key >> (i<<4));\r",
    "cloneID": "7e06211401f38aeaa6a8aa67e10a7062",
    "clone": "721e57596bc32dd0cece186ce1595e84",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/Index.java",
    "size": 547,
    "example": "\tchar digit = (char)(key >> (i<<4));\r",
    "cloneID": "2b41a5eb371637c69768a4adadf4d78d",
    "clone": "721e57596bc32dd0cece186ce1595e84",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SSResultSet.java",
    "size": 935,
    "example": "\tif(st.rsType == ResultSet.TYPE_FORWARD_ONLY) throw SmallSQLException.create(Language.RSET_FWDONLY);\r",
    "cloneID": "b6a51061d48c93b5b0a9bec5b4b9c2ed",
    "clone": "cc95ea36691089ff07dd10c7dabd7e25",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SSResultSet.java",
    "size": 935,
    "example": "\tif(st.rsType == ResultSet.TYPE_FORWARD_ONLY) throw SmallSQLException.create(Language.RSET_FWDONLY);\r",
    "cloneID": "045e97517515cd0474d06cc3628721b2",
    "clone": "cc95ea36691089ff07dd10c7dabd7e25",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunctionTimestampDiff.java",
    "size": 170,
    "example": "\tDateTime.Details details1 = new DateTime.Details(param1.getLong());\r",
    "cloneID": "36fc56b0918fd80db7949188015ebd23",
    "clone": "0df3e71cdd9010064ea49854aa8e082e",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunctionTimestampDiff.java",
    "size": 170,
    "example": "\tDateTime.Details details1 = new DateTime.Details(param1.getLong());\r",
    "cloneID": "68efea5203bd96f5a38439e8b97317bf",
    "clone": "0df3e71cdd9010064ea49854aa8e082e",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunctionTimestampDiff.java",
    "size": 170,
    "example": "\tDateTime.Details details1 = new DateTime.Details(param1.getLong());\r",
    "cloneID": "f302387d7ad3f4c790b9b6bc96f6c09c",
    "clone": "0df3e71cdd9010064ea49854aa8e082e",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestGroupBy.java",
    "size": 378,
    "example": "\tPreparedStatement pr = con.prepareStatement(\"Select count(*) FROM \" + table1 + \" Where id=-1234\");\r",
    "cloneID": "05659739db9472d1bd69f02a00fc3b35",
    "clone": "eb6da32139dbf21c051da4d4f5ae7816",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestGroupBy.java",
    "size": 378,
    "example": "\tPreparedStatement pr = con.prepareStatement(\"Select count(*) FROM \" + table1 + \" Group By name Order By name DESC\");\r",
    "cloneID": "6f11cd1de867c074d19bce98bea05fcc",
    "clone": "35810f26a9e6b32dc033817fdaa3cd6c",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SQLParser.java",
    "size": 2007,
    "example": "(token != null && token.value == SQLTokenizer.POINT){\r",
    "cloneID": "90d1a01a0085bb8865d0ccffa36e3f80",
    "clone": "eea75227cb5e44075552730c08b7c493",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SQLParser.java",
    "size": 2007,
    "example": "(token != null && token.value == SQLTokenizer.POINT){\r",
    "cloneID": "300aaf2d1b518ad9919f80c98325aba1",
    "clone": "eea75227cb5e44075552730c08b7c493",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SSDatabaseMetaData.java",
    "size": 1039,
    "example": "\tString[] colNames = {\"PROCEDURE_CAT\", \"PROCEDURE_SCHEM\", \"PROCEDURE_NAME\", \"\", \"\", \"\", \"REMARKS\", \"PROCEDURE_TYPE\"}; ",
    "cloneID": "a9b248f719eeba031ff260f2173d1f0e",
    "clone": "c135f1522741df3074f947b54be052fd",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestDBMetaData.java",
    "size": 310,
    "example": " String[] colNames = {\"PROCEDURE_CAT\", \"PROCEDURE_SCHEM\", \"PROCEDURE_NAME\", \"\", \"\", \"\", \"REMARKS\", \"PROCEDURE_TYPE\"};\r",
    "cloneID": "de8a1f6d7f950dc18118618028a5bcfa",
    "clone": "3d5549b3648720631e98cdf2cf0c65f1",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SSDatabaseMetaData.java",
    "size": 1039,
    "example": "\tString[] colNames = {\"TYPE_CAT\", \"TYPE_SCHEM\", \"TYPE_NAME\", \"CLASS_NAME\", \"DATA_TYPE\", \"REMARKS\"}; ",
    "cloneID": "21bc9b6f35c8ea6ebe4b8529e0e89f5a",
    "clone": "b05d9ced898987255ad4b2669de7ad0d",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestDBMetaData.java",
    "size": 310,
    "example": " String[] colNames = {\"TYPE_CAT\", \"TYPE_SCHEM\", \"TYPE_NAME\", \"CLASS_NAME\", \"DATA_TYPE\", \"REMARKS\"};\r",
    "cloneID": "8834c0a4cb0ec9d3ba57d0c1a7857207",
    "clone": "d04dac4caf4a5fbdee1bafa7c29a02cc",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/Scrollable.java",
    "size": 245,
    "example": " /**\r     * @inheritDoc\r     */\r    boolean isExpressionsFromThisRowSource(Expressions columns){\r        return rowSource.isExpressionsFromThisRowSource(columns);\r    }",
    "cloneID": "dbe6b4c8ec23cc7f9c977272b8d0e0de",
    "clone": "c13c02377fed66eea0ded24b802fed2c",
    "cloneSize": 6
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/Where.java",
    "size": 187,
    "example": " /**\r     * @inheritDoc\r     */\r    boolean isExpressionsFromThisRowSource(Expressions columns){\r        return rowSource.isExpressionsFromThisRowSource(columns);\r    }",
    "cloneID": "b8f368fe0c8d89757fb3ba4fff83f1aa",
    "clone": "c13c02377fed66eea0ded24b802fed2c",
    "cloneSize": 6
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/Distinct.java",
    "size": 145,
    "example": " /**\r     * @inheritDoc\r     */\r    boolean isExpressionsFromThisRowSource(Expressions columns){\r        return rowSource.isExpressionsFromThisRowSource(columns);\r    }",
    "cloneID": "1adf4fab1a5f98e7def43dd5d875c784",
    "clone": "c13c02377fed66eea0ded24b802fed2c",
    "cloneSize": 6
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SortedResult.java",
    "size": 317,
    "example": " /**\r     * @inheritDoc\r     */\r    boolean isExpressionsFromThisRowSource(Expressions columns){\r        return rowSource.isExpressionsFromThisRowSource(columns);\r    }",
    "cloneID": "59f9f80656eecbe6bad79c9bab9419ad",
    "clone": "c13c02377fed66eea0ded24b802fed2c",
    "cloneSize": 6
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/ExpressionValue.java",
    "size": 700,
    "example": " return (obj.equals(Boolean.TRUE)) ? 1 : 0;\r",
    "cloneID": "f37fe78bbb269a9cab211d473bd293cd",
    "clone": "1cc213ec580ae4d59a1bb93bd703aa15",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/ExpressionValue.java",
    "size": 700,
    "example": " return (obj.equals(Boolean.TRUE)) ? 1 : 0;\r",
    "cloneID": "e8a5dabfc05bdd40ebbdf64ed69e14f3",
    "clone": "1cc213ec580ae4d59a1bb93bd703aa15",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestTransactions.java",
    "size": 509,
    "example": "\tResultSet rs = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE)\r\t\t\t\t\t\t\t\t.executeQuery(\"Select * from transactions Where 1=0\");",
    "cloneID": "d6e40e58471522b32021e3800d395551",
    "clone": "4c8286709d771d35746a1c429ab6fa63",
    "cloneSize": 2
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestTransactions.java",
    "size": 509,
    "example": "\tResultSet rs = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE)\r\t\t\t\t\t\t\t\t.executeQuery(\"Select * from transactions Where 1=0\");",
    "cloneID": "a713749dd7e4b7946f03e53e7b0512fd",
    "clone": "4c8286709d771d35746a1c429ab6fa63",
    "cloneSize": 2
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunctionReturnInt.java",
    "size": 97,
    "example": " {\r\t\tif(isNull()) return null;\r\t\treturn String.valueOf(getInt());\r\t}",
    "cloneID": "77cb9c106417ccc5f5a1de6772626cd8",
    "clone": "84d28c497caad6e7d1df8b92d24d0d24",
    "cloneSize": 4
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunctionTimestampDiff.java",
    "size": 170,
    "example": " {\r\t\tif(isNull()) return null;\r\t\treturn String.valueOf(getInt());\r\t}",
    "cloneID": "a3789e09dc5e8a4d512ce3e3f6dc30f8",
    "clone": "84d28c497caad6e7d1df8b92d24d0d24",
    "cloneSize": 4
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/StoreImpl.java",
    "size": 1548,
    "example": "\tthrow SmallSQLException.create(Language.VALUE_CANT_CONVERT, new Object[] { SQLTokenizer.getKeyWord(dataType), \"NUMERIC\" });\r",
    "cloneID": "dee58152addabe7937c7907d299188df",
    "clone": "2c4d215754723a6590058f003ef613a5",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/StoreImpl.java",
    "size": 1548,
    "example": " throw SmallSQLException.create(Language.VALUE_CANT_CONVERT, new Object[] { SQLTokenizer.getKeyWord(dataType), \"NUMERIC\" });\r",
    "cloneID": "d37ab9796fbca1ab4feed76a5399c689",
    "clone": "e257600cf4f95f4218b47021ffaaafc0",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/Index.java",
    "size": 547,
    "example": " if(i + 1 == count)\r                return page.getValue();\r            else\r                page = (IndexNode)page.getValue();",
    "cloneID": "30dad395c46f435d4362dfcae391a8af",
    "clone": "71b0043403298202d4aaebcf23eb7a9b",
    "cloneSize": 4
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/Index.java",
    "size": 547,
    "example": " if(i + 1 == count)\r                return page.getValue();\r            else\r                page = (IndexNode)page.getValue();",
    "cloneID": "de972f83b15290c896df78434cc9c800",
    "clone": "71b0043403298202d4aaebcf23eb7a9b",
    "cloneSize": 4
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/LongLongList.java",
    "size": 86,
    "example": "\tif (idx >= size)\r\t\t\tthrow new IndexOutOfBoundsException(\"Index: \"+idx+\", Size: \"+size);",
    "cloneID": "f26095e6e946c23fad3e039057c6f6e9",
    "clone": "b8ff063dba7985c93732217de673ddba",
    "cloneSize": 2
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/LongLongList.java",
    "size": 86,
    "example": "\tif (idx >= size)\r\t\t\tthrow new IndexOutOfBoundsException(\"Index: \"+idx+\", Size: \"+size);",
    "cloneID": "c5167f1136265f0e280222b88c481a86",
    "clone": "b8ff063dba7985c93732217de673ddba",
    "cloneSize": 2
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/Expressions.java",
    "size": 135,
    "example": "\tif (idx >= size)\r\t\t\tthrow new IndexOutOfBoundsException(\"Index: \"+idx+\", Size: \"+size);",
    "cloneID": "ea830707a8406c1ec4971c146cd50a89",
    "clone": "b8ff063dba7985c93732217de673ddba",
    "cloneSize": 2
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/DataSources.java",
    "size": 62,
    "example": "\tif (idx >= size)\r\t\t\tthrow new IndexOutOfBoundsException(\"Index: \"+idx+\", Size: \"+size);",
    "cloneID": "2f0199e4d08d9439adff4309128350db",
    "clone": "b8ff063dba7985c93732217de673ddba",
    "cloneSize": 2
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/LongList.java",
    "size": 86,
    "example": "\tif (idx >= size)\r\t\t\tthrow new IndexOutOfBoundsException(\"Index: \"+idx+\", Size: \"+size);",
    "cloneID": "490a0d5155657f528579dfd35765c150",
    "clone": "b8ff063dba7985c93732217de673ddba",
    "cloneSize": 2
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestTokenizer.java",
    "size": 236,
    "example": " catch (SQLException e) {\r\t\t\t// just to check the error, if it happens, is the expected one\r\t\t\tout.println(\"REGULAR: \" + e.getMessage() + '\\n');\r\t\t}",
    "cloneID": "5dcbcf4274a587d0d75165e4de953919",
    "clone": "65e99494a2f84f966578f5a63c3286c2",
    "cloneSize": 4
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestTokenizer.java",
    "size": 236,
    "example": "\tcatch (SQLException e) {\r\t\t\t// just to check the error, if it happens, is the expected one\r\t\t\tout.println(\"REGULAR: \" + e.getMessage() + '\\n');\r\t\t}",
    "cloneID": "8cb3632bf2286f66613674a43a2e8351",
    "clone": "d95808f036128e3641d7ef30a90aa9de",
    "cloneSize": 4
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SQLParser.java",
    "size": 2007,
    "example": "\tint offset = token.offset + token.length;\r",
    "cloneID": "1daf05bfd411b6e95bc504e1f3764239",
    "clone": "c573a98502db1a3596a7cdc055e2b261",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SQLParser.java",
    "size": 2007,
    "example": " int offset = token.offset + token.length;\r",
    "cloneID": "3a73f7a9d45cb432be568160448a3288",
    "clone": "5c7ce67370fd2edc98a04a399a10e6c0",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/CommandCreateDatabase.java",
    "size": 61,
    "example": " if(name.startsWith(\"file:\"))\r            name = name.substring(5);",
    "cloneID": "942738240e610dd5d8fb28036bd8f776",
    "clone": "b5cf916b9827aec87a3f151f186f3d80",
    "cloneSize": 2
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/CommandDrop.java",
    "size": 76,
    "example": " if(name.startsWith(\"file:\"))\r                    name = name.substring(5);",
    "cloneID": "64989a69c7b422a45eeae138fba73dca",
    "clone": "52a95427b4bc78266cb0370915ae9666",
    "cloneSize": 2
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/StoreImpl.java",
    "size": 1548,
    "example": " page[ offset++ ] = (byte)(value >> 8);\r",
    "cloneID": "bc9d45546b083490d027aba06082a82b",
    "clone": "da4b7541847adc4ee2af9929c0411e61",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/StoreImpl.java",
    "size": 1548,
    "example": " page[ offset++ ] = (byte)(value >> 8);\r",
    "cloneID": "94379ca2acd2af49b592809f8cbbfb62",
    "clone": "da4b7541847adc4ee2af9929c0411e61",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/StoreImpl.java",
    "size": 1548,
    "example": " page[ offset++ ] = (byte)(value >> 8);\r",
    "cloneID": "37d3a663b37d794c51a1b2e8c0382c19",
    "clone": "da4b7541847adc4ee2af9929c0411e61",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/Utils.java",
    "size": 477,
    "example": " for(int i=0; i<length; i++){\r            result = (result << 8) | (bytes[i] & 0xFF);\r        }",
    "cloneID": "68565ba453d89cb9f537073c2e5e636f",
    "clone": "99c069de10b37bb1e6de24c0e170b08d",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/Utils.java",
    "size": 477,
    "example": " for(int i=0; i<length; i++){\r            result = (result << 8) | (bytes[i] & 0xFF);\r        }",
    "cloneID": "1219498faaf1bcf1492e7b55402e7d1c",
    "clone": "99c069de10b37bb1e6de24c0e170b08d",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestOperatoren.java",
    "size": 281,
    "example": " a(\"longvarbinary\"     , new byte[]{12, 45, 1},  new byte[]{12, 45, 2, 56, 89}),\r",
    "cloneID": "aa5868129e24472b1f2a5e6cb4c2a10a",
    "clone": "4445a45ebfb770ccb25ffc3af6bf5630",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestJoins.java",
    "size": 218,
    "example": " a(\"longvarbinary\"     , new byte[]{12, 45, 1},  new byte[]{12, 45, 2, 56, 89}),\r",
    "cloneID": "b50c26c3084155d6c6fbc0c8ac21ca8f",
    "clone": "4445a45ebfb770ccb25ffc3af6bf5630",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/SSDatabaseMetaData.java",
    "size": 1039,
    "example": "\tString[] colNames = {\t\t\"TYPE_NAME\", \t\t\t\t\"DATA_TYPE\", \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"PRECISION\", \t\"LITERAL_PREFIX\", \"LITERAL_SUFFIX\", \t\t\"CREATE_PARAMS\", \"NULLABLE\", \t \"CASE_SENSITIVE\", \"SEARCHABLE\", \"UNSIGNED_ATTRIBUTE\", \"FIXED_PREC_SCALE\", \"AUTO_INCREMENT\", \"LOCAL_TYPE_NAME\", \"MINIMUM_SCALE\", \"MAXIMUM_SCALE\", \"SQL_DATA_TYPE\", \"SQL_DATETIME_SUB\", \"NUM_PREC_RADIX\"};\r",
    "cloneID": "eeb0552a0d35ff217575d57ee6c7a82f",
    "clone": "68c09a0367b3016c1bac10515b34bc2f",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestDBMetaData.java",
    "size": 310,
    "example": " String[] colNames = {\"TYPE_NAME\", \"DATA_TYPE\", \"PRECISION\", \"LITERAL_PREFIX\", \"LITERAL_SUFFIX\", \"CREATE_PARAMS\", \"NULLABLE\", \"CASE_SENSITIVE\", \"SEARCHABLE\", \"UNSIGNED_ATTRIBUTE\", \"FIXED_PREC_SCALE\", \"AUTO_INCREMENT\", \"LOCAL_TYPE_NAME\", \"MINIMUM_SCALE\", \"MAXIMUM_SCALE\", \"SQL_DATA_TYPE\", \"SQL_DATETIME_SUB\", \"NUM_PREC_RADIX\"};\r",
    "cloneID": "79444b1b872e8fe4dc8b8675558ed799",
    "clone": "b6b782ea219ea3471cadbfe929dd6abf",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/Table.java",
    "size": 568,
    "example": "){\r\t\t\t\t\t\t\tIterator values = locks.values().iterator();\r\t\t\t\t\t\t\twhile(values.hasNext()){\r\t\t\t\t\t\t\t\tTableStorePage lock = (TableStorePage)values.next();\r\t\t\t\t\t\t\t\tif(lock.con != con) return null;\r\t\t\t\t\t\t\t}\r\t\t\t\t\t\t}",
    "cloneID": "7a1b0c86ef757c1eed3c30ab1b384977",
    "clone": "cd3de21af6649094a68b18d1ced115ac",
    "cloneSize": 7
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/Table.java",
    "size": 568,
    "example": "){\r\t\t\t\t\t\t\tIterator values = locks.values().iterator();\r\t\t\t\t\t\t\twhile(values.hasNext()){\r\t\t\t\t\t\t\t\tTableStorePage lock = (TableStorePage)values.next();\r\t\t\t\t\t\t\t\tif(lock.con != con) return null;\r\t\t\t\t\t\t\t}\r\t\t\t\t\t\t}",
    "cloneID": "9147a84b8cba250d0b0c2a3a67762b0e",
    "clone": "cd3de21af6649094a68b18d1ced115ac",
    "cloneSize": 7
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/Table.java",
    "size": 568,
    "example": "){\r                        Iterator values = locks.values().iterator();\r                        while(values.hasNext()){\r                            TableStorePage lock = (TableStorePage)values.next();\r                            if(lock.con != con) return null;\r                        }\r                    }",
    "cloneID": "4805a91e05e51703b4e7398ebcef0d1c",
    "clone": "ac2698cff13d98cffe13f1db263a9aee",
    "cloneSize": 7
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/StoreImpl.java",
    "size": 1548,
    "example": " StoreImpl store = table.getLobStore( ((TableStorePage)storePage).con, lobFilePos, SQLTokenizer.SELECT );\r",
    "cloneID": "c716d31e8af98d415740d741136ae4a5",
    "clone": "10c931e8cbb8b9300381aff438282f10",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/database/StoreImpl.java",
    "size": 1548,
    "example": " StoreImpl store = table.getLobStore( ((TableStorePage)storePage).con, lobFilePos, SQLTokenizer.SELECT );\r",
    "cloneID": "9f37a11043ca19445ed1ce7df104f786",
    "clone": "10c931e8cbb8b9300381aff438282f10",
    "cloneSize": 1
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestExceptionMethods.java",
    "size": 309,
    "example": "}catch(SQLException e){\r                assertSQLException(\"01000\", 0, e);\r            }",
    "cloneID": "4d2b402cb119bc4c46b84481543fc172",
    "clone": "7df1ec1ad6d1f4f7ba2fd25ab8a66a58",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestExceptionMethods.java",
    "size": 309,
    "example": "}catch(SQLException e){\r                assertSQLException(\"01000\", 0, e);\r            }",
    "cloneID": "9245589a7b14fcfff72dc4e752ca78c8",
    "clone": "7df1ec1ad6d1f4f7ba2fd25ab8a66a58",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestExceptionMethods.java",
    "size": 309,
    "example": "}catch(SQLException e){\r                assertSQLException(\"01000\", 0, e);\r            }",
    "cloneID": "e2700b8007ce5b81ea731dc8f13bdaef",
    "clone": "7df1ec1ad6d1f4f7ba2fd25ab8a66a58",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestExceptionMethods.java",
    "size": 309,
    "example": "}catch(SQLException e){\r                assertSQLException(\"01000\", 0, e);\r            }",
    "cloneID": "53e47abd4c96fca75686c85b3aa7dc5a",
    "clone": "7df1ec1ad6d1f4f7ba2fd25ab8a66a58",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestExceptionMethods.java",
    "size": 309,
    "example": "}catch(SQLException e){\r                assertSQLException(\"01000\", 0, e);\r            }",
    "cloneID": "bb1499d7e7ca72ca71a16cdc35fca77d",
    "clone": "7df1ec1ad6d1f4f7ba2fd25ab8a66a58",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestExceptionMethods.java",
    "size": 309,
    "example": "}catch(SQLException e){\r                assertSQLException(\"01000\", 0, e);\r            }",
    "cloneID": "63c278b14b62cb8c764a243fb9286ab0",
    "clone": "7df1ec1ad6d1f4f7ba2fd25ab8a66a58",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestExceptionMethods.java",
    "size": 309,
    "example": "}catch(SQLException e){\r                assertSQLException(\"01000\", 0, e);\r            }",
    "cloneID": "9c081a4c1dfbfd4e47dab85daa3be219",
    "clone": "7df1ec1ad6d1f4f7ba2fd25ab8a66a58",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestExceptionMethods.java",
    "size": 309,
    "example": "}catch(SQLException e){\r                assertSQLException(\"01000\", 0, e);\r            }",
    "cloneID": "5419224b3989f32856ce33bcd41686a8",
    "clone": "7df1ec1ad6d1f4f7ba2fd25ab8a66a58",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestExceptionMethods.java",
    "size": 309,
    "example": "}catch(SQLException e){\r                assertSQLException(\"01000\", 0, e);\r            }",
    "cloneID": "9c1dc7d5d3d74e01908b5ec5772f9dcd",
    "clone": "7df1ec1ad6d1f4f7ba2fd25ab8a66a58",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestExceptionMethods.java",
    "size": 309,
    "example": "}catch(SQLException e){\r                assertSQLException(\"01000\", 0, e);\r            }",
    "cloneID": "155c797a6c932ed543807638d1ca6b9c",
    "clone": "7df1ec1ad6d1f4f7ba2fd25ab8a66a58",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestExceptionMethods.java",
    "size": 309,
    "example": "}catch(SQLException e){\r            assertSQLException(\"01000\", 0, e);\r        }",
    "cloneID": "df81544d76a59aaa25c5c8bb8d680e8b",
    "clone": "1e227d0beb523a8e245c9c03d68e5c29",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestExceptionMethods.java",
    "size": 309,
    "example": "}catch(SQLException e){\r                assertSQLException(\"01000\", 0, e);\r            }",
    "cloneID": "980f1a3ef636e9c4c0fcb1244824bac5",
    "clone": "7df1ec1ad6d1f4f7ba2fd25ab8a66a58",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestExceptionMethods.java",
    "size": 309,
    "example": "}catch(SQLException e){\r                assertSQLException(\"01000\", 0, e);\r            }",
    "cloneID": "89c79f35bee51cbb71085ec65b8b11d2",
    "clone": "7df1ec1ad6d1f4f7ba2fd25ab8a66a58",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestExceptionMethods.java",
    "size": 309,
    "example": "}catch(SQLException e){\r                assertSQLException(\"01000\", 0, e);\r            }",
    "cloneID": "3a322cd715ff2a782aa259c28bfc808a",
    "clone": "7df1ec1ad6d1f4f7ba2fd25ab8a66a58",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/TestExceptionMethods.java",
    "size": 309,
    "example": "}catch(SQLException e){\r                assertSQLException(\"01000\", 0, e);\r            }",
    "cloneID": "6672f608efd5eee66f1403e5d8a2e8b5",
    "clone": "7df1ec1ad6d1f4f7ba2fd25ab8a66a58",
    "cloneSize": 3
  },
  {
    "path": "smallsql/smallsql0.21_src/src/smallsql/junit/BasicTestCase.java",
    "size": 373,
    "example": "}catch(SQLException e){\r                assertSQLException(\"01000\", 0, e);\r            }",
    "cloneID": "99c4f246856146596332d72ea907b694",
    "clone": "7df1ec1ad6d1f4f7ba2fd25ab8a66a58",
    "cloneSize": 3
  }
]