[
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunctionReturnP1StringAndBinary.java",
    "size": 91,
    "example": "\tfinal int getInt() throws Exception {\r\n\t\tif(isNull()) return 0;\r\n\t\treturn Integer.parseInt(getString().trim());\r\n\t}",
    "cloneID": "c4eeae4d091f37e8fbc19e58e37a6659",
    "clone": "2e362ff93ee82bb39fdc04ef81c5fe00",
    "cloneSize": 4
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunctionReturnString.java",
    "size": 93,
    "example": "\tfinal int getInt() throws Exception {\r\n\t\tif(isNull()) return 0;\r\n\t\treturn Integer.parseInt(getString().trim());\r\n\t}",
    "cloneID": "36aeb637bf347a1deccad74456295aef",
    "clone": "2e362ff93ee82bb39fdc04ef81c5fe00",
    "cloneSize": 4
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/SQLTokenizer.java",
    "size": 947,
    "example": " if(!wasWhiteSpace){\r\n\t                                tokens.add( new SQLToken( value, tokenStart, i) );\r\n\t                                value = 0;\r\n\t                            }",
    "cloneID": "7e57b873580b5e17dcb09b74da09f7ea",
    "clone": "cd2ab4993a1a9aa81768e9a9a6f3b611",
    "cloneSize": 4
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/SQLTokenizer.java",
    "size": 947,
    "example": " if(!wasWhiteSpace){\r\n                                   tokens.add( new SQLToken( value, tokenStart, i) );\r\n                                   value = 0;\r\n                                }",
    "cloneID": "817f751873c6abb2519467944bb03400",
    "clone": "92520082baa49b1019af85604ce3b7fd",
    "cloneSize": 4
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunctionConvert.java",
    "size": 264,
    "example": "){\r\n\t\t\t\t\tbyte[] buffer = new byte[length];\r\n\t\t\t\t\tSystem.arraycopy(bytes, 0, buffer, 0, Math.min(bytes.length,length) );\r\n\t\t\t\t\treturn buffer;\r\n\t\t\t\t}",
    "cloneID": "e30340a85775428056c5a87a786a5fbb",
    "clone": "6f5a5b57e6e22c0b87d0956076f6d7d8",
    "cloneSize": 5
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunctionConvert.java",
    "size": 264,
    "example": "){\r\n\t\t\t\t\tbyte[] buffer = new byte[length];\r\n\t\t\t\t\tSystem.arraycopy(bytes, 0, buffer, 0, Math.min(bytes.length,length) );\r\n\t\t\t\t\treturn buffer;\r\n\t\t\t\t}",
    "cloneID": "3a36bde61480c69fa445c309fd5cf4de",
    "clone": "6f5a5b57e6e22c0b87d0956076f6d7d8",
    "cloneSize": 5
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunctionTimestampDiff.java",
    "size": 170,
    "example": "\tDateTime.Details details2 = new DateTime.Details(param2.getLong());\r\n",
    "cloneID": "c3a8e46d73ae7b777def2e66e590ffde",
    "clone": "5feaaa0550f5d00d4a37218f28f61ec6",
    "cloneSize": 1
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunctionTimestampDiff.java",
    "size": 170,
    "example": "\tDateTime.Details details2 = new DateTime.Details(param2.getLong());\r\n",
    "cloneID": "257ef665ed49a45c708cad3181de3afd",
    "clone": "5feaaa0550f5d00d4a37218f28f61ec6",
    "cloneSize": 1
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunctionTimestampDiff.java",
    "size": 170,
    "example": "\tDateTime.Details details2 = new DateTime.Details(param2.getLong());\r\n",
    "cloneID": "e9e10e327ee3db84424734aed5f4faf3",
    "clone": "5feaaa0550f5d00d4a37218f28f61ec6",
    "cloneSize": 1
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunctionTimestampAdd.java",
    "size": 144,
    "example": "\tDateTime.Details details2 = new DateTime.Details(param2.getLong());\r\n",
    "cloneID": "65f0d0da25aaaf7d9beb3fcc3bada87b",
    "clone": "5feaaa0550f5d00d4a37218f28f61ec6",
    "cloneSize": 1
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunctionTimestampAdd.java",
    "size": 144,
    "example": "\tDateTime.Details details2 = new DateTime.Details(param2.getLong());\r\n",
    "cloneID": "4ff3d173086005ad735f1c076602cc2f",
    "clone": "5feaaa0550f5d00d4a37218f28f61ec6",
    "cloneSize": 1
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunctionTimestampAdd.java",
    "size": 144,
    "example": "\tDateTime.Details details2 = new DateTime.Details(param2.getLong());\r\n",
    "cloneID": "cdd9edf549d8312859d5e2e86d121bd6",
    "clone": "5feaaa0550f5d00d4a37218f28f61ec6",
    "cloneSize": 1
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/SSDatabaseMetaData.java",
    "size": 1039,
    "example": "\tString[] colNames = {\"TABLE_CAT\", \"TABLE_SCHEM\", \"TABLE_NAME\", \"COLUMN_NAME\", \"DATA_TYPE\", \"TYPE_NAME\", \"COLUMN_SIZE\", \"BUFFER_LENGTH\", \"DECIMAL_DIGITS\", \"NUM_PREC_RADIX\", \"NULLABLE\", \"REMARKS\", \"COLUMN_DEF\", \"SQL_DATA_TYPE\", \"SQL_DATETIME_SUB\", \"CHAR_OCTET_LENGTH\", \"ORDINAL_POSITION\", \"IS_NULLABLE\"};\r\n",
    "cloneID": "916c9e376b29cecd013cd98b73e89f33",
    "clone": "a4ffe9cdb5fdf72f43144af803b7d6ec",
    "cloneSize": 1
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/junit/TestDBMetaData.java",
    "size": 310,
    "example": " String[] colNames = {\"TABLE_CAT\", \"TABLE_SCHEM\", \"TABLE_NAME\", \"COLUMN_NAME\", \"DATA_TYPE\", \"TYPE_NAME\", \"COLUMN_SIZE\", \"BUFFER_LENGTH\", \"DECIMAL_DIGITS\", \"NUM_PREC_RADIX\", \"NULLABLE\", \"REMARKS\", \"COLUMN_DEF\", \"SQL_DATA_TYPE\", \"SQL_DATETIME_SUB\", \"CHAR_OCTET_LENGTH\", \"ORDINAL_POSITION\", \"IS_NULLABLE\"};\r\n",
    "cloneID": "06f0df4b2f78d4520479eba726d6734c",
    "clone": "b5a3f6f3ce96969a0728d9f3e6ceac94",
    "cloneSize": 1
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/SQLParser.java",
    "size": 2007,
    "example": "\ttry{\r\n\t\t\t\t\t\tvalue = Integer.parseInt(token.getName(sql) );\r\n\t\t\t\t\t}catch(Exception e){\r\n\t\t\t\t\t\tthrow createSyntaxError(token, MISSING_NUMBERVALUE );\r\n\t\t\t\t\t}",
    "cloneID": "4d8b29f210ee560293a935d18016619d",
    "clone": "3f372a9d18921498564c6c467d0b92c0",
    "cloneSize": 5
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/SQLParser.java",
    "size": 2007,
    "example": "\ttry{\r\n\t\t\t\t\t\t\tvalue = Integer.parseInt(token.getName(sql) );\r\n\t\t\t\t\t\t}catch(Exception e){\r\n\t\t\t\t\t\t\tthrow createSyntaxError(token, MISSING_NUMBERVALUE );\r\n\t\t\t\t\t\t}",
    "cloneID": "21f65b7f8c9b96a667cf3b9d627b5cf4",
    "clone": "44d3c46ff3dda289bb6154195b66dbe5",
    "cloneSize": 5
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/junit/BasicTestCase.java",
    "size": 373,
    "example": "){\r\n\t\tStringBuffer buf = new StringBuffer(bytes.length << 1);\r\n\t\tfor(int i=0; i<bytes.length; i++){\r\n\t\t\tbuf.append( digits[ (bytes[i] >> 4) & 0x0F ] );\r\n\t\t\tbuf.append( digits[ (bytes[i]     ) & 0x0F ] );\r\n\t\t}\r\n\t\treturn buf.toString();\r\n\t}",
    "cloneID": "85392bf330e6e5907d374ec22ef5795f",
    "clone": "86dae10c7f10703e1312a80daf6874f6",
    "cloneSize": 8
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/Utils.java",
    "size": 477,
    "example": "){\r\n        StringBuffer buf = new StringBuffer(bytes.length << 1);\r\n        for(int i=0; i<bytes.length; i++){\r\n            buf.append( digits[ (bytes[i] >> 4) & 0x0F ] );\r\n            buf.append( digits[ (bytes[i]     ) & 0x0F ] );\r\n        }\r\n        return buf.toString();\r\n    }",
    "cloneID": "a5a2e9e8f3636ec2f04b59c129c0c9d6",
    "clone": "8bad6cdb3f7c343700f8a19ad058d18b",
    "cloneSize": 8
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/junit/BasicTestCase.java",
    "size": 373,
    "example": " digits = {'0','1','2','3','4','5','6','7','8','9','A','B','C','D','E','F'};\r\n",
    "cloneID": "bf14d61e5e37c4046c9541eca6f282b7",
    "clone": "c49b4d145c5ac80e3476888a0620522a",
    "cloneSize": 1
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/Utils.java",
    "size": 477,
    "example": " digits = {'0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F'};\r\n",
    "cloneID": "77d9c6eb3addb433c9f5afbd1ad8097f",
    "clone": "52bbe992044d4f7955f68475a343b8d7",
    "cloneSize": 1
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/junit/TestJoins.java",
    "size": 218,
    "example": " a(\"raw(100)\"          , new byte[]{12, 45, 1},  new byte[]{12, 45, 2, 56, 89}),\r\n",
    "cloneID": "2036ecd09f1bb0b6d9eb6358355c61f4",
    "clone": "064c816fdac15a0db1ae33c9cb7850b9",
    "cloneSize": 1
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/junit/TestOperatoren.java",
    "size": 281,
    "example": " a(\"raw(100)\"          , new byte[]{12, 45, 1},  new byte[]{12, 45, 2, 56, 89}),\r\n",
    "cloneID": "d6c7c306ca88c08099a1b2e66ed07e18",
    "clone": "064c816fdac15a0db1ae33c9cb7850b9",
    "cloneSize": 1
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/junit/TestJoins.java",
    "size": 218,
    "example": " a(\"image\"             , new byte[]{12, 45, 1},  new byte[]{12, 45, 2, 56, 89}),\r\n",
    "cloneID": "2c91e38f91b1c5f2b4a3201df18bb66c",
    "clone": "69cc33f438c981479d110afd18827c75",
    "cloneSize": 1
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/junit/TestOperatoren.java",
    "size": 281,
    "example": " a(\"image\"             , new byte[]{12, 45, 1},  new byte[]{12, 45, 2, 56, 89}),\r\n",
    "cloneID": "f1edec51aa4f411aef4e2c09c0a345ba",
    "clone": "69cc33f438c981479d110afd18827c75",
    "cloneSize": 1
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunction.java",
    "size": 124,
    "example": "\tObject[] params = {\r\n\t\t\t\tSQLTokenizer.getKeyWord(dataType),\r\n\t\t\t\tSQLTokenizer.getKeyWord(getFunction())\r\n\t\t};",
    "cloneID": "158bb9201288ea51338c1d7a209271e0",
    "clone": "839d2a21bf54b555846154079c116fe4",
    "cloneSize": 4
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunction.java",
    "size": 124,
    "example": "\tObject[] params = {\r\n    \t\t\tSQLTokenizer.getKeyWord(dataType),\r\n    \t\t\tSQLTokenizer.getKeyWord(getFunction())\r\n    \t};",
    "cloneID": "b556eb59e5478b76ad12c6c111d04ca6",
    "clone": "81e0a802a693f77b77e40c90c05707c6",
    "cloneSize": 4
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/junit/TestDeleteUpdate.java",
    "size": 162,
    "example": "\tfor(int i=0; i<10; i++){\r\n\t\t\tst.execute(\"Insert into testUpdate Values(\"+i+','+i+\")\");\r\n\t\t}",
    "cloneID": "509b70b56e48bd586dda32562fc3cf9b",
    "clone": "1dabf3e8ac65bbcbe62878779fa6305e",
    "cloneSize": 3
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/junit/TestDeleteUpdate.java",
    "size": 162,
    "example": "\tfor(int i=0; i<10; i++){\r\n\t\t\tst.execute(\"Insert into testUpdate Values(\"+i+','+(i*100)+','+i+\")\");\r\n\t\t}",
    "cloneID": "5d2bd5592107487cc23c8154c64df8e1",
    "clone": "7ce0b5aa55f0d52ac9ce411f359871fd",
    "cloneSize": 3
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/CommandSelect.java",
    "size": 570,
    "example": "(src != null && (!(src instanceof ExpressionValue) || !((ExpressionValue)src).isEmpty())){\t\r\n",
    "cloneID": "33fb0017ff8c86f07e8be9a001617825",
    "clone": "5a5bc71ae95e2ca200834662d721b62f",
    "cloneSize": 1
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/CommandSelect.java",
    "size": 570,
    "example": "(src != null && (!(src instanceof ExpressionValue) || !((ExpressionValue)src).isEmpty())){\t\r\n",
    "cloneID": "868c8859c83b764cebe97df93d6ed681",
    "clone": "5a5bc71ae95e2ca200834662d721b62f",
    "cloneSize": 1
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/junit/TestOrderBy.java",
    "size": 821,
    "example": "n{\r\n\t\tinit();\r\n\t\tConnection con = AllTests.getConnection();\r\n\t\tStatement st = con.createStatement();\r\n\t\tResultSet rs;\r\n\t\tString oldValue;\r\n\t\t\r\n\t\trs = st.executeQuery(\"SELECT * FROM \" + table1 + \" ORDER  by v desc\");\r\n\t\t\r\n\t\tassertTrue( rs.next() );\r\n\t\toldValue = rs.getString(\"v\");\r\n\t\t\r\n\t\tint count = 1;\r\n\t\twhile(oldValue != null && rs.next()){\r\n\t\t\tString newValue = rs.getString(\"v\");\r\n\t\t\tif(newValue != null){\r\n\t\t\t\tassertTrue( oldValue.compareTo( newValue ) > 0 );\r\n\t\t\t\tcount++;\r\n\t\t\t}\r\n\t\t\toldValue = newValue;\r\n\t\t}\r\n\t\tassertNull(oldValue);\r\n\t\tassertFalse( rs.next() );\r\n\r\n\t\tassertEquals( valueCount, count );\r\n\t}",
    "cloneID": "8c2821435a719a724268f36455207b19",
    "clone": "7b99948e83c49bd5010beb733d4d4b15",
    "cloneSize": 26
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/junit/TestOrderBy.java",
    "size": 821,
    "example": "n{\r\n\t\tinit();\r\n\t\tConnection con = AllTests.getConnection();\r\n\t\tStatement st = con.createStatement();\r\n\t\tResultSet rs;\r\n\t\tString oldValue;\r\n\t\t\r\n\t\trs = st.executeQuery(\"SELECT * FROM \" + table1 + \" ORDER  by v desc, i asc\");\r\n\t\t\r\n\t\tassertTrue( rs.next() );\r\n\t\toldValue = rs.getString(\"v\");\r\n\t\t\r\n\t\tint count = 1;\r\n\t\twhile(oldValue != null && rs.next()){\r\n\t\t\tString newValue = rs.getString(\"v\");\r\n\t\t\tif(newValue != null){\r\n\t\t\t\tassertTrue( oldValue.compareTo( newValue ) > 0 );\r\n\t\t\t\tcount++;\r\n\t\t\t}\r\n\t\t\toldValue = newValue;\r\n\t\t}\r\n\t\tassertNull(oldValue);\r\n\t\tassertFalse( rs.next() );\r\n\r\n\t\tassertEquals( valueCount, count );\r\n\t}",
    "cloneID": "f6dedce6fc2d1cf8a970761ea5ac88fe",
    "clone": "a2aff4d5d77acd50e719fed56c6913c5",
    "cloneSize": 26
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunction.java",
    "size": 124,
    "example": "\tObject[] params = {\r\n\t\t\t\tSQLTokenizer.getKeyWord(dataType),\r\n\t\t\t\tSQLTokenizer.getKeyWord(getFunction())\r\n\t\t};",
    "cloneID": "158bb9201288ea51338c1d7a209271e0",
    "clone": "839d2a21bf54b555846154079c116fe4",
    "cloneSize": 4
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunction.java",
    "size": 124,
    "example": "\tObject[] params = {\r\n    \t\t\tSQLTokenizer.getKeyWord(dataType),\r\n    \t\t\tSQLTokenizer.getKeyWord(getFunction())\r\n    \t};",
    "cloneID": "b556eb59e5478b76ad12c6c111d04ca6",
    "clone": "81e0a802a693f77b77e40c90c05707c6",
    "cloneSize": 4
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunctionReturnP1StringAndBinary.java",
    "size": 91,
    "example": "\tfinal boolean getBoolean() throws Exception {\r\n\t\tif(isNull()) return false;\r\n\t\treturn Utils.string2boolean(getString().trim());\r\n\t}",
    "cloneID": "d7065a059443823e4eec1ce5ff67c983",
    "clone": "9689a3c0a5319eb9094ce88a1be86efa",
    "cloneSize": 4
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunctionReturnString.java",
    "size": 93,
    "example": "\tfinal boolean getBoolean() throws Exception {\r\n\t\tif(isNull()) return false;\r\n\t\treturn Utils.string2boolean(getString().trim());\r\n\t}",
    "cloneID": "8d4c5135dcdcb80baaaa34c64f494f9f",
    "clone": "9689a3c0a5319eb9094ce88a1be86efa",
    "cloneSize": 4
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/junit/BenchTest.java",
    "size": 753,
    "example": " if (count != rowCount){\r\n                // There are not the correct count of rows.\r\n                if (count == 0){\r\n                    createTestDataWithClassicInsert( con );\r\n                    rs = st1.executeQuery( \"SELECT count(*) FROM \" + tableName);\r\n                    rs.next();\r\n                    count = rs.getInt(1);\r\n                }\r\n                if (count != rowCount){\r\n                    System.out.println( \"  Failed: Only \" + (rowCount-count) + \" rows were deleted.\");\r\n                    return;\r\n                }\r\n            }",
    "cloneID": "7bc66003f6f0c9f823364699bc6e3d06",
    "clone": "ff681f12344fc3c681b50d5e29464534",
    "cloneSize": 13
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/junit/BenchTest.java",
    "size": 753,
    "example": " if (count != rowCount){\r\n                // There are not the correct count of rows.\r\n                if (count == 0){\r\n                    createTestDataWithClassicInsert( con );\r\n                    rs = st1.executeQuery( \"SELECT count(*) FROM \" + tableName);\r\n                    rs.next();\r\n                    count = rs.getInt(1);\r\n                }\r\n                if (count != rowCount){\r\n                    System.out.println( \"  Failed: Only \" + (rowCount-count) + \" rows were found.\");\r\n                    return;\r\n                }\r\n            }",
    "cloneID": "f7102340e538f675a977b0076f619ed9",
    "clone": "da5224376ab4d52237b16fc51b836821",
    "cloneSize": 13
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/SSStatement.java",
    "size": 413,
    "example": " if(failed == null){\r\n                    failed = new BatchUpdateException(ex.getMessage(), ex.getSQLState(), ex.getErrorCode(), result);\r\n                    failed.initCause(ex);\r\n                }",
    "cloneID": "e8a3199e0dcfd73d48a983344e5b5661",
    "clone": "7e663d006bf3864e3914cda8c45f80b8",
    "cloneSize": 4
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/SSPreparedStatement.java",
    "size": 338,
    "example": "\tif(failed == null){\r\n\t\t\t\t\tfailed = new BatchUpdateException(ex.getMessage(), ex.getSQLState(), ex.getErrorCode(), result);\r\n\t\t\t\t\tfailed.initCause(ex);\r\n\t\t\t\t}",
    "cloneID": "b34f60ba589802b26e6ff3b580119dbd",
    "clone": "f7d89ea8736572281196acb3cae7f22d",
    "cloneSize": 4
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/SSDatabaseMetaData.java",
    "size": 1039,
    "example": "\tString[] colNames = {\"PROCEDURE_CAT\", \"PROCEDURE_SCHEM\", \"PROCEDURE_NAME\", \"\", \"\", \"\", \"REMARKS\", \"PROCEDURE_TYPE\"}; ",
    "cloneID": "ebde7437601eb7acfb9c4feef9f45fec",
    "clone": "c135f1522741df3074f947b54be052fd",
    "cloneSize": 1
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/junit/TestDBMetaData.java",
    "size": 310,
    "example": " String[] colNames = {\"PROCEDURE_CAT\", \"PROCEDURE_SCHEM\", \"PROCEDURE_NAME\", \"\", \"\", \"\", \"REMARKS\", \"PROCEDURE_TYPE\"};\r\n",
    "cloneID": "4ea20a98813866d720afcafaa3bb73db",
    "clone": "5e05b4fe42a45aa9e783e90153b8acca",
    "cloneSize": 1
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/junit/TestOrderBy.java",
    "size": 821,
    "example": "n{\r\n\t\tinit();\r\n\t\tConnection con = AllTests.getConnection();\r\n\t\tStatement st = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);\r\n\t\tResultSet rs;\r\n\t\tint count;\r\n\t\t\r\n\t\trs = st.executeQuery(\"SELECT * FROM \" + table1 + \" ORDER  by v\");\r\n\t\t\r\n\t\t//jetzt irgendwo in die Mitte scrollen\r\n\t\trs.next();\r\n\t\trs.next();\r\n\t\trs.previous(); //dann soll der Zeiger nicht am Ende des bereits gefetchten stehen\r\n\t\t\r\n\t\trs.last();\r\n\t\tcount = 0;\r\n\t\twhile(rs.previous()) count++;\t\t\r\n\t\tassertEquals( valueCount, count );\r\n\r\n\t\trs.beforeFirst();\r\n\t\tcount = -1;\r\n\t\twhile(rs.next()) count++;\t\t\r\n\t\tassertEquals( valueCount, count );\r\n\r\n\t\trs.beforeFirst();\r\n\t\tcount = -1;\r\n\t\twhile(rs.next()) count++;\t\t\r\n\t\tassertEquals( valueCount, count );\r\n\t}",
    "cloneID": "fb40fb10c1e38c94e6f62c1ce0eed5f6",
    "clone": "65b417253d107c825d768ec2a440601f",
    "cloneSize": 29
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/junit/TestOrderBy.java",
    "size": 821,
    "example": "n{\r\n\t\tinit();\r\n\t\tConnection con = AllTests.getConnection();\r\n\t\tStatement st = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);\r\n\t\tResultSet rs;\r\n\t\tint count;\r\n\t\t\r\n\t\trs = st.executeQuery(\"SELECT * FROM \" + table1 + \" ORDER  by i desc, d\");\r\n\t\t\r\n\t\t//jetzt irgendwo in die Mitte scrollen\r\n\t\trs.next();\r\n\t\trs.next();\r\n\t\trs.previous(); //dann soll der Zeiger nicht am Ende des bereits gefetchten stehen\r\n\t\t\r\n\t\trs.last();\r\n\t\tcount = 0;\r\n\t\twhile(rs.previous()) count++;\t\t\r\n\t\tassertEquals( valueCount, count );\r\n\r\n\t\trs.beforeFirst();\r\n\t\tcount = -1;\r\n\t\twhile(rs.next()) count++;\t\t\r\n\t\tassertEquals( valueCount, count );\r\n\r\n\t\trs.beforeFirst();\r\n\t\tcount = -1;\r\n\t\twhile(rs.next()) count++;\t\t\r\n\t\tassertEquals( valueCount, count );\r\n\t}",
    "cloneID": "d33fb9ecea78bf0d35ceb49f7fb09e6c",
    "clone": "f886e4643255a64e22868a67740e6349",
    "cloneSize": 29
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/junit/TestJoins.java",
    "size": 218,
    "example": " a(\"blob\"              , new byte[]{12, 45, 1},  new byte[]{12, 45, 2, 56, 89}),\r\n",
    "cloneID": "2ff8a9d64cef5dd4edbbf55256e1278f",
    "clone": "b5eb33ebe9fc4c7f75baa3aebf63ca81",
    "cloneSize": 1
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/junit/TestOperatoren.java",
    "size": 281,
    "example": " a(\"blob\"              , new byte[]{12, 45, 1},  new byte[]{12, 45, 2, 56, 89}),\r\n",
    "cloneID": "0f95336a0dc8fdb3cfdddbc9af3b5bc5",
    "clone": "b5eb33ebe9fc4c7f75baa3aebf63ca81",
    "cloneSize": 1
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/MutableNumeric.java",
    "size": 594,
    "example": " // simple Long Value\r\n                long temp = (((long)value[0]) << 32) | (value[1] & 0xFFFFFFFFL);",
    "cloneID": "4d243c76025bfc7af3073869c0f06692",
    "clone": "8ed5531aa38ee51bfb2bf3518fef2b6f",
    "cloneSize": 2
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/MutableNumeric.java",
    "size": 594,
    "example": " // simple Long Value\r\n                long temp = (((long)value[0]) << 32) | (value[1] & 0xFFFFFFFFL);",
    "cloneID": "0adf32d00f1597e267daffa574641786",
    "clone": "8ed5531aa38ee51bfb2bf3518fef2b6f",
    "cloneSize": 2
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/MutableNumeric.java",
    "size": 594,
    "example": " // simple Long Value\r\n                long temp = (((long)value[0]) << 32) | (value[1] & 0xFFFFFFFFL);",
    "cloneID": "123eaa5fde25c03779ffc90a8f9b91a9",
    "clone": "8ed5531aa38ee51bfb2bf3518fef2b6f",
    "cloneSize": 2
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/MutableNumeric.java",
    "size": 594,
    "example": " // simple Long Value\r\n                long temp = (((long)value[0]) << 32) | (value[1] & 0xFFFFFFFFL);",
    "cloneID": "cd95fb11db33c1b8c5e83e42addc5b83",
    "clone": "8ed5531aa38ee51bfb2bf3518fef2b6f",
    "cloneSize": 2
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/junit/TestTransactions.java",
    "size": 509,
    "example": "\tResultSet rs = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE)\r\n\t\t\t\t\t\t\t\t.executeQuery(\"Select * from transactions Where 1=0\");",
    "cloneID": "34732efd43db8255b537b5c4e58ff14a",
    "clone": "9653d12d835aa5392134dac0c48387a1",
    "cloneSize": 2
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/junit/TestTransactions.java",
    "size": 509,
    "example": "\tResultSet rs = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE)\r\n\t\t\t\t\t\t\t\t.executeQuery(\"Select * from transactions Where 1=0\");",
    "cloneID": "846edd8b8062330b4e8e7bfc134385bb",
    "clone": "9653d12d835aa5392134dac0c48387a1",
    "cloneSize": 2
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/StoreImpl.java",
    "size": 1548,
    "example": " StoreImpl store = table.getLobStore( ((TableStorePage)storePage).con, lobFilePos, SQLTokenizer.SELECT );\r\n",
    "cloneID": "69118ca39d001d1b727fc2933b848b25",
    "clone": "33d3cba38641fd835aba92c43ab880bf",
    "cloneSize": 1
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/StoreImpl.java",
    "size": 1548,
    "example": " StoreImpl store = table.getLobStore( ((TableStorePage)storePage).con, lobFilePos, SQLTokenizer.SELECT );\r\n",
    "cloneID": "2660ddee9e8cf41f29dca757ed464021",
    "clone": "33d3cba38641fd835aba92c43ab880bf",
    "cloneSize": 1
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/junit/BenchTest.java",
    "size": 753,
    "example": " java.io.FileOutputStream fos = new java.io.FileOutputStream(tableName+\".bin\");\r\n",
    "cloneID": "53765d47bf43f777468dbf88f67fa065",
    "clone": "09419dcd4f636c2b88a5e76963a2a3b8",
    "cloneSize": 1
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/junit/BenchTest.java",
    "size": 753,
    "example": " java.io.FileOutputStream fos = new java.io.FileOutputStream(tableName+\".bin\");\r\n",
    "cloneID": "55c442e30aa6450c1f7d74f7485bcadd",
    "clone": "09419dcd4f636c2b88a5e76963a2a3b8",
    "cloneSize": 1
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/SQLParser.java",
    "size": 2007,
    "example": "\ttry{\r\n\t\t\t\t\t\tint maxRows = Integer.parseInt(token.getName(sql));\r\n\t\t\t\t\t\tselCmd.setMaxRows(maxRows);\r\n\t\t\t\t\t}catch(NumberFormatException e){\r\n\t\t\t\t\t\tthrow createSyntaxError(token, Language.STXADD_NOT_NUMBER, token.getName(sql));\r\n\t\t\t\t\t}",
    "cloneID": "8a14a453eaea46ce5eb22d3d74947376",
    "clone": "499940eef492466881d5c42cb60f4d1d",
    "cloneSize": 6
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/SQLParser.java",
    "size": 2007,
    "example": " try{\r\n            int maxRows = Integer.parseInt(token.getName(sql));\r\n            selCmd.setMaxRows(maxRows);\r\n        }catch(NumberFormatException e){\r\n            throw createSyntaxError(token, Language.STXADD_NOT_NUMBER, token.getName(sql));\r\n        }",
    "cloneID": "14ece62b533637985e0cf901370c52a4",
    "clone": "33ccf74dbff7b18aeac1468cb542fd1b",
    "cloneSize": 6
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/SSDatabaseMetaData.java",
    "size": 1039,
    "example": "\tString[] colNames = {\"PROCEDURE_CAT\", \"PROCEDURE_SCHEM\", \"PROCEDURE_NAME\", \"COLUMN_NAME\", \"COLUMN_TYPE\", \"DATA_TYPE\", \"TYPE_NAME\", \"PRECISION\", \"LENGTH\", \"SCALE\", \"RADIX\", \"NULLABLE\", \"REMARKS\" };\r",
    "cloneID": "3c2616d646c397fdfb717dfbdf1417bd",
    "clone": "ce9065802b3e219c5603a1493a81b8a9",
    "cloneSize": 1
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/junit/TestDBMetaData.java",
    "size": 310,
    "example": " String[] colNames = {\"PROCEDURE_CAT\", \"PROCEDURE_SCHEM\", \"PROCEDURE_NAME\", \"COLUMN_NAME\", \"COLUMN_TYPE\", \"DATA_TYPE\", \"TYPE_NAME\", \"PRECISION\", \"LENGTH\", \"SCALE\", \"RADIX\", \"NULLABLE\", \"REMARKS\" };\r\n",
    "cloneID": "e515a4c0453df9a8abf145c1cd762ace",
    "clone": "a5a9200a09ba0aa1bff3d3b1e4398da5",
    "cloneSize": 1
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/junit/TestTransactions.java",
    "size": 509,
    "example": "y{\r\n\t\t\ttry{\r\n\t\t\t\tcon.createStatement().execute(\"Drop Table transactions\");\r\n\t\t\t}catch(Throwable e){e.printStackTrace();}\r\n\t\t}",
    "cloneID": "8edca73fc176bb0007b8207ddcf1d333",
    "clone": "3f47bc57d360171c82dc3fcefdaab04b",
    "cloneSize": 5
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/junit/TestTransactions.java",
    "size": 509,
    "example": "y{\r\n\t\t\ttry{\r\n\t\t\t\tcon.createStatement().execute(\"Drop Table transactions\");\r\n\t\t\t}catch(Throwable e){e.printStackTrace();}\r\n\t\t}",
    "cloneID": "d02fe974105d5979ae6d37ff082ed275",
    "clone": "3f47bc57d360171c82dc3fcefdaab04b",
    "cloneSize": 5
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/Index.java",
    "size": 547,
    "example": " if(i + 1 == count)\r\n                return page.getValue();\r\n            else\r\n                page = (IndexNode)page.getValue();",
    "cloneID": "cfade9b0a476244f6ff6c0a6a08e7cdd",
    "clone": "9f6aeccb20b95276edea068c3dcb0239",
    "cloneSize": 4
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/Index.java",
    "size": 547,
    "example": " if(i + 1 == count)\r\n                return page.getValue();\r\n            else\r\n                page = (IndexNode)page.getValue();",
    "cloneID": "09664b4260b218f9eff701a01c159ba6",
    "clone": "9f6aeccb20b95276edea068c3dcb0239",
    "cloneSize": 4
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/junit/TestOrderBy.java",
    "size": 821,
    "example": "){\r\n\t\t\toldValue = rs.getBoolean(\"b\");\r\n\t\t\tassertFalse(rs.wasNull());\r\n\t\t\tcount++;\r\n\t\t}",
    "cloneID": "3c1c169dea1eea1d27789c442981a9b2",
    "clone": "11ddb523b6aed473e3495413cf84a6e9",
    "cloneSize": 5
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/junit/TestOrderBy.java",
    "size": 821,
    "example": "){\r\n\t\t\toldValue = rs.getBoolean(\"b\");\r\n\t\t\tassertFalse(rs.wasNull());\r\n\t\t\tcount++;\r\n\t\t}",
    "cloneID": "5eea04ddbf96b6fe9f926b3ea5ea3e4e",
    "clone": "11ddb523b6aed473e3495413cf84a6e9",
    "cloneSize": 5
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/junit/TestOrderBy.java",
    "size": 821,
    "example": "\twhile(rs.next()){\r\n\t\t\tString newValue = rs.getString(\"v\");\r\n\t\t\tassertTrue( oldValue.compareTo( newValue ) < 0 );\r\n\t\t\toldValue = newValue;\r\n\t\t\tcount++;\r\n\t\t}",
    "cloneID": "becf9439c57a35bf843584e19b22645d",
    "clone": "2db34688a19253f3e6102c0990754a28",
    "cloneSize": 6
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/junit/TestOrderBy.java",
    "size": 821,
    "example": "\twhile(rs.next()){\r\n\t\t\tString newValue = rs.getString(\"v\");\r\n\t\t\tassertTrue( oldValue.compareTo( newValue ) < 0 );\r\n\t\t\toldValue = newValue;\r\n\t\t\tcount++;\r\n\t\t}",
    "cloneID": "3726e3cfe7658b209af37ee607e1ebeb",
    "clone": "2db34688a19253f3e6102c0990754a28",
    "cloneSize": 6
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/junit/TestOrderBy.java",
    "size": 821,
    "example": "\tif(newValue != null){\r\n\t\t\t\tassertTrue( oldValue.compareTo( newValue ) > 0 );\r\n\t\t\t\tcount++;\r\n\t\t\t}",
    "cloneID": "7c42191814a76f2f4f2dd6a23eb3a1dd",
    "clone": "4e04c795ecedff617eb147e6d7c93977",
    "cloneSize": 4
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/junit/TestOrderBy.java",
    "size": 821,
    "example": "\tif(newValue != null){\r\n\t\t\t\tassertTrue( oldValue.compareTo( newValue ) > 0 );\r\n\t\t\t\tcount++;\r\n\t\t\t}",
    "cloneID": "8f2aab4487bffb2b0fb55bf0b3a54522",
    "clone": "4e04c795ecedff617eb147e6d7c93977",
    "cloneSize": 4
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/junit/TestOrderBy.java",
    "size": 821,
    "example": "\tif(newValue != null){\r\n\t\t\t\tassertTrue( oldValue.compareTo( newValue ) > 0 );\r\n\t\t\t\tcount++;\r\n\t\t\t}",
    "cloneID": "fc5fb70b506b59ba6bc8b0059a068a50",
    "clone": "4e04c795ecedff617eb147e6d7c93977",
    "cloneSize": 4
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/junit/TestTransactions.java",
    "size": 509,
    "example": "\ttry{\r\n\t\t\t\tcon.createStatement().execute(\"Drop Table transactions\");\r\n\t\t\t}catch(Throwable e){e.printStackTrace();}",
    "cloneID": "af093e04d4a9d6605dd5ba0bfbf2972c",
    "clone": "c0747b92e1a8e0856591101fb2229b60",
    "cloneSize": 3
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/junit/TestTransactions.java",
    "size": 509,
    "example": "\ttry{\r\n\t\t\t\tcon.createStatement().execute(\"Drop Table transactions\");\r\n\t\t\t}catch(Throwable e){e.printStackTrace();}",
    "cloneID": "a6518d045b3f3ed9e0b7e070dfa317a3",
    "clone": "c0747b92e1a8e0856591101fb2229b60",
    "cloneSize": 3
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/junit/TestTransactions.java",
    "size": 509,
    "example": "\ttry{\r\n\t\t\t\tcon.createStatement().execute(\"Drop Table transactions\");\r\n\t\t\t}catch(Throwable e){e.printStackTrace();}",
    "cloneID": "b8ec8993951a34f9ddd06b940b802783",
    "clone": "c0747b92e1a8e0856591101fb2229b60",
    "cloneSize": 3
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/junit/TestTransactions.java",
    "size": 509,
    "example": "\ttry{\r\n\t\t\t\tcon.createStatement().execute(\"Drop Table transactions\");\r\n\t\t\t}catch(Throwable e){e.printStackTrace();}",
    "cloneID": "36983f7e2ae4ae5596a77d1844bb2745",
    "clone": "c0747b92e1a8e0856591101fb2229b60",
    "cloneSize": 3
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/junit/TestTransactions.java",
    "size": 509,
    "example": "\ttry{\r\n\t\t\t\tcon.createStatement().execute(\"Drop Table transactions\");\r\n\t\t\t}catch(Throwable e){e.printStackTrace();}",
    "cloneID": "cf09160946fe338dc5d13c851d2b0c2d",
    "clone": "c0747b92e1a8e0856591101fb2229b60",
    "cloneSize": 3
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/junit/TestTransactions.java",
    "size": 509,
    "example": "\ttry{\r\n\t\t\t\tcon.createStatement().execute(\"Drop Table transactions\");\r\n\t\t\t}catch(Throwable e){e.printStackTrace();}",
    "cloneID": "7ffb7c6634179d277c79bd21d4dea219",
    "clone": "c0747b92e1a8e0856591101fb2229b60",
    "cloneSize": 3
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/junit/TestTransactions.java",
    "size": 509,
    "example": "\ttry{\r\n\t\t\t\tcon.createStatement().execute(\"Drop Table transactions\");\r\n\t\t\t}catch(Throwable e){e.printStackTrace();}",
    "cloneID": "b17677d7dd043b8ff6762f41dc0c3857",
    "clone": "c0747b92e1a8e0856591101fb2229b60",
    "cloneSize": 3
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/junit/TestTransactions.java",
    "size": 509,
    "example": "\ttry{\r\n\t\t\t\tcon.createStatement().execute(\"Drop Table transactions\");\r\n\t\t\t}catch(Throwable e){e.printStackTrace();}",
    "cloneID": "622a2b2ea6ef8705f50adc2337aa3463",
    "clone": "c0747b92e1a8e0856591101fb2229b60",
    "cloneSize": 3
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/junit/TestTransactions.java",
    "size": 509,
    "example": "\ttry{\r\n\t\t\t\tcon.createStatement().execute(\"Drop Table transactions\");\r\n\t\t\t}catch(Throwable e){e.printStackTrace();}",
    "cloneID": "de0120c34d79419ef2e0c9d110392391",
    "clone": "c0747b92e1a8e0856591101fb2229b60",
    "cloneSize": 3
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/SSDatabaseMetaData.java",
    "size": 1039,
    "example": "\tString[] colNames = {\t\t\"TYPE_NAME\", \t\t\t\t\"DATA_TYPE\", \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"PRECISION\", \t\"LITERAL_PREFIX\", \"LITERAL_SUFFIX\", \t\t\"CREATE_PARAMS\", \"NULLABLE\", \t \"CASE_SENSITIVE\", \"SEARCHABLE\", \"UNSIGNED_ATTRIBUTE\", \"FIXED_PREC_SCALE\", \"AUTO_INCREMENT\", \"LOCAL_TYPE_NAME\", \"MINIMUM_SCALE\", \"MAXIMUM_SCALE\", \"SQL_DATA_TYPE\", \"SQL_DATETIME_SUB\", \"NUM_PREC_RADIX\"};\r",
    "cloneID": "9f357964356483b0a1c0f60bce026774",
    "clone": "68c09a0367b3016c1bac10515b34bc2f",
    "cloneSize": 1
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/junit/TestDBMetaData.java",
    "size": 310,
    "example": " String[] colNames = {\"TYPE_NAME\", \"DATA_TYPE\", \"PRECISION\", \"LITERAL_PREFIX\", \"LITERAL_SUFFIX\", \"CREATE_PARAMS\", \"NULLABLE\", \"CASE_SENSITIVE\", \"SEARCHABLE\", \"UNSIGNED_ATTRIBUTE\", \"FIXED_PREC_SCALE\", \"AUTO_INCREMENT\", \"LOCAL_TYPE_NAME\", \"MINIMUM_SCALE\", \"MAXIMUM_SCALE\", \"SQL_DATA_TYPE\", \"SQL_DATETIME_SUB\", \"NUM_PREC_RADIX\"};\r\n",
    "cloneID": "4a7e3a0816541123f5ae0c7367327ccd",
    "clone": "325ed4732f0b8a64c847f02c92587342",
    "cloneSize": 1
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/junit/TestJoins.java",
    "size": 218,
    "example": " a(\"varbinary(100)\"    , new byte[]{12, 45, 1},  new byte[]{12, 45, 2, 56, 89}),\r\n",
    "cloneID": "ac329b3f4b92b995529a67dd559ee3a7",
    "clone": "fdbcbee9ec64252c211e2f9e2267e245",
    "cloneSize": 1
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/junit/TestOperatoren.java",
    "size": 281,
    "example": " a(\"varbinary(100)\"    , new byte[]{12, 45, 1},  new byte[]{12, 45, 2, 56, 89}),\r\n",
    "cloneID": "4798d7f5e68850824f841bf4ea985a49",
    "clone": "fdbcbee9ec64252c211e2f9e2267e245",
    "cloneSize": 1
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/junit/TestOrderBy.java",
    "size": 821,
    "example": "n{\r\n\t\tinit();\r\n\t\tConnection con = AllTests.getConnection();\r\n\t\tStatement st = con.createStatement();\r\n\t\tResultSet rs;\r\n\t\tInteger oldValue;\r\n\t\t\r\n\t\trs = st.executeQuery(\"SELECT * FROM \" + table1 + \" ORDER  by i\");\r\n\t\t\r\n\t\tassertTrue( rs.next() );\r\n\t\t\r\n\t\toldValue = (Integer)rs.getObject(\"i\");\r\n\t\tassertNull(oldValue);\r\n\t\tassertTrue( rs.next() );\r\n\t\toldValue = (Integer)rs.getObject(\"i\");\r\n\t\t\r\n\t\tint count = 1;\r\n\t\twhile(rs.next()){\r\n\t\t\tassertTrue( oldValue.compareTo( (Integer)rs.getObject(\"i\") ) < 0 );\r\n\t\t\toldValue = (Integer)rs.getObject(\"i\");\r\n\t\t\tcount++;\r\n\t\t}\r\n\t\tassertEquals( valueCount, count );\r\n\t}",
    "cloneID": "954aa8fdffa6aa85799195604e1e14b0",
    "clone": "6e0b048e5ce1a09c77bb6c056f588ef2",
    "cloneSize": 24
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/junit/TestOrderBy.java",
    "size": 821,
    "example": "n{\r\n\t\tinit();\r\n\t\tConnection con = AllTests.getConnection();\r\n\t\tStatement st = con.createStatement();\r\n\t\tResultSet rs;\r\n\t\tInteger oldValue;\r\n\t\t\r\n\t\trs = st.executeQuery(\"SELECT * FROM \" + table1 + \" ORDER  by i Asc\");\r\n\t\t\r\n\t\tassertTrue( rs.next() );\r\n\t\t\r\n\t\toldValue = (Integer)rs.getObject(\"i\");\r\n\t\tassertNull(oldValue);\r\n\t\tassertTrue( rs.next() );\r\n\t\toldValue = (Integer)rs.getObject(\"i\");\r\n\t\t\r\n\t\tint count = 1;\r\n\t\twhile(rs.next()){\r\n\t\t\tassertTrue( oldValue.compareTo( (Integer)rs.getObject(\"i\") ) < 0 );\r\n\t\t\toldValue = (Integer)rs.getObject(\"i\");\r\n\t\t\tcount++;\r\n\t\t}\r\n\t\tassertEquals( valueCount, count );\r\n\t}",
    "cloneID": "b4a990eb5231e941b80a05ff2b2f21fa",
    "clone": "3498e359e6749775db0f64fb9d8f5ffe",
    "cloneSize": 24
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/junit/BenchTest.java",
    "size": 753,
    "example": " if (count != rowCount)\r\n                System.out.println( \"  Failed: Only \" + count + \" rows were inserted.\");\r\n            else System.out.println( \"  Test time: \" + time + \" ms\");",
    "cloneID": "d63ebc469e26922f3b4c41553d5d3a26",
    "clone": "8973205b3f124e41875bdebaf4a51c25",
    "cloneSize": 3
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/junit/BenchTest.java",
    "size": 753,
    "example": " if (count != rowCount)\r\n                 System.out.println( \"  Failed: Only \" + count + \" rows were inserted.\");\r\n            else System.out.println( \"  Test time: \" + time + \" ms\");",
    "cloneID": "43b389212b0a49bda192527a03d61a5b",
    "clone": "ddf6d05c55a12875fa5c235ecd250cf5",
    "cloneSize": 3
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/junit/BenchTest.java",
    "size": 753,
    "example": " if (count != rowCount)\r\n                 System.out.println( \"  Failed: Only \" + count + \" rows were updated.\");\r\n            else System.out.println( \"  Test time: \" + time + \" ms\");",
    "cloneID": "af700abd2e2f06620b31990377909918",
    "clone": "00af1091194aff30f81b72f059574f6c",
    "cloneSize": 3
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/IndexScrollStatus.java",
    "size": 186,
    "example": "\tif(status.nodeValue != null){\r\n\t\t\t\t\t\tif(status.nodeValue instanceof IndexNode){\r\n\t\t\t\t\t\t\tlevel++;\r\n\t\t\t\t\t\t\tnodeStack.push(\r\n\t\t\t\t\t\t\t\tnew IndexNodeScrollStatus( \t(IndexNode)status.nodeValue, \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(expressions.get(level).getAlias() != SQLTokenizer.DESC_STR), \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tscroll, level));\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t}else\r\n\t\t\t\t\t\t\treturn getReturnValue(status.nodeValue);\r\n\t\t\t\t\t}",
    "cloneID": "961e461a61fd8b090bc32c6fc507a764",
    "clone": "432fbd19fd29d3850f83279779753bf2",
    "cloneSize": 11
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/IndexScrollStatus.java",
    "size": 186,
    "example": "\tif(status.nodeValue != null){\r\n\t\t\t\t\t\tif(status.nodeValue instanceof IndexNode){\r\n\t\t\t\t\t\t\tlevel++;\r\n\t\t\t\t\t\t\tnodeStack.push(\r\n\t\t\t\t\t\t\t\tnew IndexNodeScrollStatus( \t(IndexNode)status.nodeValue, \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(expressions.get(level).getAlias() != SQLTokenizer.DESC_STR), \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tscroll, level));\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t}else\r\n\t\t\t\t\t\t\treturn getReturnValue(status.nodeValue);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//There is no RowOffset in this node",
    "cloneID": "8d981ca26ce942ed6b3d2f3da8e72969",
    "clone": "010889ea578bee555449b67e66fb8fa0",
    "cloneSize": 12
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/SQLParser.java",
    "size": 2007,
    "example": " if(token2 != null && token2.value == SQLTokenizer.POINT){\r\n                            expr.setNameAfterTableAlias( nextIdentifier() );\r\n                        }else{\r\n                            previousToken();\r\n                        }",
    "cloneID": "681fc31426e2b92158a093cee194b1a1",
    "clone": "ee50936f10c2ae8c5b2c5c24cfd24433",
    "cloneSize": 5
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/SQLParser.java",
    "size": 2007,
    "example": " if(token2 != null && token2.value == SQLTokenizer.POINT){\r\n                                    expr.setNameAfterTableAlias( nextIdentifier() );\r\n                                }else{\r\n                                    previousToken();\r\n                                }",
    "cloneID": "f6448ceefd531344e8381ecb7a83a98b",
    "clone": "90d3a5eedcea8c6c7a7205a40d8ea68c",
    "cloneSize": 5
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunctionReturnP1StringAndBinary.java",
    "size": 91,
    "example": "\tfinal long getMoney() throws Exception {\r\n\t\tif(isNull()) return 0;\r\n\t\treturn Money.parseMoney(getString().trim());\r\n\t}",
    "cloneID": "f59261220f310cfc957d27801c29838c",
    "clone": "4e540f285cf04361b2ca57390a87554e",
    "cloneSize": 4
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunctionReturnString.java",
    "size": 93,
    "example": "\tfinal long getMoney() throws Exception {\r\n\t\tif(isNull()) return 0;\r\n\t\treturn Money.parseMoney(getString().trim());\r\n\t}",
    "cloneID": "18247012c793c8373edaa9c5727f450a",
    "clone": "4e540f285cf04361b2ca57390a87554e",
    "cloneSize": 4
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/junit/BenchTest.java",
    "size": 753,
    "example": " java.io.FileInputStream fis = new java.io.FileInputStream(tableName+\".bin\");\r\n",
    "cloneID": "ce13d433ff0b46930cd9bdf636551621",
    "clone": "eb1ee4b6b846958590e62c10e85b2876",
    "cloneSize": 1
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/junit/BenchTest.java",
    "size": 753,
    "example": " java.io.FileInputStream fis = new java.io.FileInputStream(tableName+\".bin\");\r\n",
    "cloneID": "ab76b400545c83945dca40b6f5ace4c3",
    "clone": "eb1ee4b6b846958590e62c10e85b2876",
    "cloneSize": 1
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunctionAbs.java",
    "size": 111,
    "example": "n{\r\n        Object obj = getObject();\r\n        if(obj == null) return null;\r\n        return obj.toString();\r\n    }",
    "cloneID": "4f0253cf6d088077c98541449ff4480a",
    "clone": "07d1e2e54fc442f208dd53ebe3aeb5ab",
    "cloneSize": 5
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunctionFloor.java",
    "size": 53,
    "example": "n{\r\n        Object obj = getObject();\r\n        if(obj == null) return null;\r\n        return obj.toString();\r\n    }",
    "cloneID": "a242e7d0eeafa3f7f10337e9f877fa5b",
    "clone": "07d1e2e54fc442f208dd53ebe3aeb5ab",
    "cloneSize": 5
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunctionReturnFloat.java",
    "size": 87,
    "example": "n{\r\n        Object obj = getObject();\r\n        if(obj == null) return null;\r\n        return obj.toString();\r\n    }",
    "cloneID": "4255d711cb89871cea6203ff2b3ad496",
    "clone": "07d1e2e54fc442f208dd53ebe3aeb5ab",
    "cloneSize": 5
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/junit/BenchTest.java",
    "size": 753,
    "example": " java.io.File file = new java.io.File(tableName+\".bin\");\r\n",
    "cloneID": "e8fae5f9b995b1128b1c6bea65e01269",
    "clone": "ce455c7b740c1757ea8969d877a360f6",
    "cloneSize": 1
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/junit/BenchTest.java",
    "size": 753,
    "example": " java.io.File file = new java.io.File(tableName+\".bin\");\r\n",
    "cloneID": "9af12d07e150ab7e19123e4bd730e944",
    "clone": "ce455c7b740c1757ea8969d877a360f6",
    "cloneSize": 1
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/MutableNumeric.java",
    "size": 594,
    "example": " // simple Long Value\r\n                long temp = (((long)value[0]) << 32) | (value[1] & 0xFFFFFFFFL);",
    "cloneID": "4d243c76025bfc7af3073869c0f06692",
    "clone": "8ed5531aa38ee51bfb2bf3518fef2b6f",
    "cloneSize": 2
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/MutableNumeric.java",
    "size": 594,
    "example": " // simple Long Value\r\n                long temp = (((long)value[0]) << 32) | (value[1] & 0xFFFFFFFFL);",
    "cloneID": "0adf32d00f1597e267daffa574641786",
    "clone": "8ed5531aa38ee51bfb2bf3518fef2b6f",
    "cloneSize": 2
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/MutableNumeric.java",
    "size": 594,
    "example": " // simple Long Value\r\n                long temp = (((long)value[0]) << 32) | (value[1] & 0xFFFFFFFFL);",
    "cloneID": "123eaa5fde25c03779ffc90a8f9b91a9",
    "clone": "8ed5531aa38ee51bfb2bf3518fef2b6f",
    "cloneSize": 2
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/MutableNumeric.java",
    "size": 594,
    "example": " // simple Long Value\r\n                long temp = (((long)value[0]) << 32) | (value[1] & 0xFFFFFFFFL);",
    "cloneID": "cd95fb11db33c1b8c5e83e42addc5b83",
    "clone": "8ed5531aa38ee51bfb2bf3518fef2b6f",
    "cloneSize": 2
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/junit/TestJoins.java",
    "size": 218,
    "example": " a(\"longvarbinary\"     , new byte[]{12, 45, 1},  new byte[]{12, 45, 2, 56, 89}),\r\n",
    "cloneID": "780c7793334b2807374fc254709a3603",
    "clone": "43d24d59eab9d95c048d3ed79c305848",
    "cloneSize": 1
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/junit/TestOperatoren.java",
    "size": 281,
    "example": " a(\"longvarbinary\"     , new byte[]{12, 45, 1},  new byte[]{12, 45, 2, 56, 89}),\r\n",
    "cloneID": "932b10df3fee78fca6d01d1c2d98be76",
    "clone": "43d24d59eab9d95c048d3ed79c305848",
    "cloneSize": 1
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/junit/BenchTest.java",
    "size": 753,
    "example": " for(int i=0; i<rowCount; i++){\r\n                fos.write(bytes);\r\n            }",
    "cloneID": "23978015d0a2ec35730105038aa1f4d1",
    "clone": "4acbc2689346701780331b8db4a69911",
    "cloneSize": 3
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/junit/BenchTest.java",
    "size": 753,
    "example": " for(int i=0; i<rowCount; i++){\r\n                fos.write(bytes);\r\n            }",
    "cloneID": "19176cd6dd02b75407aaed3987a3ee51",
    "clone": "4acbc2689346701780331b8db4a69911",
    "cloneSize": 3
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/SSCallableStatement.java",
    "size": 405,
    "example": " {\r\n        try{\r\n            Expression expr = getValue(i);\r\n            wasNull = expr.isNull();\r\n            return expr.getLong();\r\n        }catch(Exception e){\r\n            throw SmallSQLException.createFromException( e );\r\n        }\r\n    }",
    "cloneID": "bc998569dc3a91a15f5022724e079c0c",
    "clone": "51492e324720ee35664c790a62e4b2d2",
    "cloneSize": 9
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/SSCallableStatement.java",
    "size": 405,
    "example": " {\r\n        try{\r\n            Expression expr = getValue(i);\r\n            wasNull = expr.isNull();\r\n            return expr.getLong();\r\n        }catch(Exception e){\r\n            throw SmallSQLException.createFromException( e );\r\n        }\r\n    }",
    "cloneID": "2fa132f8b5ff24fd10e5dcc990859beb",
    "clone": "51492e324720ee35664c790a62e4b2d2",
    "cloneSize": 9
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/MutableNumeric.java",
    "size": 594,
    "example": "\tif(num.scale < scale){\r\n\t\t\tnum.setScale(scale);\r\n\t\t}else\r\n\t\tif(num.scale > scale){\r\n\t\t\tsetScale(num.scale);\r\n\t\t}",
    "cloneID": "ccdc6bb4b534c73732784b2098d586ad",
    "clone": "3f7aa2c3e3af750b6dfd4259d3e31af8",
    "cloneSize": 6
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/MutableNumeric.java",
    "size": 594,
    "example": "\tif(num.scale < scale){\r\n\t\t\tnum.setScale(scale);\r\n\t\t}else\r\n\t\tif(num.scale > scale){\r\n\t\t\tsetScale(num.scale);\r\n\t\t}",
    "cloneID": "651871f2890df11bdd14b5860399a707",
    "clone": "3f7aa2c3e3af750b6dfd4259d3e31af8",
    "cloneSize": 6
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/junit/BasicTestCase.java",
    "size": 373,
    "example": "){\r\n        try{\r\n            return Double.parseDouble( val ) != 0;\r\n        }catch(NumberFormatException e){/*ignore it if it not a number*/}\r\n        return \"true\".equalsIgnoreCase( val ) || \"yes\".equalsIgnoreCase( val ) || \"t\".equalsIgnoreCase( val );\r\n    }",
    "cloneID": "4224b4c61f7e0502218266d829e67cdf",
    "clone": "dfd6ae2867c64b0bb297491598c2e7b3",
    "cloneSize": 6
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/Utils.java",
    "size": 477,
    "example": "){\r\n        try{\r\n            return Double.parseDouble( val ) != 0;\r\n        }catch(NumberFormatException e){/*ignore it if it not a number*/}\r\n        return \"true\".equalsIgnoreCase( val ) || \"yes\".equalsIgnoreCase( val ) || \"t\".equalsIgnoreCase( val );\r\n    }",
    "cloneID": "3c486a6550a723de0399b6a4e583ee12",
    "clone": "dfd6ae2867c64b0bb297491598c2e7b3",
    "cloneSize": 6
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/StoreImpl.java",
    "size": 1548,
    "example": "\tthrow SmallSQLException.create(Language.VALUE_CANT_CONVERT, new Object[] { SQLTokenizer.getKeyWord(dataType), \"NUMERIC\" });\r\n",
    "cloneID": "e8d8122fdbb0a4e4f74e2f6f622e26d5",
    "clone": "3eec9c67404917443647d295eee6cf65",
    "cloneSize": 1
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/StoreImpl.java",
    "size": 1548,
    "example": " throw SmallSQLException.create(Language.VALUE_CANT_CONVERT, new Object[] { SQLTokenizer.getKeyWord(dataType), \"NUMERIC\" });\r\n",
    "cloneID": "f11554fa40957d483f02a571954d2ea2",
    "clone": "2bff0b7032b4d5a3cc499af440e70c89",
    "cloneSize": 1
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunctionAbs.java",
    "size": 111,
    "example": " String getString() throws Exception{\r\n        Object obj = getObject();\r\n        if(obj == null) return null;\r\n        return obj.toString();\r\n    }",
    "cloneID": "4f0253cf6d088077c98541449ff4480a",
    "clone": "b4b440c62ffad9398d2ef50237d41dad",
    "cloneSize": 5
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunctionFloor.java",
    "size": 53,
    "example": " String getString() throws Exception{\r\n        Object obj = getObject();\r\n        if(obj == null) return null;\r\n        return obj.toString();\r\n    }",
    "cloneID": "a242e7d0eeafa3f7f10337e9f877fa5b",
    "clone": "b4b440c62ffad9398d2ef50237d41dad",
    "cloneSize": 5
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/GroupResult.java",
    "size": 254,
    "example": "e{\r\n\t\t\tint idx = internalExpressions.indexOf(expr);\r\n\t\t\tif(idx >= 0) return idx;\r\n\t\t\tinternalExpressions.add(expr);\r\n\t\t\treturn internalExpressions.size()-1;\r\n\t\t}",
    "cloneID": "0c24b2f6f25b094a437757bed1566821",
    "clone": "0fc3150d715e628ed5edbc6ab26800db",
    "cloneSize": 6
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/GroupResult.java",
    "size": 254,
    "example": "){\r\n\t\t\tint idx = internalExpressions.indexOf(expr);\r\n\t\t\tif(idx >= 0) return idx;\r\n\t\t\tinternalExpressions.add(expr);\r\n\t\t\treturn internalExpressions.size()-1;\r\n\t\t}",
    "cloneID": "518b99f7ed09cb9c747a6bf158c504c5",
    "clone": "c6c22044097aaf7b46a7ff72a8acc65e",
    "cloneSize": 6
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/junit/TestJoins.java",
    "size": 218,
    "example": " private static TestValue a(String dataType, Object small, Object large){\r\n        TestValue value = new TestValue();\r\n        value.dataType  = dataType;\r\n        value.small     = small;\r\n        value.large     = large;\r\n        return value;\r\n    }",
    "cloneID": "b361747a05f2fd2cbf669e7e5aecce7a",
    "clone": "46b30690221e9344f23263fa6f0b23fe",
    "cloneSize": 7
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/junit/TestOperatoren.java",
    "size": 281,
    "example": " private static TestValue a(String dataType, Object small, Object large){\r\n        TestValue value = new TestValue();\r\n        value.dataType  = dataType;\r\n        value.small     = small;\r\n        value.large     = large;\r\n        return value;\r\n    }",
    "cloneID": "a8f7a7d9c1b5dffa3238a3ebeddf919f",
    "clone": "46b30690221e9344f23263fa6f0b23fe",
    "cloneSize": 7
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/junit/TestJoins.java",
    "size": 218,
    "example": " a(\"long raw\"          , new byte[]{12, 45, 1},  new byte[]{12, 45, 2, 56, 89}),\r\n",
    "cloneID": "ea2075ecc5153fb4a76d40e34ddd82cb",
    "clone": "48fe7e9e5996e30ca8cd18e50709f6e5",
    "cloneSize": 1
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/junit/TestOperatoren.java",
    "size": 281,
    "example": " a(\"long raw\"          , new byte[]{12, 45, 1},  new byte[]{12, 45, 2, 56, 89}),\r\n",
    "cloneID": "d0d1691dac72be8bdbf56888f777bb5d",
    "clone": "48fe7e9e5996e30ca8cd18e50709f6e5",
    "cloneSize": 1
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/junit/TestThreads.java",
    "size": 177,
    "example": " // wait until all threads are finish\r\n        for(int i = 0; i < threadList.size(); i++){\r\n            Thread thread = (Thread)threadList.get(i);\r\n            thread.join(5000);\r\n        }",
    "cloneID": "a0747245298a7e0597c0c88e5734fbb9",
    "clone": "61ef272791085776d8af586716e6fab9",
    "cloneSize": 5
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/junit/TestThreads.java",
    "size": 177,
    "example": " // wait until all threads are finish\r\n            for(int i = 0; i < threadList.size(); i++){\r\n                Thread thread = (Thread)threadList.get(i);\r\n                thread.join(5000);\r\n            }",
    "cloneID": "743847bdda8b90105d9de7c0231ca618",
    "clone": "b022ba7ba87faf938a6650fc476540c3",
    "cloneSize": 5
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/junit/TestThreads.java",
    "size": 177,
    "example": " // wait until all threads are finish\r\n            for(int i = 0; i < threadList.size(); i++){\r\n                Thread thread = (Thread)threadList.get(i);\r\n                thread.join(5000);\r\n            }",
    "cloneID": "6c09c8f63fd8898d1fd6e18326b0ae24",
    "clone": "b022ba7ba87faf938a6650fc476540c3",
    "cloneSize": 5
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/SSDatabaseMetaData.java",
    "size": 1039,
    "example": "\tString[] colNames = {\"TABLE_CAT\",\"TABLE_SCHEM\",\"TABLE_NAME\",\"TABLE_TYPE\",\"REMARKS\",\"TYPE_CAT\",\"TYPE_SCHEM\",\"TYPE_NAME\",\"SELF_REFERENCING_COL_NAME\",\"REF_GENERATION\"};\r",
    "cloneID": "e69040378e9be8c0199c010dbd960cc8",
    "clone": "1c40c8d6bf5a944293033b0368421dba",
    "cloneSize": 1
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/junit/TestDBMetaData.java",
    "size": 310,
    "example": " String[] colNames = {\"TABLE_CAT\",\"TABLE_SCHEM\",\"TABLE_NAME\",\"TABLE_TYPE\",\"REMARKS\",\"TYPE_CAT\",\"TYPE_SCHEM\",\"TYPE_NAME\",\"SELF_REFERENCING_COL_NAME\",\"REF_GENERATION\"};\r\n",
    "cloneID": "a6ffeba170cf6676b91999d4b884dc1f",
    "clone": "bd93495edf3bfdc6d809649b80776e47",
    "cloneSize": 1
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunctionBitLen.java",
    "size": 64,
    "example": "\tfinal int getInt() throws Exception {\r\n        if(isNull()) return 0;\r\n\r\n        String str = param1.getString();\r\n\t\t\r\n\t\treturn str.length() * BYTES_PER_CHAR * 8;\r\n\t}",
    "cloneID": "1ad2492506cb7e96920c6bd0dd80c356",
    "clone": "c6d8c300b68f29e6629a1376a45c629d",
    "cloneSize": 7
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunctionOctetLen.java",
    "size": 64,
    "example": "\tfinal int getInt() throws Exception {\r\n        if(isNull()) return 0;\r\n\r\n        String str = param1.getString();\r\n\t\t\r\n\t\treturn str.length() * BYTES_PER_CHAR;\r\n\t}",
    "cloneID": "23d749211983f6c4a3ad942abe7628fb",
    "clone": "1da9d552dc9e5fcf9d1ace8d347d08c0",
    "cloneSize": 7
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunctionReturnP1StringAndBinary.java",
    "size": 91,
    "example": "\tfinal long getLong() throws Exception {\r\n\t\tif(isNull()) return 0;\r\n\t\treturn Long.parseLong(getString().trim());\r\n\t}",
    "cloneID": "fa27ade43ee99e004788ef2ce163c190",
    "clone": "d706cdbe2cd95c02d973558e518e7240",
    "cloneSize": 4
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunctionReturnString.java",
    "size": 93,
    "example": "\tfinal long getLong() throws Exception {\r\n\t\tif(isNull()) return 0;\r\n\t\treturn Long.parseLong(getString().trim());\r\n\t}",
    "cloneID": "c96885530da4e2b03a2bca024e3d7391",
    "clone": "d706cdbe2cd95c02d973558e518e7240",
    "cloneSize": 4
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/SSResultSet.java",
    "size": 935,
    "example": "\tif(st.con.log.isLogging()){\r\n\t\t\t\r\n\t\t\tst.con.log.println(\"parameter '\"+metaData.getColumnName(columnIndex)+\"' = \"+x+\"; type=\"+dataType);\r\n\t\t}",
    "cloneID": "f1dbc882972caa44c7e0d1cb7e210ba5",
    "clone": "a89a87304f4265f4c66cd576e894c091",
    "cloneSize": 4
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/SSResultSet.java",
    "size": 935,
    "example": "\tif(st.con.log.isLogging()){\r\n\t\t\tst.con.log.println(\"parameter '\"+metaData.getColumnName(columnIndex)+\"' = \"+x+\"; type=\"+dataType+\"; length=\"+length);\r\n\t\t}",
    "cloneID": "e5429b55b6fa934551fadeffe2eb95e3",
    "clone": "edce35112e7a169a41126c5c1c451d6c",
    "cloneSize": 3
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/LongTreeList.java",
    "size": 623,
    "example": "\tif(listEnum.stack>=3){\r\n\t\t\t\t\tlistEnum.offsetStack[listEnum.stack] = offset;\r\n\t\t\t\t\treturn result;\r\n\t\t\t\t}",
    "cloneID": "30127ddbfc0fce8f8a4676c9dde74388",
    "clone": "69732e22d1f4fc5bbf61634d9c6cff57",
    "cloneSize": 4
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/LongTreeList.java",
    "size": 623,
    "example": "\tif(listEnum.stack>=3){\r\n\t\t\t\t\tlistEnum.offsetStack[listEnum.stack] = offset;\r\n\t\t\t\t\treturn result;\r\n\t\t\t\t}",
    "cloneID": "934ca6caccbe0a61e5a195763f80f512",
    "clone": "69732e22d1f4fc5bbf61634d9c6cff57",
    "cloneSize": 4
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/SSDatabaseMetaData.java",
    "size": 1039,
    "example": "\tString[] colNames = {\"TABLE_CAT\", \"TABLE_SCHEM\", \"TABLE_NAME\", \"COLUMN_NAME\", \"DATA_TYPE\", \"TYPE_NAME\", \"COLUMN_SIZE\", \"BUFFER_LENGTH\", \"DECIMAL_DIGITS\", \"NUM_PREC_RADIX\", \"NULLABLE\", \"REMARKS\", \"COLUMN_DEF\", \"SQL_DATA_TYPE\", \"SQL_DATETIME_SUB\", \"CHAR_OCTET_LENGTH\", \"ORDINAL_POSITION\", \"IS_NULLABLE\"};\r\n",
    "cloneID": "916c9e376b29cecd013cd98b73e89f33",
    "clone": "a4ffe9cdb5fdf72f43144af803b7d6ec",
    "cloneSize": 1
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/junit/TestDBMetaData.java",
    "size": 310,
    "example": " String[] colNames = {\"TABLE_CAT\", \"TABLE_SCHEM\", \"TABLE_NAME\", \"COLUMN_NAME\", \"DATA_TYPE\", \"TYPE_NAME\", \"COLUMN_SIZE\", \"BUFFER_LENGTH\", \"DECIMAL_DIGITS\", \"NUM_PREC_RADIX\", \"NULLABLE\", \"REMARKS\", \"COLUMN_DEF\", \"SQL_DATA_TYPE\", \"SQL_DATETIME_SUB\", \"CHAR_OCTET_LENGTH\", \"ORDINAL_POSITION\", \"IS_NULLABLE\"};\r\n",
    "cloneID": "06f0df4b2f78d4520479eba726d6734c",
    "clone": "b5a3f6f3ce96969a0728d9f3e6ceac94",
    "cloneSize": 1
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/Utils.java",
    "size": 477,
    "example": " for(int i=0; i<length; i++){\r\n            result = (result << 8) | (bytes[i] & 0xFF);\r\n        }",
    "cloneID": "3549dfb972e7769cc1a257d549731446",
    "clone": "fa1307e373ccbd650d65e88c4f3167d3",
    "cloneSize": 3
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/Utils.java",
    "size": 477,
    "example": " for(int i=0; i<length; i++){\r\n            result = (result << 8) | (bytes[i] & 0xFF);\r\n        }",
    "cloneID": "d6fdfe134cff3bbcda47e9a20b79baf8",
    "clone": "fa1307e373ccbd650d65e88c4f3167d3",
    "cloneSize": 3
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/CommandInsert.java",
    "size": 191,
    "example": "){\r\n                            keyColumnNames.add(column.getName());\r\n                            keys.add(valueExpress.getObject());\r\n                            break;\r\n                        }",
    "cloneID": "180e6b325d82cc7abd5fc38b018d09bd",
    "clone": "a8bf31ca8f01880a738a9833262809f9",
    "cloneSize": 5
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/CommandInsert.java",
    "size": 191,
    "example": "){\r\n                            keyColumnNames.add(column.getName());\r\n                            keys.add(valueExpress.getObject());\r\n                            break;\r\n                        }",
    "cloneID": "f9428a0de7dc155632e1ac1c29fb99c1",
    "clone": "a8bf31ca8f01880a738a9833262809f9",
    "cloneSize": 5
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/junit/TestJoins.java",
    "size": 218,
    "example": " a(\"timestamp\"         , new Timestamp(99, 1,1,0,0,0,0),      new Timestamp(99, 2,2,0,0,0,0)),\r\n",
    "cloneID": "c8f7245d439e0f044da3fca55ab1fcdf",
    "clone": "bde72063cc82fb722164b9c7ed2ac903",
    "cloneSize": 1
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/junit/TestOperatoren.java",
    "size": 281,
    "example": " a(\"timestamp\"         , new Timestamp(99, 1,1,0,0,0,0),      new Timestamp(99, 2,2,0,0,0,0)),\r\n",
    "cloneID": "4415e1eb68af013a675c83f5574818ba",
    "clone": "bde72063cc82fb722164b9c7ed2ac903",
    "cloneSize": 1
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/DataSources.java",
    "size": 62,
    "example": "){\r\n\t\tif (idx >= size)\r\n\t\t\tthrow new IndexOutOfBoundsException(\"Index: \"+idx+\", Size: \"+size);\r\n\t\treturn data[idx];\r\n\t}",
    "cloneID": "2e5ad2b7e70c408b38b3b4ebe1b1b1ad",
    "clone": "101d9d33db3f5959f2a1719fddd887cc",
    "cloneSize": 5
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/LongList.java",
    "size": 86,
    "example": "){\r\n\t\tif (idx >= size)\r\n\t\t\tthrow new IndexOutOfBoundsException(\"Index: \"+idx+\", Size: \"+size);\r\n\t\treturn data[idx];\r\n\t}",
    "cloneID": "778d4ea4bcea365c7a9babe073677cb1",
    "clone": "101d9d33db3f5959f2a1719fddd887cc",
    "cloneSize": 5
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/Expressions.java",
    "size": 135,
    "example": "){\r\n\t\tif (idx >= size)\r\n\t\t\tthrow new IndexOutOfBoundsException(\"Index: \"+idx+\", Size: \"+size);\r\n\t\treturn data[idx];\r\n\t}",
    "cloneID": "7f756ab6dcc97a8dcc448a0041777ad2",
    "clone": "101d9d33db3f5959f2a1719fddd887cc",
    "cloneSize": 5
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/Table.java",
    "size": 568,
    "example": "\tif(serializeConnections.size() > 0){\r\n\t\t\t\t\t\t\tIterator values = locks.values().iterator();\r\n\t\t\t\t\t\t\twhile(values.hasNext()){\r\n\t\t\t\t\t\t\t\tTableStorePage lock = (TableStorePage)values.next();\r\n\t\t\t\t\t\t\t\tif(lock.con != con) return null;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}",
    "cloneID": "7b8f209959a2aa42057a8f2edc1e114e",
    "clone": "fdafe0bfbd97edd5994c1d4806eb9955",
    "cloneSize": 7
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/Table.java",
    "size": 568,
    "example": " if(serializeConnections.size() > 0){\r\n                        Iterator values = locks.values().iterator();\r\n                        while(values.hasNext()){\r\n                            TableStorePage lock = (TableStorePage)values.next();\r\n                            if(lock.con != con) return null;\r\n                        }\r\n                    }",
    "cloneID": "28c0f48e7770d1b385a9e64a456de248",
    "clone": "4904c60325062f928232ddde0b7fa99b",
    "cloneSize": 7
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/junit/BenchTest.java",
    "size": 753,
    "example": " java.io.FileOutputStream fos = new java.io.FileOutputStream(tableName+\".bin\");\r\n",
    "cloneID": "53765d47bf43f777468dbf88f67fa065",
    "clone": "09419dcd4f636c2b88a5e76963a2a3b8",
    "cloneSize": 1
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/junit/BenchTest.java",
    "size": 753,
    "example": " java.io.FileOutputStream fos = new java.io.FileOutputStream(tableName+\".bin\");\r\n",
    "cloneID": "55c442e30aa6450c1f7d74f7485bcadd",
    "clone": "09419dcd4f636c2b88a5e76963a2a3b8",
    "cloneSize": 1
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/IndexNode.java",
    "size": 451,
    "example": "\tvalue = (unique) ? (Object)new Long(rowOffset) : new LongTreeList(rowOffset);\r",
    "cloneID": "ba0b3d634e96f07dcae1b5832b5aa3a3",
    "clone": "3bc23895a271296c74ad466770c56d81",
    "cloneSize": 1
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/IndexNode.java",
    "size": 451,
    "example": "\tvalue = (unique) ? (Object)new Long(rowOffset) : new LongTreeList(rowOffset);\r",
    "cloneID": "63cd645c945401b10dda00345b27fa3d",
    "clone": "3bc23895a271296c74ad466770c56d81",
    "cloneSize": 1
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/junit/TestJoins.java",
    "size": 218,
    "example": " private static class TestValue{\r\n        String dataType;\r\n        Object small;\r\n        Object large;\r\n    }",
    "cloneID": "18704c77645412d4cbf21a6c9ba95bc2",
    "clone": "a2a43897b1ea8ca268bcedaf5ca2d093",
    "cloneSize": 5
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/junit/TestOperatoren.java",
    "size": 281,
    "example": " private static class TestValue{\r\n        String dataType;\r\n        Object small;\r\n        Object large;\r\n    }",
    "cloneID": "eafcf69d69fdcb8dc49976402c98cdad",
    "clone": "a2a43897b1ea8ca268bcedaf5ca2d093",
    "cloneSize": 5
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/junit/BenchTest.java",
    "size": 753,
    "example": " java.io.FileInputStream fis = new java.io.FileInputStream(tableName+\".bin\");\r\n",
    "cloneID": "ce13d433ff0b46930cd9bdf636551621",
    "clone": "eb1ee4b6b846958590e62c10e85b2876",
    "cloneSize": 1
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/junit/BenchTest.java",
    "size": 753,
    "example": " java.io.FileInputStream fis = new java.io.FileInputStream(tableName+\".bin\");\r\n",
    "cloneID": "ab76b400545c83945dca40b6f5ace4c3",
    "clone": "eb1ee4b6b846958590e62c10e85b2876",
    "cloneSize": 1
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/junit/TestMoneyRounding.java",
    "size": 112,
    "example": "n{\r\n            Connection con = AllTests.getConnection();\r\n            Statement st = con.createStatement();\r\n            int firstValue = -10000;\r\n            for(int i=firstValue; i<10000; i++){\r\n                st.execute(\"Insert into \" + table + \"(a,b) values(\" + (i/10000.0) + \",\" +(i/10000.0) +\")\");\r\n            }\r\n            st.close();\r\n            verify(firstValue);\r\n    }",
    "cloneID": "d430b48deebb93fe49989bbb7e804e4a",
    "clone": "86c044c8e87b7d121fa0cb1835017527",
    "cloneSize": 10
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/junit/TestMoneyRounding.java",
    "size": 112,
    "example": "n{\r\n\t\t\tConnection con = AllTests.getConnection();\r\n\t\t\tStatement st = con.createStatement();\r\n\t\t\tint firstValue = -10000;\r\n\t\t\tfor(int i=firstValue; i<10000; i++){\r\n\t\t\t\tst.execute(\"Insert into \" + table + \"(a,b) values( (\" + i + \"/10000.0), (\" + i + \"/10000.0) )\");\r\n\t\t\t}\r\n\t\t\tst.close();\r\n\t\t\tverify(firstValue);\r\n\t}",
    "cloneID": "764ca0f794fc368eb702a9d94570e8cd",
    "clone": "485c66acf2ea4f9d20b32a77cb4ffc4b",
    "cloneSize": 10
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunctionReturnInt.java",
    "size": 97,
    "example": "\tObject getObject() throws Exception {\r\n\t\tif(isNull()) return null;\r\n\t\treturn Utils.getInteger(getInt());\r\n\t}",
    "cloneID": "dfb8bedaf51bfd1246d71ce8e142ce46",
    "clone": "f51e5c14cd3d1351440e0540564a2674",
    "cloneSize": 4
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunctionTimestampDiff.java",
    "size": 170,
    "example": "\tObject getObject() throws Exception {\r\n\t\tif(isNull()) return null;\r\n\t\treturn Utils.getInteger(getInt());\r\n\t}",
    "cloneID": "fe6af6133cad805394731077b3a5a411",
    "clone": "f51e5c14cd3d1351440e0540564a2674",
    "cloneSize": 4
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/junit/BenchTest.java",
    "size": 753,
    "example": "y{\r\n                // reset for the next test\r\n                Statement st = con.createStatement();\r\n                st.execute(\"DELETE FROM \" + tableName);\r\n                st.close();\r\n            }",
    "cloneID": "6b0fa02b218ea714507815fad43e0802",
    "clone": "20fc52fa5867640a4bd53c0d8371869d",
    "cloneSize": 6
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/junit/BenchTest.java",
    "size": 753,
    "example": "y{\r\n            Statement st = con.createStatement();\r\n            st.execute(\"DELETE FROM \" + tableName);\r\n            st.close();\r\n        }",
    "cloneID": "f834165e390b612fa467135f98103041",
    "clone": "4aea65e9859b76ef60283465d7a4e6d0",
    "cloneSize": 5
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/junit/TestTransactions.java",
    "size": 509,
    "example": "\tResultSet rs = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE)\r\n\t\t\t\t\t\t\t\t.executeQuery(\"Select * from transactions Where 1=0\");",
    "cloneID": "34732efd43db8255b537b5c4e58ff14a",
    "clone": "9653d12d835aa5392134dac0c48387a1",
    "cloneSize": 2
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/junit/TestTransactions.java",
    "size": 509,
    "example": "\tResultSet rs = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE)\r\n\t\t\t\t\t\t\t\t.executeQuery(\"Select * from transactions Where 1=0\");",
    "cloneID": "846edd8b8062330b4e8e7bfc134385bb",
    "clone": "9653d12d835aa5392134dac0c48387a1",
    "cloneSize": 2
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/SSDatabaseMetaData.java",
    "size": 1039,
    "example": "\tString[] colNames = {\"SCOPE\", \"COLUMN_NAME\", \"DATA_TYPE\", \"TYPE_NAME\", \"COLUMN_SIZE\", \"BUFFER_LENGTH\", \"DECIMAL_DIGITS\", \"PSEUDO_COLUMN\"};\r\n",
    "cloneID": "99857511e83615a503c946b5c9006385",
    "clone": "591a1904cef5087763200375a3cee20d",
    "cloneSize": 1
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/SSDatabaseMetaData.java",
    "size": 1039,
    "example": "\tString[] colNames = {\"SCOPE\", \"COLUMN_NAME\", \"DATA_TYPE\", \"TYPE_NAME\", \"COLUMN_SIZE\", \"BUFFER_LENGTH\", \"DECIMAL_DIGITS\", \"PSEUDO_COLUMN\"};\r\n",
    "cloneID": "9f7b5e0163f6f14dbde9e3009beec46b",
    "clone": "591a1904cef5087763200375a3cee20d",
    "cloneSize": 1
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/junit/TestDBMetaData.java",
    "size": 310,
    "example": " String[] colNames = {\"SCOPE\", \"COLUMN_NAME\", \"DATA_TYPE\", \"TYPE_NAME\", \"COLUMN_SIZE\", \"BUFFER_LENGTH\", \"DECIMAL_DIGITS\", \"PSEUDO_COLUMN\"};\r\n",
    "cloneID": "da043396b2b2b7edf98fa58c05373bdb",
    "clone": "95b5c56792f6435e98827f8039df1092",
    "cloneSize": 1
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/junit/TestJoins.java",
    "size": 218,
    "example": " a(\"datetime\"          , new Timestamp(99, 1,1,0,0,0,0),      new Timestamp(99, 2,2,0,0,0,0)),\r\n",
    "cloneID": "2dd39cd7daf7330ca25e02758a4fda6b",
    "clone": "2952f1fbcce05869186bd8b1af58ebb4",
    "cloneSize": 1
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/junit/TestOperatoren.java",
    "size": 281,
    "example": " a(\"datetime\"          , new Timestamp(99, 1,1,0,0,0,0),      new Timestamp(99, 2,2,0,0,0,0)),\r\n",
    "cloneID": "79bb38b36214d16e748d162e37bc02ba",
    "clone": "2952f1fbcce05869186bd8b1af58ebb4",
    "cloneSize": 1
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/Utils.java",
    "size": 477,
    "example": " (byte)((hexDigit2int( hex[ offset++ ] ) << 4)\r\n                                | hexDigit2int( hex[ offset++ ] ))",
    "cloneID": "20aacb7be96f71707fb305b7e050429e",
    "clone": "5bcc205dcb6f1c4051f635cfbcb77da1",
    "cloneSize": 2
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/Utils.java",
    "size": 477,
    "example": " (byte)((hexDigit2int( hex[ offset++ ] ) << 4)\r\n                                | hexDigit2int( hex[ offset++ ] ))",
    "cloneID": "61ffa199bd7b299d0f6b0d5a4faf0a7c",
    "clone": "5bcc205dcb6f1c4051f635cfbcb77da1",
    "cloneSize": 2
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/junit/TestJoins.java",
    "size": 218,
    "example": " a(\"binary(100)\"       , new byte[]{12, 45, 1},  new byte[]{12, 45, 2, 56, 89}),\r\n",
    "cloneID": "18a84ecb6dbf043555e1375ee76f96b8",
    "clone": "8fd01846e122474413fe85bb072c771b",
    "cloneSize": 1
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/junit/TestOperatoren.java",
    "size": 281,
    "example": " a(\"binary(100)\"       , new byte[]{12, 45, 1},  new byte[]{12, 45, 2, 56, 89}),\r\n",
    "cloneID": "2ddc7854a35a5776ee5b82f08560673f",
    "clone": "8fd01846e122474413fe85bb072c771b",
    "cloneSize": 1
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/junit/TestJoins.java",
    "size": 218,
    "example": " a(\"smalldatetime\"     , new Timestamp(99, 1,1,0,0,0,0),      new Timestamp(99, 2,2,0,0,0,0)),\r\n",
    "cloneID": "2d10aa44e0b7151bf603834cce613289",
    "clone": "957ecb15e587b6c9d32f83f5fdfcf931",
    "cloneSize": 1
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/junit/TestOperatoren.java",
    "size": 281,
    "example": " a(\"smalldatetime\"     , new Timestamp(99, 1,1,0,0,0,0),      new Timestamp(99, 2,2,0,0,0,0)),\r\n",
    "cloneID": "7f771118a66808d0475b588e78d0462d",
    "clone": "957ecb15e587b6c9d32f83f5fdfcf931",
    "cloneSize": 1
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/Command.java",
    "size": 181,
    "example": "}catch(Throwable e){\r\n            con.rollback(savepoint);\r\n            throw SmallSQLException.createFromException(e);\r\n        }",
    "cloneID": "8b4e7c86b5d57ed7bf24f732015e1836",
    "clone": "a311b631c77d3f989080c99c954c5466",
    "cloneSize": 4
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/CommandSelect.java",
    "size": 570,
    "example": "}catch(Throwable e){\r\n\t\t\tcon.rollback(savepoint);\r\n\t\t\tthrow SmallSQLException.createFromException(e);\r\n\t\t}",
    "cloneID": "dabea3109370d044c28cad7f5d80db9e",
    "clone": "ed594d340c1a4614ef08822e36eaf2c0",
    "cloneSize": 4
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/CommandSelect.java",
    "size": 570,
    "example": "}catch(Throwable e){\r\n\t\t\tcon.rollback(savepoint);\r\n\t\t\tthrow SmallSQLException.createFromException(e);\r\n\t\t}",
    "cloneID": "db2f44b5dc14ed5c536f77978af84fd9",
    "clone": "ed594d340c1a4614ef08822e36eaf2c0",
    "cloneSize": 4
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/CommandSelect.java",
    "size": 570,
    "example": "}catch(Throwable e){\r\n\t\t\tcon.rollback(savepoint);\r\n\t\t\tthrow SmallSQLException.createFromException(e);\r\n\t\t}",
    "cloneID": "d3ef0bfa7054b50daaa8830b53d0694c",
    "clone": "ed594d340c1a4614ef08822e36eaf2c0",
    "cloneSize": 4
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunctionRound.java",
    "size": 71,
    "example": "\tif(places > 0){\r\n\t\t\tfor(int i=0; i<places; i++){\r\n\t\t\t\tfactor *= 10;\r\n\t\t\t}\r\n\t\t\tvalue *= factor;\r\n\t\t}else{\r\n\t\t\tfor(int i=0; i>places; i--){\r\n\t\t\t\tfactor *= 10;\r\n\t\t\t}\r\n\t\t\tvalue /= factor;\r\n\t\t}",
    "cloneID": "f0138d8495a3b6ff7b28613064c933ba",
    "clone": "767e6098ab55be1da317023b6d747241",
    "cloneSize": 11
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunctionTruncate.java",
    "size": 71,
    "example": "\tif(places > 0){\r\n\t\t\tfor(int i=0; i<places; i++){\r\n\t\t\t\tfactor *= 10;\r\n\t\t\t}\r\n\t\t\tvalue *= factor;\r\n\t\t}else{\r\n\t\t\tfor(int i=0; i>places; i--){\r\n\t\t\t\tfactor *= 10;\r\n\t\t\t}\r\n\t\t\tvalue /= factor;\r\n\t\t}",
    "cloneID": "7209b4996b60fdfb2757e83849f8342a",
    "clone": "767e6098ab55be1da317023b6d747241",
    "cloneSize": 11
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/Table.java",
    "size": 568,
    "example": "){\r\n\t\t\t\t\t\t\tIterator values = locks.values().iterator();\r\n\t\t\t\t\t\t\twhile(values.hasNext()){\r\n\t\t\t\t\t\t\t\tTableStorePage lock = (TableStorePage)values.next();\r\n\t\t\t\t\t\t\t\tif(lock.con != con) return null;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}",
    "cloneID": "2d559c331386f1d154ec8d891cb3b98d",
    "clone": "9e0cd4232e4542e4f72d1fd3c3fcefde",
    "cloneSize": 7
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/Table.java",
    "size": 568,
    "example": "){\r\n\t\t\t\t\t\t\tIterator values = locks.values().iterator();\r\n\t\t\t\t\t\t\twhile(values.hasNext()){\r\n\t\t\t\t\t\t\t\tTableStorePage lock = (TableStorePage)values.next();\r\n\t\t\t\t\t\t\t\tif(lock.con != con) return null;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}",
    "cloneID": "7b8f209959a2aa42057a8f2edc1e114e",
    "clone": "9e0cd4232e4542e4f72d1fd3c3fcefde",
    "cloneSize": 7
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/Table.java",
    "size": 568,
    "example": "){\r\n                        Iterator values = locks.values().iterator();\r\n                        while(values.hasNext()){\r\n                            TableStorePage lock = (TableStorePage)values.next();\r\n                            if(lock.con != con) return null;\r\n                        }\r\n                    }",
    "cloneID": "28c0f48e7770d1b385a9e64a456de248",
    "clone": "48605f023b46ce26cdae5a1499e4f225",
    "cloneSize": 7
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/junit/TestLanguage.java",
    "size": 286,
    "example": "\tfor (Iterator itr = diff.iterator(); itr.hasNext(); ) {\r\n\t\t\t\t\tmsgBuf.append(itr.next());\r\n\t\t\t\t\tif (itr.hasNext()) msgBuf.append(',');\r\n\t\t\t\t}",
    "cloneID": "6422a2c228ca9bbaa9021f7444af2e9e",
    "clone": "bef74d5a0e233547f04feb03043caf0a",
    "cloneSize": 4
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/junit/TestLanguage.java",
    "size": 286,
    "example": " for (Iterator itr = diff.iterator(); itr.hasNext(); ) {\r\n                    msgBuf.append(itr.next());\r\n                    if (itr.hasNext()) msgBuf.append(',');\r\n                }",
    "cloneID": "161a6acb9e93bb743f5f9509c23be208",
    "clone": "4378896a5eb6cb51039ed47adf70a6c6",
    "cloneSize": 4
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunctionYear.java",
    "size": 54,
    "example": "\tDateTime.Details details = new DateTime.Details(param1.getLong());\r",
    "cloneID": "87128fb19d247c28a39701789bf1e131",
    "clone": "af55146dc6a57a6411ec653e4d870194",
    "cloneSize": 1
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunctionMinute.java",
    "size": 54,
    "example": "\tDateTime.Details details = new DateTime.Details(param1.getLong());\r",
    "cloneID": "0be6751d29c41dc00228839779fcee7d",
    "clone": "af55146dc6a57a6411ec653e4d870194",
    "cloneSize": 1
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunctionDayOfYear.java",
    "size": 54,
    "example": "\tDateTime.Details details = new DateTime.Details(param1.getLong());\r",
    "cloneID": "f575f8d78b90eb96f618795626ebf4c5",
    "clone": "af55146dc6a57a6411ec653e4d870194",
    "cloneSize": 1
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunctionDayOfMonth.java",
    "size": 54,
    "example": "\tDateTime.Details details = new DateTime.Details(param1.getLong());\r",
    "cloneID": "6bc24398c73ee87ab9506e6d7e1d5fca",
    "clone": "af55146dc6a57a6411ec653e4d870194",
    "cloneSize": 1
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunctionHour.java",
    "size": 54,
    "example": "\tDateTime.Details details = new DateTime.Details(param1.getLong());\r",
    "cloneID": "b306c78a836c461a6cf57662be10ab6b",
    "clone": "af55146dc6a57a6411ec653e4d870194",
    "cloneSize": 1
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunctionMonth.java",
    "size": 54,
    "example": "\tDateTime.Details details = new DateTime.Details(param1.getLong());\r",
    "cloneID": "1c54a39cfca86c5739d0075ae053a6a2",
    "clone": "af55146dc6a57a6411ec653e4d870194",
    "cloneSize": 1
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/Index.java",
    "size": 547,
    "example": "\t// the first digit include 0-null; 1-empty; 2 another value\r\n\t\t\tchar digit = (i<0) ? (length == 0 ? (char)1 : 2)\r\n\t\t\t\t\t\t\t  : (key[i]);",
    "cloneID": "5e842c02d32cf93cd0c184b2abeffe9c",
    "clone": "8701cf863e8ea5a898266d9f04cd100d",
    "cloneSize": 3
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/Index.java",
    "size": 547,
    "example": "\t// the first digit include 0-null; 1-empty; 2 another value\r\n\t\t\tchar digit = (i<0) ? (length == 0 ? (char)1 : 2)\r\n\t\t\t\t\t\t\t  : (key[i]);",
    "cloneID": "0109b766d97673b6f7f57be460308ace",
    "clone": "8701cf863e8ea5a898266d9f04cd100d",
    "cloneSize": 3
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/SSDatabaseMetaData.java",
    "size": 1039,
    "example": "\tString[] colNames = {\"TABLE_CAT\",\"TABLE_SCHEM\",\"TABLE_NAME\",\"TABLE_TYPE\",\"REMARKS\",\"TYPE_CAT\",\"TYPE_SCHEM\",\"TYPE_NAME\",\"SELF_REFERENCING_COL_NAME\",\"REF_GENERATION\"};\r",
    "cloneID": "e69040378e9be8c0199c010dbd960cc8",
    "clone": "1c40c8d6bf5a944293033b0368421dba",
    "cloneSize": 1
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/junit/TestDBMetaData.java",
    "size": 310,
    "example": " String[] colNames = {\"TABLE_CAT\",\"TABLE_SCHEM\",\"TABLE_NAME\",\"TABLE_TYPE\",\"REMARKS\",\"TYPE_CAT\",\"TYPE_SCHEM\",\"TYPE_NAME\",\"SELF_REFERENCING_COL_NAME\",\"REF_GENERATION\"};\r\n",
    "cloneID": "a6ffeba170cf6676b91999d4b884dc1f",
    "clone": "bd93495edf3bfdc6d809649b80776e47",
    "cloneSize": 1
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunctionReturnP1StringAndBinary.java",
    "size": 91,
    "example": "\tfinal MutableNumeric getNumeric() throws Exception {\r\n\t\tif(isNull()) return null;\r\n\t\treturn new MutableNumeric(getString().trim());\r\n\t}",
    "cloneID": "8d6445bef2eefdb1cf74ab87c4e6929b",
    "clone": "9c44cd16c745be19560efcbbf0ae94ce",
    "cloneSize": 4
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunctionReturnString.java",
    "size": 93,
    "example": "\tfinal MutableNumeric getNumeric() throws Exception {\r\n\t\tif(isNull()) return null;\r\n\t\treturn new MutableNumeric(getString().trim());\r\n\t}",
    "cloneID": "37acbb54148ee7ccd17237bde06e2c27",
    "clone": "9c44cd16c745be19560efcbbf0ae94ce",
    "cloneSize": 4
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunctionLCase.java",
    "size": 62,
    "example": "\tfinal byte[] getBytes() throws Exception{\r\n        if(isNull()) return null;\r\n        return getString().getBytes();\r\n\t}",
    "cloneID": "879cd4045fd4c12932adeb74218ca146",
    "clone": "4594bf77606f26323bc5a1305eafbcbc",
    "cloneSize": 4
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunctionUCase.java",
    "size": 62,
    "example": "\tfinal byte[] getBytes() throws Exception{\r\n        if(isNull()) return null;\r\n        return getString().getBytes();\r\n\t}",
    "cloneID": "74b5e7960a80872081e05e30f9e5d14d",
    "clone": "4594bf77606f26323bc5a1305eafbcbc",
    "cloneSize": 4
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/StoreImpl.java",
    "size": 1548,
    "example": " StoreImpl store = table.getLobStore( ((TableStorePage)storePage).con, lobFilePos, SQLTokenizer.SELECT );\r\n",
    "cloneID": "69118ca39d001d1b727fc2933b848b25",
    "clone": "33d3cba38641fd835aba92c43ab880bf",
    "cloneSize": 1
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/StoreImpl.java",
    "size": 1548,
    "example": " StoreImpl store = table.getLobStore( ((TableStorePage)storePage).con, lobFilePos, SQLTokenizer.SELECT );\r\n",
    "cloneID": "2660ddee9e8cf41f29dca757ed464021",
    "clone": "33d3cba38641fd835aba92c43ab880bf",
    "cloneSize": 1
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/junit/TestAlterTable.java",
    "size": 117,
    "example": " public void tearDown(){\r\n        try {\r\n            dropTable( AllTests.getConnection(), table );\r\n        } catch (SQLException ex) {\r\n            ex.printStackTrace();\r\n        }\r\n    }",
    "cloneID": "244e3b6172c5a85d8d148a893fdf49bd",
    "clone": "f78c2903c75d8ffe96bf28767abc2e0a",
    "cloneSize": 7
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/junit/TestAlterTable2.java",
    "size": 82,
    "example": " public void tearDown(){\r\n        try {\r\n            dropTable( AllTests.getConnection(), table );\r\n        } catch (SQLException ex) {\r\n            ex.printStackTrace();\r\n        }\r\n    }",
    "cloneID": "db2f5093bf1e3b2b3adbe2bb315391ba",
    "clone": "f78c2903c75d8ffe96bf28767abc2e0a",
    "cloneSize": 7
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunctionReturnP1StringAndBinary.java",
    "size": 91,
    "example": "\tfinal double getDouble() throws Exception {\r\n\t\tif(isNull()) return 0;\r\n\t\treturn Double.parseDouble(getString().trim());\r\n\t}",
    "cloneID": "012343e2309b77639fdad184003af59d",
    "clone": "32d7cfb1a7f1c0aa7248c08cfe4479b9",
    "cloneSize": 4
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunctionReturnString.java",
    "size": 93,
    "example": "\tfinal double getDouble() throws Exception {\r\n\t\tif(isNull()) return 0;\r\n\t\treturn Double.parseDouble(getString().trim());\r\n\t}",
    "cloneID": "7fdd59c5e03be05ceea81199c05ba48b",
    "clone": "32d7cfb1a7f1c0aa7248c08cfe4479b9",
    "cloneSize": 4
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/SSDatabaseMetaData.java",
    "size": 1039,
    "example": "\tString[] colNames = {\"PKTABLE_CAT\", \"PKTABLE_SCHEM\", \"PKTABLE_NAME\", \"PKCOLUMN_NAME\", \"FKTABLE_CAT\", \"FKTABLE_SCHEM\", \"FKTABLE_NAME\", \"FKCOLUMN_NAME\", \"KEY_SEQ\", \"UPDATE_RULE\", \"DELETE_RULE\", \"FK_NAME\", \"PK_NAME\", \"DEFERRABILITY\"};\r\n",
    "cloneID": "1ccfa582a8b7f7d09a736800d1b294a4",
    "clone": "d0d4d6d950e2e7a586ee4144114e6ce1",
    "cloneSize": 1
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/junit/TestDBMetaData.java",
    "size": 310,
    "example": " String[] colNames = {\"PKTABLE_CAT\", \"PKTABLE_SCHEM\", \"PKTABLE_NAME\", \"PKCOLUMN_NAME\", \"FKTABLE_CAT\", \"FKTABLE_SCHEM\", \"FKTABLE_NAME\", \"FKCOLUMN_NAME\", \"KEY_SEQ\", \"UPDATE_RULE\", \"DELETE_RULE\", \"FK_NAME\", \"PK_NAME\", \"DEFERRABILITY\"};\r\n",
    "cloneID": "f6bf23216ad5fdeb41646acf4b5f9706",
    "clone": "c116e34905e5c7fdbc36089acd86313d",
    "cloneSize": 1
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/SSDatabaseMetaData.java",
    "size": 1039,
    "example": "\tString[] colNames = {\"PROCEDURE_CAT\", \"PROCEDURE_SCHEM\", \"PROCEDURE_NAME\", \"COLUMN_NAME\", \"COLUMN_TYPE\", \"DATA_TYPE\", \"TYPE_NAME\", \"PRECISION\", \"LENGTH\", \"SCALE\", \"RADIX\", \"NULLABLE\", \"REMARKS\" };\r",
    "cloneID": "3c2616d646c397fdfb717dfbdf1417bd",
    "clone": "ce9065802b3e219c5603a1493a81b8a9",
    "cloneSize": 1
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/junit/TestDBMetaData.java",
    "size": 310,
    "example": " String[] colNames = {\"PROCEDURE_CAT\", \"PROCEDURE_SCHEM\", \"PROCEDURE_NAME\", \"COLUMN_NAME\", \"COLUMN_TYPE\", \"DATA_TYPE\", \"TYPE_NAME\", \"PRECISION\", \"LENGTH\", \"SCALE\", \"RADIX\", \"NULLABLE\", \"REMARKS\" };\r\n",
    "cloneID": "e515a4c0453df9a8abf145c1cd762ace",
    "clone": "a5a9200a09ba0aa1bff3d3b1e4398da5",
    "cloneSize": 1
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/junit/TestMoneyRounding.java",
    "size": 112,
    "example": " public void tearDown(){\r\n        try{\r\n            Connection con = AllTests.getConnection();\r\n            Statement st = con.createStatement();\r\n            st.execute(\"drop table \" + table);\r\n            st.close();\r\n        }catch(Throwable e){\r\n            //e.printStackTrace();\r\n        }\r\n    }",
    "cloneID": "a646f5154e8d60c1e554160769718a43",
    "clone": "5ccda0ea5f881cbc68e5571506e34f37",
    "cloneSize": 10
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/junit/TestDataTypes.java",
    "size": 338,
    "example": " public void tearDown(){\r\n        try{\r\n            Connection con = AllTests.getConnection();\r\n            Statement st = con.createStatement();\r\n            st.execute(\"drop table \" + table);\r\n            st.close();\r\n        }catch(Throwable e){\r\n            //e.printStackTrace();\r\n        }\r\n    }",
    "cloneID": "2ce807ad66743d61d83adb4cbec507b1",
    "clone": "5ccda0ea5f881cbc68e5571506e34f37",
    "cloneSize": 10
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/junit/TestFunctions.java",
    "size": 418,
    "example": " public void tearDown(){\r\n        try{\r\n            Connection con = AllTests.getConnection();\r\n            Statement st = con.createStatement();\r\n            st.execute(\"drop table \" + table);\r\n            st.close();\r\n        }catch(Throwable e){\r\n            //e.printStackTrace();\r\n        }\r\n    }",
    "cloneID": "732180d1f1ae537ac291ac4f10069245",
    "clone": "5ccda0ea5f881cbc68e5571506e34f37",
    "cloneSize": 10
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/junit/TestOperatoren.java",
    "size": 281,
    "example": " public void tearDown(){\r\n        try{\r\n            Connection con = AllTests.getConnection();\r\n            Statement st = con.createStatement();\r\n            st.execute(\"drop table \" + table);\r\n            st.close();\r\n        }catch(Throwable e){\r\n            //e.printStackTrace();\r\n        }\r\n    }",
    "cloneID": "025443a7e3cff023d64858e33dc1293c",
    "clone": "5ccda0ea5f881cbc68e5571506e34f37",
    "cloneSize": 10
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/junit/BenchTest.java",
    "size": 753,
    "example": " java.io.File file = new java.io.File(tableName+\".bin\");\r\n",
    "cloneID": "e8fae5f9b995b1128b1c6bea65e01269",
    "clone": "ce455c7b740c1757ea8969d877a360f6",
    "cloneSize": 1
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/junit/BenchTest.java",
    "size": 753,
    "example": " java.io.File file = new java.io.File(tableName+\".bin\");\r\n",
    "cloneID": "9af12d07e150ab7e19123e4bd730e944",
    "clone": "ce455c7b740c1757ea8969d877a360f6",
    "cloneSize": 1
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/Money.java",
    "size": 141,
    "example": "){\r\n        Money money = new Money();\r\n        money.value = value;\r\n        return money;\r\n    }",
    "cloneID": "bf0730c94afabfd7a1b77c6274cb5253",
    "clone": "775f18b9dfa82be9218f369f88a0ecf2",
    "cloneSize": 5
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/Money.java",
    "size": 141,
    "example": "){\r\n        Money money = new Money();\r\n        money.value = value;\r\n        return money;\r\n    }",
    "cloneID": "f7cf738e85859b0351c12dadcd896461",
    "clone": "775f18b9dfa82be9218f369f88a0ecf2",
    "cloneSize": 5
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/junit/TestScrollable.java",
    "size": 319,
    "example": " try{\r\n            rs.getString(\"v\");\r\n            fail(\"SQLException 'No current row' should be throw\");\r\n        }catch(SQLException ex){\r\n            assertSQLException( \"01000\", 0, ex );\r\n        }",
    "cloneID": "9c340a18778aa82796c821944a80126c",
    "clone": "9e8b6213362c60bd2c4149262010cedd",
    "cloneSize": 6
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/junit/TestScrollable.java",
    "size": 319,
    "example": " try{\r\n            rs.getString(\"v\");\r\n            fail(\"SQLException 'No current row' should be throw\");\r\n        }catch(SQLException ex){\r\n            assertSQLException( \"01000\", 0, ex);\r\n        }",
    "cloneID": "511e49b3fd4b10fb6e6fa84f33c1d4f1",
    "clone": "66b4c19b50daef42b7c18dd127d7bf5f",
    "cloneSize": 6
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/junit/TestScrollable.java",
    "size": 319,
    "example": " try{\r\n            rs.getString(\"v\");\r\n            fail(\"SQLException 'No current row' should be throw\");\r\n        }catch(SQLException ex){\r\n            assertSQLException(\"01000\", 0, ex);\r\n        }",
    "cloneID": "83bbc298f4b4f6563ecca5f812535adf",
    "clone": "6efaefb946d2eb71b1bde7848dbc6fb9",
    "cloneSize": 6
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/junit/TestScrollable.java",
    "size": 319,
    "example": " try{\r\n            rs.getString(\"v\");\r\n            fail(\"SQLException 'No current row' should be throw\");\r\n        }catch(SQLException ex){\r\n            assertSQLException(\"01000\", 0, ex);\r\n        }",
    "cloneID": "2ec7765377463c84e962452be49d16a7",
    "clone": "6efaefb946d2eb71b1bde7848dbc6fb9",
    "cloneSize": 6
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/Index.java",
    "size": 547,
    "example": "\t// the first digit include 0-null; 1-empty; 2 another value\r\n\t\t\tchar digit = (i<0) ? (length == 0 ? (char)1 : 2)\r\n\t\t\t\t\t\t\t  : (key[i]);",
    "cloneID": "5e842c02d32cf93cd0c184b2abeffe9c",
    "clone": "8701cf863e8ea5a898266d9f04cd100d",
    "cloneSize": 3
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/Index.java",
    "size": 547,
    "example": "\t// the first digit include 0-null; 1-empty; 2 another value\r\n\t\t\tchar digit = (i<0) ? (length == 0 ? (char)1 : 2)\r\n\t\t\t\t\t\t\t  : (key[i]);",
    "cloneID": "0109b766d97673b6f7f57be460308ace",
    "clone": "8701cf863e8ea5a898266d9f04cd100d",
    "cloneSize": 3
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/TableResult.java",
    "size": 406,
    "example": "\tstore = ((StorePageLink)insertStorePages.get( (int)(filePos & 0x3FFFFFFFFFFFFFFFL) )).getStore( table, con, lock);\r\n",
    "cloneID": "77804700dbc1e322d1a7f2da1fb6f4c2",
    "clone": "ec72b560ae5eaadcbeb9ef7f2790b9c7",
    "cloneSize": 1
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/TableResult.java",
    "size": 406,
    "example": "\tstore = ((StorePageLink)insertStorePages.get( (int)(filePos & 0x3FFFFFFFFFFFFFFFL) )).getStore( table, con, lock);\r\n",
    "cloneID": "bac87d16c51e48e9348f67e50f1447ea",
    "clone": "ec72b560ae5eaadcbeb9ef7f2790b9c7",
    "cloneSize": 1
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunctionTimestampDiff.java",
    "size": 170,
    "example": "\tDateTime.Details details1 = new DateTime.Details(param1.getLong());\r\n",
    "cloneID": "36d1024bc1356012921058efef9b5903",
    "clone": "8912000eb0d87030bf881a2b916e441d",
    "cloneSize": 1
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunctionTimestampDiff.java",
    "size": 170,
    "example": "\tDateTime.Details details1 = new DateTime.Details(param1.getLong());\r\n",
    "cloneID": "4d5004828c5946c9010f1078cce48e62",
    "clone": "8912000eb0d87030bf881a2b916e441d",
    "cloneSize": 1
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunctionTimestampDiff.java",
    "size": 170,
    "example": "\tDateTime.Details details1 = new DateTime.Details(param1.getLong());\r\n",
    "cloneID": "e2db56573c6d6b57eec87d091a1bd08f",
    "clone": "8912000eb0d87030bf881a2b916e441d",
    "cloneSize": 1
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/junit/TestTransactions.java",
    "size": 509,
    "example": "y{\r\n\t\t\ttry{\r\n\t\t\t\tcon.createStatement().execute(\"Drop Table transactions\");\r\n\t\t\t}catch(Throwable e){e.printStackTrace();}\r\n\t\t\tcon.setAutoCommit(true);\r\n\t\t}",
    "cloneID": "1136ae50ae258c5d2a51a69ca60ce150",
    "clone": "2a55e26081f975f6244188b105ac1a60",
    "cloneSize": 6
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/junit/TestTransactions.java",
    "size": 509,
    "example": "y{\r\n\t\t\ttry{\r\n\t\t\t\tcon.createStatement().execute(\"Drop Table transactions\");\r\n\t\t\t}catch(Throwable e){e.printStackTrace();}\r\n\t\t\tcon.setAutoCommit(true);\r\n\t\t}",
    "cloneID": "24db4af430135bfc0d90c331a24cfa44",
    "clone": "2a55e26081f975f6244188b105ac1a60",
    "cloneSize": 6
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/junit/TestTransactions.java",
    "size": 509,
    "example": "y{\r\n\t\t\ttry{\r\n\t\t\t\tcon.createStatement().execute(\"Drop Table transactions\");\r\n\t\t\t}catch(Throwable e){e.printStackTrace();}\r\n\t\t\tcon.setAutoCommit(true);\r\n\t\t}",
    "cloneID": "ad79bfedb4a0c9cf224fb97d35e19173",
    "clone": "2a55e26081f975f6244188b105ac1a60",
    "cloneSize": 6
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/junit/TestTransactions.java",
    "size": 509,
    "example": "y{\r\n\t\t\ttry{\r\n\t\t\t\tcon.createStatement().execute(\"Drop Table transactions\");\r\n\t\t\t}catch(Throwable e){e.printStackTrace();}\r\n\t\t\tcon.setAutoCommit(true);\r\n\t\t}",
    "cloneID": "475348dc6664089fb22e0770bc2a34de",
    "clone": "2a55e26081f975f6244188b105ac1a60",
    "cloneSize": 6
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/junit/TestTransactions.java",
    "size": 509,
    "example": "y{\r\n\t\t\ttry{\r\n\t\t\t\tcon.createStatement().execute(\"Drop Table transactions\");\r\n\t\t\t}catch(Throwable e){e.printStackTrace();}\r\n\t\t\tcon.setAutoCommit(true);\r\n\t\t}",
    "cloneID": "0a2f7fadba5f8bb538f7f6a01f66e344",
    "clone": "2a55e26081f975f6244188b105ac1a60",
    "cloneSize": 6
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/junit/TestTransactions.java",
    "size": 509,
    "example": "y{\r\n\t\t\ttry{\r\n\t\t\t\tcon.createStatement().execute(\"Drop Table transactions\");\r\n\t\t\t}catch(Throwable e){e.printStackTrace();}\r\n\t\t\tcon.setAutoCommit(true);\r\n\t\t}",
    "cloneID": "f9c0a62f9c35f2868527981a6be9d260",
    "clone": "2a55e26081f975f6244188b105ac1a60",
    "cloneSize": 6
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/junit/TestAlterTable2.java",
    "size": 82,
    "example": " assertRSMetaData( rs, new String[]{\"a\", \"b\"},  new int[]{Types.VARCHAR, Types.VARCHAR} );\r\n",
    "cloneID": "2a24043568499ed51709596f661a2da9",
    "clone": "b8ffa3b98e66ac254ba036edb00a7716",
    "cloneSize": 1
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/junit/TestAlterTable2.java",
    "size": 82,
    "example": " assertRSMetaData( rs, new String[]{\"a\", \"b\"},  new int[]{Types.VARCHAR, Types.VARCHAR} );\r\n",
    "cloneID": "8e3fc9fdd63c8474876c9b62a6303b74",
    "clone": "b8ffa3b98e66ac254ba036edb00a7716",
    "cloneSize": 1
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/SSDatabaseMetaData.java",
    "size": 1039,
    "example": "\tString[] colNames = {\"PKTABLE_CAT\", \"PKTABLE_SCHEM\", \"PKTABLE_NAME\", \"PKCOLUMN_NAME\", \"FKTABLE_CAT\", \"FKTABLE_SCHEM\", \"FKTABLE_NAME\", \"FKCOLUMN_NAME\", \"KEY_SEQ\", \"UPDATE_RULE\", \"DELETE_RULE\", \"FK_NAME\", \"PK_NAME\", \"DEFERRABILITY\"};\r\n",
    "cloneID": "1ccfa582a8b7f7d09a736800d1b294a4",
    "clone": "d0d4d6d950e2e7a586ee4144114e6ce1",
    "cloneSize": 1
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/junit/TestDBMetaData.java",
    "size": 310,
    "example": " String[] colNames = {\"PKTABLE_CAT\", \"PKTABLE_SCHEM\", \"PKTABLE_NAME\", \"PKCOLUMN_NAME\", \"FKTABLE_CAT\", \"FKTABLE_SCHEM\", \"FKTABLE_NAME\", \"FKCOLUMN_NAME\", \"KEY_SEQ\", \"UPDATE_RULE\", \"DELETE_RULE\", \"FK_NAME\", \"PK_NAME\", \"DEFERRABILITY\"};\r\n",
    "cloneID": "f6bf23216ad5fdeb41646acf4b5f9706",
    "clone": "c116e34905e5c7fdbc36089acd86313d",
    "cloneSize": 1
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunctionReturnP1StringAndBinary.java",
    "size": 91,
    "example": "\tfinal float getFloat() throws Exception {\r\n\t\tif(isNull()) return 0;\r\n\t\treturn Float.parseFloat(getString().trim());\r\n\t}",
    "cloneID": "0f24c39e6897473a661e352091288ffe",
    "clone": "08f5635ac4fd4923b4d19f5936968447",
    "cloneSize": 4
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/ExpressionFunctionReturnString.java",
    "size": 93,
    "example": "\tfinal float getFloat() throws Exception {\r\n\t\tif(isNull()) return 0;\r\n\t\treturn Float.parseFloat(getString().trim());\r\n\t}",
    "cloneID": "0cae6e3f2a987cbdc10c9cae184014a5",
    "clone": "08f5635ac4fd4923b4d19f5936968447",
    "cloneSize": 4
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/IndexDescriptions.java",
    "size": 141,
    "example": "){\r\n\t\t// SAVER: use SmallSQLException\r\n\t\tif (idx >= size)\r\n\t\t\tthrow new IndexOutOfBoundsException(\"Column index: \"+idx+\", Size: \"+size);\r\n\t\treturn data[idx];\r\n\t}",
    "cloneID": "8fe343ba18341fa150fc56847723ae40",
    "clone": "d7a1caa8042a6e00cf45060e3d48504a",
    "cloneSize": 6
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/ForeignKeys.java",
    "size": 76,
    "example": "){\r\n\t\tif (idx >= size)\r\n\t\t\tthrow new IndexOutOfBoundsException(\"Column index: \"+idx+\", Size: \"+size);\r\n\t\treturn data[idx];\r\n\t}",
    "cloneID": "fd4b3c11e68bde6b1857fdcf56b81ce6",
    "clone": "1fc3f2e3ca95c2cf40770f7b310265b6",
    "cloneSize": 5
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/Strings.java",
    "size": 84,
    "example": "){\r\n\t\tif (idx >= size)\r\n\t\t\tthrow new IndexOutOfBoundsException(\"Column index: \"+idx+\", Size: \"+size);\r\n\t\treturn data[idx];\r\n\t}",
    "cloneID": "6bb7e9d5591efaf0ead26f1715ce90c6",
    "clone": "1fc3f2e3ca95c2cf40770f7b310265b6",
    "cloneSize": 5
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/Columns.java",
    "size": 161,
    "example": "){\r\n\t\tif (idx >= size)\r\n\t\t\tthrow new IndexOutOfBoundsException(\"Column index: \"+idx+\", Size: \"+size);\r\n\t\treturn data[idx];\r\n\t}",
    "cloneID": "07305ca95ccbab5f7e17a6ac2e2e3286",
    "clone": "1fc3f2e3ca95c2cf40770f7b310265b6",
    "cloneSize": 5
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/SSDatabaseMetaData.java",
    "size": 1039,
    "example": "\tString[] colNames = {\t\t\"TYPE_NAME\", \t\t\t\t\"DATA_TYPE\", \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"PRECISION\", \t\"LITERAL_PREFIX\", \"LITERAL_SUFFIX\", \t\t\"CREATE_PARAMS\", \"NULLABLE\", \t \"CASE_SENSITIVE\", \"SEARCHABLE\", \"UNSIGNED_ATTRIBUTE\", \"FIXED_PREC_SCALE\", \"AUTO_INCREMENT\", \"LOCAL_TYPE_NAME\", \"MINIMUM_SCALE\", \"MAXIMUM_SCALE\", \"SQL_DATA_TYPE\", \"SQL_DATETIME_SUB\", \"NUM_PREC_RADIX\"};\r",
    "cloneID": "9f357964356483b0a1c0f60bce026774",
    "clone": "68c09a0367b3016c1bac10515b34bc2f",
    "cloneSize": 1
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/junit/TestDBMetaData.java",
    "size": 310,
    "example": " String[] colNames = {\"TYPE_NAME\", \"DATA_TYPE\", \"PRECISION\", \"LITERAL_PREFIX\", \"LITERAL_SUFFIX\", \"CREATE_PARAMS\", \"NULLABLE\", \"CASE_SENSITIVE\", \"SEARCHABLE\", \"UNSIGNED_ATTRIBUTE\", \"FIXED_PREC_SCALE\", \"AUTO_INCREMENT\", \"LOCAL_TYPE_NAME\", \"MINIMUM_SCALE\", \"MAXIMUM_SCALE\", \"SQL_DATA_TYPE\", \"SQL_DATETIME_SUB\", \"NUM_PREC_RADIX\"};\r\n",
    "cloneID": "4a7e3a0816541123f5ae0c7367327ccd",
    "clone": "325ed4732f0b8a64c847f02c92587342",
    "cloneSize": 1
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/IndexDescription.java",
    "size": 278,
    "example": "}catch(Throwable e){\r\n            if(raFile != null)\r\n                try{\r\n                    raFile.close();\r\n                }catch(Exception e2){\r\n                    DriverManager.println(e2.toString());\r\n                }\r\n            throw SmallSQLException.createFromException(e);\r\n        }",
    "cloneID": "d1a7763a39691c274b106bbc1b4cc921",
    "clone": "eff78f72f2723c864aa5f0092843a3f2",
    "cloneSize": 9
  },
  {
    "path": "/home/jan/Nextcloud/uni/SEvolution/series2-Jan/smallsql/smallsql0.21_src/src/smallsql/database/TableView.java",
    "size": 194,
    "example": "}catch(Throwable e){\r\n\t\t\tif(raFile != null)\r\n\t\t\t\ttry{\r\n\t\t\t\t\traFile.close();\r\n\t\t\t\t}catch(Exception e2){\r\n\t\t\t\t\tDriverManager.println(e2.toString());\r\n\t\t\t\t}\r\n\t\t\tthrow SmallSQLException.createFromException(e);\r\n\t\t}",
    "cloneID": "2dc832888eaf3b638cb26b3417de2f63",
    "clone": "a62683f5c97ba0e7b6306a2819110acb",
    "cloneSize": 9
  }
]